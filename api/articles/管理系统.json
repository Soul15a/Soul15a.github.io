{"title":"管理系统","uid":"6b8761b75a3e69e310b59f8795d376ea","slug":"管理系统","date":"2022-05-04T02:38:52.000Z","updated":"2022-05-07T08:51:45.065Z","comments":true,"path":"api/articles/管理系统.json","keywords":null,"cover":null,"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本管理系统基于</p>\n<p>MVC框架、数据库(Mysql)、Ajax</p>\n<p>前端：html、css、js、JQuery、layer事件模板框架</p>\n<p>数据库分页使用了Bootstrap</p>\n<p>由于时间问题以及对前端的不熟悉，所以本系统套用了别人的前端模板，根据自己需要进行了修改。</p>\n<p>MVC框架并没有使用现成的而是跟着视频手敲的</p>\n<p>对于此系统，我先对所使用的技术栈进行介绍，然后再对整个系统逐一讲解</p>\n<h2 id=\"技术栈介绍-后端\"><a href=\"#技术栈介绍-后端\" class=\"headerlink\" title=\"技术栈介绍(后端)\"></a>技术栈介绍(后端)</h2><h3 id=\"JavaWeb\"><a href=\"#JavaWeb\" class=\"headerlink\" title=\"JavaWeb\"></a>JavaWeb</h3><h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>Java Web，是用Java技术来解决相关web互联网领域的技术栈。web包括：web服务端和web客户端两部分。Java在客户端的应用有Java Applet，不过使用得很少，Java在服务器端的应用非常的丰富，比如Servlet，JSP、第三方框架等等。Java技术对Web领域的发展注入了强大的动力。</p>\n<p>Internet上供外界访问的Web资源分为：静态web资源（如html 页面）：指web页面中供人们浏览的数据始终是不变。动态web资源：指web页面中供人们浏览的数据是由程序产生的，不同时间点访问web页面看到的内容各不相同。静态web资源开发技术：HTML、CSS。动态web资源开发技术：JavaScript、JSP&#x2F;Servlet、ASP、PHP等。在Java中，动态web资源开发技术统称为Java Web。</p>\n<h4 id=\"项目步骤\"><a href=\"#项目步骤\" class=\"headerlink\" title=\"项目步骤\"></a>项目步骤</h4><p>搭建Java Web应用的开发环境—–部署Tomcat服务器、用eclipse（本系统使用idea）创建Server服务、构建Java Web项目、建立第一个JSP文件、 运行JSP文件。</p>\n<p>第一个要点是掌握tomcat的安装和部署。在Windows系统上安装Tomcat相对简单，下载压缩包解压缩到任意目录即可（目录名称不要含有中文字符）。进入tomcat的bin目录，可以直接运行startup.bat启动tomcat服务。</p>\n<p>第二个要点是在eclipse中添加Server服务。把tomcat与eclipse进行关联，方便eclipse管理tomcat。</p>\n<p>第三个要点是构建Java Web项目。Web项目开发的第一步就是要建立项目。在新建Project项目时，选择Dynamic Web Project项目类型，即可创建Web项目。</p>\n<p>第四个要点是建立的项目如何在Server中运行。选择要运行的JSP文件，单击右键，在弹出的菜单中选择Run on Server命令即可，初次运行项目时，需要配置项目在哪个Server中运行（如有多个Server）。</p>\n<h4 id=\"主要框架\"><a href=\"#主要框架\" class=\"headerlink\" title=\"主要框架\"></a>主要框架</h4><p>Java的Web框架虽然各不相同，但基本也都是遵循特定的路数的：使用Servlet或者Filter拦截请求，使用MVC的思想设计架构，使用约定，XML或 Annotation实现配置，运用Java面向对象的特点，面向对象实现请求和响应的流程，支持Jsp，Freemarker，Velocity等视图。</p>\n<h5 id=\"JSP优点\"><a href=\"#JSP优点\" class=\"headerlink\" title=\"JSP优点\"></a>JSP优点</h5><ol>\n<li>Java EE标准，这意味着有很大的市场需求和更多的工作机会</li>\n<li>上手快速并且相对容易</li>\n<li>有大量可用的组件库<h5 id=\"JSP缺点\"><a href=\"#JSP缺点\" class=\"headerlink\" title=\"JSP缺点\"></a>JSP缺点</h5></li>\n<li>大量的JSP标签</li>\n<li>对REST和安全支持不好</li>\n<li>没有一个统一的实现。既有SUN的实现，又有Apache的实现——MyFaces。<h5 id=\"Spring-MVC优点\"><a href=\"#Spring-MVC优点\" class=\"headerlink\" title=\"Spring MVC优点\"></a>Spring MVC优点</h5></li>\n<li>对Spring MVC覆盖绑定（overriding binding）、验证（validation）等提供生命周期管理</li>\n<li>与许多表示层技术&#x2F;框架无缝集成：JSP&#x2F;JSTL、Tiles、Velocity、FreeMarker、Excel、XSL、PDF 等</li>\n<li>便于测试——归功于IoC</li>\n<li>Spring MVC缺点</li>\n<li>大量的XML配置文件</li>\n<li>太过灵活——没有公共的父控制器</li>\n<li>没有内置的Ajax支持<h5 id=\"Stripes优点\"><a href=\"#Stripes优点\" class=\"headerlink\" title=\"Stripes优点\"></a>Stripes优点</h5></li>\n<li>不需要书写XML配置文件</li>\n<li>良好的学习文档</li>\n<li>社区成员很热心<h5 id=\"Stripes缺点\"><a href=\"#Stripes缺点\" class=\"headerlink\" title=\"Stripes缺点\"></a>Stripes缺点</h5></li>\n<li>社区比较小</li>\n<li>不如其他的项目活跃</li>\n<li>ActionBean里面的URL是硬编码的<h5 id=\"Struts-2优点\"><a href=\"#Struts-2优点\" class=\"headerlink\" title=\"Struts 2优点\"></a>Struts 2优点</h5></li>\n<li>架构简单——易于扩展</li>\n<li>标记库很容易利用FreeMarker或者Velocity来定制</li>\n<li>基于控制器或者基于页面的导航<h5 id=\"Struts-2缺点\"><a href=\"#Struts-2缺点\" class=\"headerlink\" title=\"Struts 2缺点\"></a>Struts 2缺点</h5></li>\n<li>文档组织得很差</li>\n<li>对新特征过分关注<h5 id=\"Tapestry优点\"><a href=\"#Tapestry优点\" class=\"headerlink\" title=\"Tapestry优点\"></a>Tapestry优点</h5></li>\n<li>一旦学会它，将极大地提高生产率</li>\n<li>HTML模板——对页面设计师非常有利</li>\n<li>每出一个新版本，都会有大量的创新<h5 id=\"Tapestry缺点\"><a href=\"#Tapestry缺点\" class=\"headerlink\" title=\"Tapestry缺点\"></a>Tapestry缺点</h5></li>\n<li>文档过于概念性，不够实用</li>\n<li>学习曲线陡峭</li>\n<li>发行周期长——每年都有较大的升级<h5 id=\"Wicket优点\"><a href=\"#Wicket优点\" class=\"headerlink\" title=\"Wicket优点\"></a>Wicket优点</h5></li>\n<li>对Java开发者有利（不是Web开发者）</li>\n<li>页面和显示绑定紧密</li>\n<li>社区活跃——有来自创建者的支持<h5 id=\"Wicket缺点\"><a href=\"#Wicket缺点\" class=\"headerlink\" title=\"Wicket缺点\"></a>Wicket缺点</h5></li>\n<li>HTML模板和Java代码紧挨着</li>\n<li>需要对OO有较好的理解</li>\n<li>Wicket逻辑——什么都用Java搞定</li>\n</ol>\n<h3 id=\"MVC框架\"><a href=\"#MVC框架\" class=\"headerlink\" title=\"MVC框架\"></a>MVC框架</h3><h4 id=\"简介-1\"><a href=\"#简介-1\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>MVC开始是存在于桌面程序中的，M是指业务模型，V是指用户界面，C则是控制器，使用MVC的目的是将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式。比如一批统计数据可以分别用柱状图、饼图来表示。C存在的目的则是确保M和V的同步，一旦M改变，V应该同步更新。 </p>\n<p>模型－视图－控制器（MVC）是Xerox PARC在二十世纪八十年代为编程语言Smalltalk－80发明的一种软件设计模式，已被广泛使用。后来被推荐为Oracle旗下Sun公司Java EE平台的设计模式，并且受到越来越多的使用ColdFusion和PHP的开发者的欢迎。模型－视图－控制器模式是一个有用的工具箱，它有很多好处，但也有一些缺点。</p>\n<h4 id=\"MVC-编程模式\"><a href=\"#MVC-编程模式\" class=\"headerlink\" title=\"MVC 编程模式\"></a>MVC 编程模式</h4><p>M即model模型是指模型表示业务规则。在MVC的三个部件中，模型拥有最多的处理任务。被模型返回的数据是中立的，模型与数据格式无关，这样一个模型能为多个视图提供数据，由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。</p>\n<p>V即View视图是指用户看到并与之交互的界面。比如由html元素组成的网页界面，或者软件的客户端界面。MVC的好处之一在于它能为应用程序处理很多不同的视图。在视图中其实没有真正的处理发生，它只是作为一种输出数据并允许用户操作的方式。</p>\n<p>C即controller控制器是指控制器接受用户的输入并调用模型和视图去完成用户的需求，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后再确定用哪个视图来显示返回的数据。</p>\n<h4 id=\"框架内容\"><a href=\"#框架内容\" class=\"headerlink\" title=\"框架内容\"></a>框架内容</h4><p>MVC指MVC模式的某种框架，它强制性地使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型、视图、控制器。它们各自处理自己的任务。最典型的MVC就是JSP + servlet + javabean的模式。</p>\n<h5 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h5><p>视图是用户看到并与之交互的界面。对老式的Web应用程序来说，视图就是由HTML元素组成的界面，在新式的Web应用程序中，HTML依旧在视图中扮演着重要的角色，但一些新的技术已层出不穷，它们包括Adobe Flash和像XHTML，XML&#x2F;XSL,WML等一些标识语言和Web services.</p>\n<p>MVC好处是它能为应用程序处理很多不同的视图。在视图中其实没有真正的处理发生，不管这些数据是联机存储的还是一个雇员列表，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式。 </p>\n<h5 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h5><p>模型表示企业数据和业务规则。在MVC的三个部件中，模型拥有最多的处理任务。例如它可能用像EJBs和ColdFusion Components这样的构件对象来处理数据库，被模型返回的数据是中立的，就是说模型与数据格式无关，这样一个模型能为多个视图提供数据，由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。 </p>\n<h5 id=\"控制器\"><a href=\"#控制器\" class=\"headerlink\" title=\"控制器\"></a>控制器</h5><p>控制器接受用户的输入并调用模型和视图去完成用户的需求，所以当单击Web页面中的超链接和发送HTML表单时，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后再确定用哪个视图来显示返回的数据。</p>\n<h4 id=\"主要区别\"><a href=\"#主要区别\" class=\"headerlink\" title=\"主要区别\"></a>主要区别</h4><p> 框架和设计模式的区别</p>\n<p>MVC是一种框架模式。<br>框架、设计模式这两个概念总容易被混淆，其实它们之间还是有区别的。框架通常是代码重用，而设计模式是设计重用，架构则介于两者之间，部分代码重用，部分设计重用，有时分析也可重用。在软件生产中有三种级别的重用：内部重用，即在同一应用中能公共使用的抽象块;代码重用，即将通用模块组合成库或工具集，以便在多个应用和领域都能使用；应用框架的重用，即为专用领域提供通用的或现成的基础结构，以获得最高级别的重用性。</p>\n<p>框架与设计模式虽然相似，但却有着根本的不同。设计模式是对在某种环境中反复出现的问题以及解决该问题的方案的描述，它比框架更抽象；框架可以用代码表示，也能直接执行或复用，而对模式而言只有实例才能用代码表示;设计模式是比框架更小的元素，一个框架中往往含有一个或多个设计模式，框架总是针对某一特定应用领域，但同一模式却可适用于各种应用。可以说，框架是软件，而设计模式是软件的知识。</p>\n<p>框架模式有哪些？</p>\n<p>MVC、MTV、MVP、CBD、ORM等等；</p>\n<p>框架有哪些？</p>\n<p>C++语言的QT、MFC、gtk，Java语言的SSH 、SSI，php语言的 smarty(MVC模式)，python语言的django(MTV模式)等等</p>\n<p>设计模式有哪些？</p>\n<p>工厂模式、适配器模式、策略模式等等</p>\n<p>简而言之：框架是大智慧，用来对软件设计进行分工；设计模式是小技巧，对具体问题提出解决方案，以提高代码复用率，降低耦合度</p>\n<h3 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h3><h4 id=\"简介-2\"><a href=\"#简介-2\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p>\n<p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p>\n<p>MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。</p>\n<h4 id=\"应用环境\"><a href=\"#应用环境\" class=\"headerlink\" title=\"应用环境\"></a>应用环境</h4><p>与其他的大型数据库例如 Oracle、DB2、SQL Server等相比，MySQL自有它的不足之处，但是这丝毫也没有减少它受欢迎的程度。对于一般的个人使用者和中小型企业来说，MySQL提供的功能已经绰绰有余，而且由于 MySQL是开放源码软件，因此可以大大降低总体拥有成本。</p>\n<p>Linux作为操作系统，Apache 或Nginx作为 Web 服务器，MySQL 作为数据库，PHP&#x2F;Perl&#x2F;Python作为服务器端脚本解释器。由于这四个软件都是免费或开放源码软件（FLOSS)，因此使用这种方式不用花一分钱（除开人工成本）就可以建立起一个稳定、免费的网站系统，被业界称为“LAMP“或“LNMP”组合。</p>\n<h4 id=\"系统特性\"><a href=\"#系统特性\" class=\"headerlink\" title=\"系统特性\"></a>系统特性</h4><ol>\n<li>MySQL使用 C和 C++编写，并使用了多种编译器进行测试，保证了源代码的可移植性。</li>\n<li>支持 AIX、FreeBSD、HP-UX、Linux、Mac OS、NovellNetware、OpenBSD、OS&#x2F;2 Wrap、Solaris、Windows等多种操作系统。</li>\n<li>为多种编程语言提供了 API。这些编程语言包括 C、C++、Python、Java、Perl、PHP、Eiffel、Ruby,.NET和 Tcl 等。</li>\n<li>支持多线程，充分利用 CPU 资源。</li>\n<li>优化的 SQL查询算法，有效地提高查询速度。</li>\n<li>既能够作为一个单独的应用程序应用在客户端服务器网络环境中，也能够作为一个库而嵌入到其他的软件中。</li>\n<li>提供多语言支持，常见的编码如中文的 GB 2312、BIG5，日文的 Shift_JIS等都可以用作数据表名和数据列名。</li>\n<li>提供 TCP&#x2F;IP、ODBC 和 JDBC等多种数据库连接途径。</li>\n<li>提供用于管理、检查、优化数据库操作的管理工具。</li>\n<li>支持大型的数据库。可以处理拥有上千万条记录的大型数据库。</li>\n<li>支持多种存储引擎。</li>\n<li>MySQL 是开源的，所以你不需要支付额外的费用。</li>\n<li>MySQL 使用标准的 SQL数据语言形式。</li>\n<li>MySQL 对 PHP 有很好的支持，PHP是比较流行的 Web 开发语言。</li>\n<li>MySQL是可以定制的，采用了 GPL协议，你可以修改源码来开发自己的 MySQL 系统。</li>\n<li>在线 DDL&#x2F;更改功能，数据架构支持动态应用程序和开发人员灵活性（5.6新增）</li>\n<li>复制全局事务标识，可支持自我修复式集群（5.6新增）</li>\n<li>复制无崩溃从机，可提高可用性（5.6新增）</li>\n<li>复制多线程从机，可提高性能（5.6新增）</li>\n<li>3倍更快的性能（5.7   新增）</li>\n<li>新的优化器（5.7新增）</li>\n<li>原生JSON支持（5.7新增）</li>\n<li>多源复制（5.7新增）</li>\n<li>GIS的空间扩展  （5.7新增）</li>\n</ol>\n<h4 id=\"存储引擎\"><a href=\"#存储引擎\" class=\"headerlink\" title=\"存储引擎\"></a>存储引擎</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MyISAMMySQL 5.0 之前的默认数据库引擎，最为常用。拥有较高的插入，查询速度，但不支持事务</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>InnoDB事务型数据库的首选引擎，支持ACID事务，支持行级锁定, MySQL 5.5 起成为默认数据库引擎</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>BDB源 自 Berkeley DB，事务型数据库的另一种选择，支持Commit 和Rollback 等其他事务特性</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Memory所有数据置于内存的存储引擎，拥有极高的插入，更新和查询效率。但是会占用和数据量成正比的内存空间。并且其内容会在 MySQL 重新启动时丢失</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Merge将一定数量的 MyISAM 表联合而成一个整体，在超大规模数据存储时很有用</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Archive非常适合存储大量的独立的，作为历史记录的数据。因为它们不经常被读取。Archive 拥有高效的插入速度，但其对查询的支持相对较差</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Federated将不同的 MySQL 服务器联合起来，逻辑上组成一个完整的数据库。非常适合分布式应用</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Cluster&#x2F;NDB高冗余的存储引擎，用多台数据机器联合提供服务以提高整体性能和安全性。适合数据量大，安全和性能要求高的应用</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CSV： 逻辑上由逗号分割数据的存储引擎。它会在数据库子目录里为每个数据表创建一个 .csv 文件。这是一种普通文本文件，每个数据行占用一个文本行。CSV 存储引擎不支持索引。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>BlackHole：黑洞引擎，写入的任何数据都会消失，一般用于记录 binlog 做复制的中继</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>EXAMPLE 存储引擎是一个不做任何事情的存根引擎。它的目的是作为 MySQL 源代码中的一个例子，用来演示如何开始编写一个新存储引擎。同样，它的主要兴趣是对开发者。EXAMPLE 存储引擎不支持编索引。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>另外，MySQL 的存储引擎接口定义良好。有兴趣的开发者可以通过阅读文档编写自己的存储引擎</p></blockquote>\n<h4 id=\"应用架构\"><a href=\"#应用架构\" class=\"headerlink\" title=\"应用架构\"></a>应用架构</h4><p>单点（Single），适合小规模应用</p>\n<p>复制（Replication），适合中小规模应用</p>\n<p>集群（Cluster），适合大规模应用</p>\n<h4 id=\"初学基础\"><a href=\"#初学基础\" class=\"headerlink\" title=\"初学基础\"></a>初学基础</h4><h5 id=\"连接-MySQL\"><a href=\"#连接-MySQL\" class=\"headerlink\" title=\"连接 MySQL\"></a>连接 MySQL</h5><p>格式：mysql -h 主机地址 -u 用户名 －p 用户密码</p>\n<ol>\n<li>例1：连接到本机上的MYSQL。</li>\n</ol>\n<p>首先在打开 DOS 窗口，然后进入目录 mysqlbin，再键入命令mysql -uroot -p，回车后提示你输密码，如果刚安装好MYSQL，超级用户root 是没有密码的，故直接回车即可进入到 MySQL 中了，MySQL 的提示符是：mysql&gt;</p>\n<p>2．例2：连接到远程主机上的MYSQL。假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：</p>\n<p>mysql -h110.110.110.110 -uroot -pabcd123（注：u与root可以不用加空格，其它也一样）</p>\n<p>3．退出 MySQL 命令：exit （回车）</p>\n<p>注意：想要成功连接到远程主机，需要在远程主机打开MySQL远程访问权限</p>\n<p>方法如下：</p>\n<p>在远程主机中以管理员身份进入</p>\n<p>输入如下命令</p>\n<p>mysql&gt;GRANT ALL PRIVILEGES ON <em>.</em> TO ‘agui‘@%’IDENTIFIEDBY ‘123’ WITH GRANT OPTION;</p>\n<p>FLUSH PRIVILEGES;</p>\n<p>&#x2F;&#x2F;赋予任何主机访问数据的权限</p>\n<p>mysql&gt;FLUSH PRIVILEGES</p>\n<p>&#x2F;&#x2F;修改生效</p>\n<p>agui为我们使用的用户名</p>\n<p>密码为 123</p>\n<p>即：在远程主机上作好设置，我们即可通过mysql -h110.110.</p>\n<p>110.110 -uagui -p123连接进远程主机</p>\n<h5 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h5><p>格式：mysqladmin -u用户名 -p 旧密码 -password 新密码</p>\n<p>1．例1：给root加个密码ab12。首先在DOS下进入目录</p>\n<p>mysqlbin，然后键入以下命令</p>\n<p>mysqladmin -uroot -password ab12</p>\n<p>注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。</p>\n<p>2．例2：再将root的密码改为djg345。</p>\n<p>mysqladmin -uroot -pab12 -password djg345</p>\n<p>增加新用户（注意：和上面不同，下面的因为是 MySQL 环境中的命令，所以后面都带一个分号作为命令结束符）</p>\n<p>格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”</p>\n<p>例1、增加一个用户 test1 密码为 abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。首先用以 root 用户连入 MySQL，然后键入以下命令：</p>\n<p>grant select,insert,update,delete on <em>.</em> to test1@“%” Identified by “abc”;</p>\n<p>但例1增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见例2。</p>\n<p>例2、增加一个用户 test2 密码为 abc,让他只可以在 localhost 上登录，并可以对数据库 mydb 进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。</p>\n<p>grant select, insert, update, delete on mydb.* to test2@localhost identified by “abc”;</p>\n<p>如果你不想 test2 有密码，可以再打一个命令将密码消掉。</p>\n<p>grant select, insert, update, delete on mydb.* to test2@localhost identified by “”;</p>\n<p>下面来看看 MySQL 中有关数据库方面的操作。注意：必须首先登录到 MySQL 中，以下操作都是在 MySQL 的提示符下进行的，而且每个命令以分号结束。</p>\n<h5 id=\"操作技巧\"><a href=\"#操作技巧\" class=\"headerlink\" title=\"操作技巧\"></a>操作技巧</h5><p>1．如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就 OK。</p>\n<p>2．你可以使用光标上下键调出以前的命令。但以前我用过的一个 MySQL 旧版本不支持。我用的是mysql-3.23.27-beta-win。</p>\n<h5 id=\"显示命令\"><a href=\"#显示命令\" class=\"headerlink\" title=\"显示命令*\"></a>显示命令*</h5><p>1．显示数据库列表。</p>\n<p>show databases;</p>\n<p>刚开始时才两个数据库：mysql 和 test。mysql 库很重要它里面有 MySQL 的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。</p>\n<p>2．显示库中的数据表：</p>\n<p>use mysql； &#x2F;&#x2F;打开库，学过 FOXBASE 的一定不会陌生吧</p>\n<p>show tables;</p>\n<p>3．显示数据表的结构：</p>\n<p>describe 表名；</p>\n<p>4．建库：</p>\n<p>create database 库名；</p>\n<p>5．建表：</p>\n<p>use 库名；</p>\n<p>create table 表名 (字段设定列表)；</p>\n<p>6．删库和删表：</p>\n<p>drop database 库名；</p>\n<p>drop table 表名；</p>\n<p>7．将表中记录清空：</p>\n<p>delete from 表名；</p>\n<p>8．显示表中的记录：</p>\n<p>select * from 表名；</p>\n<p>9．显示最后一个执行的语句所产生的错误、警告和通知：</p>\n<p>show warnings;</p>\n<p>10．只显示最后一个执行语句所产生的错误：</p>\n<p>show errors;</p>\n<p>实例</p>\n<p>drop database if exists school; &#x2F;&#x2F;如果存在SCHOOL则删除</p>\n<p>create database school; &#x2F;&#x2F;建立库SCHOOL</p>\n<p>use school; &#x2F;&#x2F;打开库SCHOOL</p>\n<p>create table teacher &#x2F;&#x2F;建立表TEACHER</p>\n<p>(</p>\n<p>id int(3) auto_increment not null primary key,</p>\n<p>name char(10) not null,</p>\n<p>address varchar(50) default ‘深圳’,</p>\n<p>date year</p>\n<p>)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8; &#x2F;&#x2F;建表结束</p>\n<p>&#x2F;&#x2F;以下为插入字段</p>\n<p>insert into teacher values(‘’,’glchengang’,’XX公司‘，</p>\n<p>‘1976-10-10’);</p>\n<p>insert into teacher values(‘’,’jack’,’XX公司‘，<br>‘1975-12-23’);</p>\n<p>注：在建表中：</p>\n<p>1．将ID设为长度为3的数字字段：int(3)并让它每个记录自动加一：auto_increment并不能为空：not null而且让他成为主字段primary key。</p>\n<p>2．将NAME设为长度为10的字符字段。</p>\n<p>3．将ADDRESS设为长度50的字符字段，而且缺省值为深圳。varchar和char有什么区别呢，只有等以后的文章再说了。</p>\n<p>4．将YEAR设为日期字段。</p>\n<p>如果你在mysql提示符键入上面的命令也可以，但不方便调试。你可以将以上命令原样写入一个文本文件中假设为school.sql，然后复制到c:\\下，并在DOS状态进入目录\\mysql\\bin，然后键入以下命令：</p>\n<p>mysql -uroot -p密码 &lt; c:\\school.sql</p>\n<p>如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将&#x2F;&#x2F;的注释去掉即可使用）。</p>\n<h5 id=\"文本转数据库\"><a href=\"#文本转数据库\" class=\"headerlink\" title=\"文本转数据库\"></a>文本转数据库</h5><p>1．文本数据应符合的格式：字段数据之间用tab键隔开，null值用\\n来代替.</p>\n<p>例：</p>\n<p>3．rose 深圳二中 1976-10-10</p>\n<p>4．mike 深圳一中 1975-12-23</p>\n<p>2．数据传入命令 load data local infile “文件名” into table 表名；</p>\n<p>注意：你最好将文件复制到\\mysql\\bin目录下，并且要先用use命令打开表所在的数据库</p>\n<p>或者登录数据库前将路径转移（cd）到要导入文本所在路径。</p>\n<h5 id=\"备份数据库（命令在DOS的-mysql-bin目录下执行）\"><a href=\"#备份数据库（命令在DOS的-mysql-bin目录下执行）\" class=\"headerlink\" title=\"备份数据库（命令在DOS的\\mysql\\bin目录下执行）\"></a>备份数据库（命令在DOS的\\mysql\\bin目录下执行）</h5><p>mysqldump –opt school&gt;school.bbb</p>\n<p>注释：将数据库school备份到school.bbb文件，school.bbb是一个文本文件，文件名任取，打开看看你会有新发现。</p>\n<h5 id=\"自动备份-mysql-数据库的方法\"><a href=\"#自动备份-mysql-数据库的方法\" class=\"headerlink\" title=\"自动备份 mysql 数据库的方法\"></a>自动备份 mysql 数据库的方法</h5><p>1、先是建立批处理文件，将以下代码另存为.bat文件，文件名最好为英文。注意下面的路径，以笔者自己的数据库为例，数据库安装在D盘下mysql\\mysql下，备份位置在F:\\beifen，后面的代码是日期。</p>\n<p>@echo off</p>\n<p>color 0D</p>\n<p>MODE con: COLS&#x3D;71 LINES&#x3D;25</p>\n<p>title mysql数据库自动备份脚本(任务计划)–脚本作者：<a href=\"http://www.***.com/\">http://www。***。com</a></p>\n<p>set sou_dir&#x3D;”D:\\mysql\\Mysql\\data”</p>\n<p>set obj_dir&#x3D;F:\\beifen%date:~0,10%</p>\n<p>net stop mysql</p>\n<p>md %obj_dir%</p>\n<p>xcopy &#x2F;e &#x2F;y %sou_dir% %obj_dir%</p>\n<p>net start mysql</p>\n<p>@echo off&amp;setlocal enabledelayedexpansion</p>\n<p>call:D,30</p>\n<p>echo. 30天前的日期为：%D%</p>\n<p>echo. 删除30天以前备份……</p>\n<p>if exist F:\\beifen%D% rd &#x2F;s &#x2F;q F:\\beifen%D%</p>\n<p>echo 自动备份完成，程序将自动退出……</p>\n<h5 id=\"还原导入\"><a href=\"#还原导入\" class=\"headerlink\" title=\"还原导入\"></a>还原导入</h5><p>还原&#x2F;导入数据库，导入过程，进入 mysql 数据库控制台，如 mysql -u root -p</p>\n<p>mysql&gt;use 数据库</p>\n<p>然后使用 source 命令，后面参数为脚本文件(如这里用到的.sql)</p>\n<p>mysql&gt;source d:\\dbname.sql</p>\n<p>如果提示找不到文件，输完 source 后，可以用鼠标把文件直接拖进命令行窗口</p>\n<p>启动跟踪</p>\n<p>mysqld –debug</p>\n<p>关闭服务器</p>\n<p>mysqladmin -u root shutdown</p>\n<p>启动服务</p>\n<p>mysqld –console</p>\n<h2 id=\"技术栈介绍-前端\"><a href=\"#技术栈介绍-前端\" class=\"headerlink\" title=\"技术栈介绍(前端)\"></a>技术栈介绍(前端)</h2><h3 id=\"Ajax\"><a href=\"#Ajax\" class=\"headerlink\" title=\"Ajax\"></a>Ajax</h3><h4 id=\"简介-3\"><a href=\"#简介-3\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>Ajax即Asynchronous Javascript And XML（异步JavaScript和XML）在 2005年被Jesse James Garrett提出的新术语，用来描述一种使用现有技术集合的‘新’方法，包括: HTML 或 XHTML, CSS, JavaScript, DOM, XML, XSLT, 以及最重要的XMLHttpRequest。 使用Ajax技术网页应用能够快速地将增量更新呈现在用户界面上，而不需要重载（刷新）整个页面，这使得程序能够更快地回应用户的操作。</p>\n<h4 id=\"来源\"><a href=\"#来源\" class=\"headerlink\" title=\"来源\"></a>来源</h4><ol>\n<li><p>Ajax这个术语源自描述从基于 Web 的应用到基于数据的应用。</p>\n</li>\n<li><p>Ajax 不是一种新的编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术。</p>\n</li>\n<li><p>使用 JavaScript 向服务器提出请求并处理响应而不阻塞用户核心对象XMLHttpRequest。通过这个对象，您的 JavaScript 可在不重载页面的情况与 Web 服务器交换数据，即在不需要刷新页面的情况下，就可以产生局部刷新的效果。</p>\n</li>\n<li><p>Ajax 在浏览器与 Web 服务器之间使用异步数据传输（HTTP 请求），这样就可使网页从服务器请求少量的信息，而不是整个页面。</p>\n<h4 id=\"AJAX-工作原理\"><a href=\"#AJAX-工作原理\" class=\"headerlink\" title=\"AJAX 工作原理\"></a>AJAX 工作原理</h4></li>\n<li><p>Ajax可使因特网应用程序更小、更快，更友好。</p>\n</li>\n<li><p>Ajax 是一种独立于 Web 服务器软件的浏览器技术。　Ajax 基于下列 Web 标准：</p>\n<ol>\n<li>JavaScript、XML、HTML与 CSS 在 Ajax 中使用的 Web 标准已被良好定义，并被所有的主流浏览器支持。Ajax 应用程序独立于浏览器和平台。</li>\n<li>Web 应用程序较桌面应用程序有诸多优势；它们能够涉及广大的用户，它们更易安装及维护，也更易开发。</li>\n</ol>\n</li>\n</ol>\n<p>不过，因特网应用程序并不像传统的桌面应用程序那样完善且友好。通过 Ajax，因特网应用程序可以变得更完善，更友好。</p>\n<h4 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h4><p>使用Ajax的最大优点，就是能在不更新整个页面的前提下维护数据。这使得Web应用程序更为迅捷地回应用户动作，并避免了在网络上发送那些没有改变的信息。</p>\n<p>Ajax不需要任何浏览器插件，但需要用户允许JavaScript在浏览器上执行。就像DHTML应用程序那样，Ajax应用程序必须在众多不同的浏览器和平台上经过严格的测试。随着Ajax的成熟，一些简化Ajax使用方法的程序库也相继问世。同样，也出现了另一种辅助程序设计的技术，为那些不支持JavaScript的用户提供替代功能。</p>\n<p>对应用Ajax最主要的批评就是，它可能破坏浏览器的后退与加入收藏书签功能。在动态更新页面的情况下，用户无法回到前一个页面状态，这是因为浏览器仅能记下历史记录中的静态页面。一个被完整读入的页面与一个已经被动态修改过的页面之间的可能差别非常微妙；用户通常都希望单击后退按钮，就能够取消他们的前一次操作，但是在Ajax应用程序中，却无法这样做。不过开发者已想出了种种办法来解决这个问题，HTML5之前的方法大多是在用户单击后退按钮访问历史记录时，通过创建或使用一个隐藏的IFRAME来重现页面上的变更。（例如，当用户在Google Maps中单击后退时，它在一个隐藏的IFRAME中进行搜索，然后将搜索结果反映到Ajax元素上，以便将应用程序状态恢复到当时的状态）。</p>\n<p>关于无法将状态加入收藏或书签的问题，HTML5之前的一种方式是使用URL片断标识符（通常被称为锚点，即URL中#后面的部分）来保持追踪，允许用户回到指定的某个应用程序状态。（许多浏览器允许JavaScript动态更新锚点，这使得Ajax应用程序能够在更新显示内容的同时更新锚点。）HTML5以后可以直接操作浏览历史，并以字符串形式存储网页状态，将网页加入网页收藏夹或书签时状态会被隐形地保留。上述两个方法也可以同时解决无法后退的问题。</p>\n<p>进行Ajax开发时，网络延迟——即用户发出请求到服务器发出响应之间的间隔——需要慎重考虑。如果不给予用户明确的回应，没有恰当的预读数据，或者对XMLHttpRequest的不恰当处理，都会使用户感到厌烦。通常的解决方案是，使用一个可视化的组件来告诉用户系统正在进行后台操作并且正在读取数据和内容。 </p>\n<h3 id=\"layer\"><a href=\"#layer\" class=\"headerlink\" title=\"layer\"></a>layer</h3><h4 id=\"弹出层组件\"><a href=\"#弹出层组件\" class=\"headerlink\" title=\"弹出层组件\"></a>弹出层组件</h4><p>layer，一个可以让你想到即可做到的web弹窗（层）解决方案（js组件），作者贤心（前端开发工程师）。layer侧重于用户灵活的自定义，为不同人的使用习惯提供动力。其意义在于，可以让您的页面拥有更丰富与便捷的操作体验，而您只需在调用时简单地配置相关参数，即可轻松实现。</p>\n<p>与同类弹出层组件相比，layer的优势明显，她尽可能地在以更少的代码展现出更强健的功能。layer格外注重性能的提升，在多层模式的回调处理中，具备其它多数层组件所没有的“独立不冲突”（截至到2013年10月23，已有115859人次关注新版layer）。您完全可以大可放心地在页面弹出任意数量的层，她们彼此不妨碍。当你问及她的兼容时，layer必须告诉你，她兼容了一切浏览器，包括古老的ie6。</p>\n<p>layer公开了如此多的接口（api），这使得您可以DIY太多您需要的风格，尤其是页面层模式，意味着必要时您可以完全抛弃layer的现有皮肤，并用你的思维去勾勒她的衣着。而问题在于，我必须中止“王婆卖瓜”的陈述。因为一切的不足或友好，都需要您在使用过程中去发现。</p>\n<p>据不完全统计，截至到2013年8月30号，layer已服务于6000多家web平台。layer作为layUI库的成员，将一直致力于为web开发提供动力。</p>\n<h3 id=\"jQuery\"><a href=\"#jQuery\" class=\"headerlink\" title=\"jQuery\"></a>jQuery</h3><h4 id=\"简介-4\"><a href=\"#简介-4\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（框架）于2006年1月由John Resig发布。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p>\n<p>jQuery的核心特性可以总结为：具有独特的链式语法和短小清晰的多功能接口；具有高效灵活的CSS选择器，并且可对CSS选择器进行扩展；拥有便捷的插件扩展机制和丰富的插件。jQuery兼容各种主流浏览器，如IE 6.0+、FF 1.5+、Safari 2.0+、Opera 9.0+等。</p>\n<h4 id=\"语言特点\"><a href=\"#语言特点\" class=\"headerlink\" title=\"语言特点\"></a>语言特点</h4><h5 id=\"快速获取文档元素\"><a href=\"#快速获取文档元素\" class=\"headerlink\" title=\"快速获取文档元素\"></a>快速获取文档元素</h5><p>jQuery的选择机制构建于Css的选择器，它提供了快速查询DOM文档中元素的能力，而且大大强化了JavaScript中获取页面元素的方式。</p>\n<h5 id=\"提供漂亮的页面动态效果\"><a href=\"#提供漂亮的页面动态效果\" class=\"headerlink\" title=\"提供漂亮的页面动态效果\"></a>提供漂亮的页面动态效果</h5><p>jQuery中内置了一系列的动画效果，可以开发出非常漂亮的网页，许多网站都使用jQuery的内置的效果，比如淡入淡出、元素移除等动态特效。</p>\n<h5 id=\"创建AJAX无刷新网页\"><a href=\"#创建AJAX无刷新网页\" class=\"headerlink\" title=\"创建AJAX无刷新网页\"></a>创建AJAX无刷新网页</h5><p>AJAX是异步的JavaScript和XML的简称，可以开发出非常灵敏无刷新的网页，特别是开发服务器端网页时，比如PHP网站，需要往返地与服务器通信，如果不使用AJAX，每次数据更新不得不重新刷新网页，而使用AJAX特效后，可以对页面进行局部刷新，提供动态的效果。</p>\n<h5 id=\"提供对JavaScript语言的增强\"><a href=\"#提供对JavaScript语言的增强\" class=\"headerlink\" title=\"提供对JavaScript语言的增强\"></a>提供对JavaScript语言的增强</h5><p>jQuery提供了对基本JavaScript结构的增强，比如元素迭代和数组处理等操作。</p>\n<h5 id=\"增强的事件处理\"><a href=\"#增强的事件处理\" class=\"headerlink\" title=\"增强的事件处理\"></a>增强的事件处理</h5><p>jQuery提供了各种页面事件，它可以避免程序员在HTML中添加太多事件处理代码，最重要的是，它的事件处理器消除了各种浏览器兼容性问题。</p>\n<h5 id=\"更改网页内容\"><a href=\"#更改网页内容\" class=\"headerlink\" title=\"更改网页内容\"></a>更改网页内容</h5><p>jQuery可以修改网页中的内容，比如更改网页的文本、插入或者翻转网页图像，jQuery简化了原本使用JavaScript代码需要处理的方式。</p>\n<h4 id=\"语言基础\"><a href=\"#语言基础\" class=\"headerlink\" title=\"语言基础\"></a>语言基础</h4><h5 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h5><p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。</p>\n<p>jQuery 选择器基于元素的 id、类、类型、属性、属性值等”查找”（或选择）HTML 元素。 它基于已经存在的CSS 选择器，除此之外，它还有一些自定义的选择器。</p>\n<p>jQuery 中所有选择器都以美元符号开头：$()。</p>\n<h6 id=\"元素选择器\"><a href=\"#元素选择器\" class=\"headerlink\" title=\"元素选择器\"></a>元素选择器</h6><p>jQuery 元素选择器基于元素名选取元素。<br>$(“p”)<br>在页面中选取所有元素</p>\n<h6 id=\"id-选择器\"><a href=\"#id-选择器\" class=\"headerlink\" title=\"id 选择器\"></a>id 选择器</h6><p>jQuery #id 选择器通过 HTML 元素的 id 属性选取指定的元素。<br>页面中元素的 id 应该是唯一的，所以您要在页面中选取唯一的元素需要通过 #id 选择器。<br>通过 id 选取元素语法如下：$(“#test”)</p>\n<h6 id=\"class-选择器\"><a href=\"#class-选择器\" class=\"headerlink\" title=\"class 选择器\"></a>class 选择器</h6><p>jQuery 类选择器可以通过指定的 class 查找元素。<br>语法如下：$(“.test”)</p>\n<h5 id=\"事件处理\"><a href=\"#事件处理\" class=\"headerlink\" title=\"事件处理\"></a>事件处理</h5><h6 id=\"jQuery-事件方法语法\"><a href=\"#jQuery-事件方法语法\" class=\"headerlink\" title=\"jQuery 事件方法语法\"></a>jQuery 事件方法语法</h6><p>在 jQuery 中，大多数 DOM 事件都有一个等效的 jQuery 方法。</p>\n<p>页面中指定一个点击事件：$(“p”).click();<br>下一步是定义什么时间触发事件。您可以通过一个事件函数实现：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;p&quot;).click(function()&#123;\n    &#x2F;&#x2F; 动作触发后执行的代码!!\n&#125;);</code></pre>\n<p>常用的 jQuery 事件方法</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(document).ready()</code></pre>\n<p>$(document).ready() 方法允许我们在文档完全加载完后执行函数。该事件方法在jQuery 语法章节中已经提到过。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">click()</code></pre>\n<p>click() 方法是当按钮点击事件被触发时会调用一个函数。<br>该函数在用户点击 HTML 元素时执行。<br>在下面的实例中，当点击事件在某个元素上触发时，隐藏当前的元素：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;p&quot;).click(function()&#123;\n    $(this).hide();\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">dblclick()</code></pre>\n<p>当双击元素时，会发生 dblclick 事件。<br>dblclick() 方法触发 dblclick 事件，或规定当发生 dblclick 事件时运行的函数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;p&quot;).dblclick(function()&#123;\n    $(this).hide();\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">mouseenter()</code></pre>\n<p>当鼠标指针穿过元素时，会发生 mouseenter 事件。</p>\n<p>mouseenter() 方法触发 mouseenter 事件，或规定当发生 mouseenter 事件时运行的函数。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;#p1&quot;).mouseenter(function()&#123;\n    alert(&quot;You entered p1!&quot;);\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">mouseleave()</code></pre>\n<p>当鼠标指针离开元素时，会发生 mouseleave 事件。</p>\n<p>mouseleave() 方法触发 mouseleave 事件，或规定当发生 mouseleave 事件时运行的函数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;#p1&quot;).mouseleave(function()&#123;\n    alert(&quot;Bye! You now leave p1!&quot;);\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">mousedown()</code></pre>\n<p>当鼠标指针移动到元素上方，并按下鼠标按键时，会发生 mousedown 事件。</p>\n<p>mousedown() 方法触发 mousedown 事件，或规定当发生 mousedown 事件时运行的函数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;#p1&quot;).mousedown(function()&#123;\n    alert(&quot;Mouse down over p1!&quot;);\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">mouseup()</code></pre>\n<p>当在元素上松开鼠标按钮时，会发生 mouseup 事件。</p>\n<p>方法触发 mouseup 事件，或规定当发生 mouseup 事件时运行的函数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;#p1&quot;).mouseup(function()&#123;\n    alert(&quot;Mouse up over p1!&quot;);\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">hover()</code></pre>\n<p>hover()方法用于模拟光标悬停事件。</p>\n<p>当鼠标移动到元素上时，会触发指定的第一个函数（mouseenter）；当鼠标移出这个元素时，会触发指定的第二个函数（mouseleave）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;#p1&quot;).hover(function()&#123;\n    alert(&quot;You entered p1!&quot;);\n    &#125;,\n    function()&#123;\n    alert(&quot;Bye! You now leave p1!&quot;);\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">focus()</code></pre>\n<p>当元素获得焦点时，发生focus事件。</p>\n<p>当通过鼠标点击选中元素或通过tab键定位到元素时，该元素就会获得焦点。</p>\n<p>focus()方法触发 focus 事件，或规定当发生focus事件时运行的函数。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;input&quot;).focus(function()&#123;\n    $(this).css(&quot;background-color&quot;,&quot;#cccccc&quot;);\n&#125;);</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">blur()</code></pre>\n<p>当元素失去焦点时，发生 blur 事件。</p>\n<p>blur() 方法触发 blur 事件，或规定当发生 blur 事件时运行的函数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;input&quot;).blur(function()&#123;\n    $(this).css(&quot;background-color&quot;,&quot;#ffffff&quot;);\n&#125;);</code></pre>\n<h3 id=\"Bootstrap\"><a href=\"#Bootstrap\" class=\"headerlink\" title=\"Bootstrap\"></a>Bootstrap</h3><h4 id=\"简介-5\"><a href=\"#简介-5\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>Bootstrap是美国Twitter公司的设计师Mark Otto和Jacob Thornton合作基于HTML、CSS、JavaScript 开发的简洁、直观、强悍的前端开发框架，使得 Web 开发更加快捷。Bootstrap提供了优雅的HTML和CSS规范，它即是由动态CSS语言Less写成。Bootstrap一经推出后颇受欢迎，一直是GitHub上的热门开源项目，包括NASA的MSNBC（微软全国广播公司）的Breaking News都使用了该项目。 国内一些移动开发者较为熟悉的框架，如WeX5前端开源框架等，也是基于Bootstrap源码进行性能优化而来。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><h4 id=\"简介-6\"><a href=\"#简介-6\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>HTML的全称为超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明文字，图形、动画、声音、表格、链接等。</p>\n<p>超文本是一种组织信息的方式，它通过超级链接方法将文本中的文字、图表与其他信息媒体相关联。这些相互关联的信息媒体可能在同一文本中，也可能是其他文件，或是地理位置相距遥远的某台计算机上的文件。这种组织信息方式将分布在不同位置的信息资源用随机方式进行连接，为人们查找，检索信息提供方便。</p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>HTML 指的是超文本标记语言: HyperText Markup Language</p>\n<p>HTML 标记标签通常被称为 HTML 标签 (HTML tag)    &lt;标签&gt;内容&lt;&#x2F;标签&gt;</p>\n<p>HTML 元素包含了开始标签与结束标签，元素的内容是开始标签与结束标签之间的内容，元素属性是 HTML 元素提供的附加信息。</p>\n<h5 id=\"基本HTML-网页结构如下，body标签内的才是我们在浏览器上所视内容\"><a href=\"#基本HTML-网页结构如下，body标签内的才是我们在浏览器上所视内容\" class=\"headerlink\" title=\"基本HTML 网页结构如下，body标签内的才是我们在浏览器上所视内容\"></a>基本HTML 网页结构如下，body标签内的才是我们在浏览器上所视内容</h5><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n        &lt;title&gt;页面标题&lt;&#x2F;title&gt;\n    &lt;&#x2F;head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;标题&lt;&#x2F;h1&gt;\n        &lt;p&gt;段落&lt;&#x2F;p&gt;\n    &lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;    </code></pre>\n\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;声明为 HTML5 文档\n\n&lt;html&gt;元素是 HTML 页面的根元素\n\n&lt;head&gt; 元素包含了文档的元（meta）数据，如 &lt;meta charset&#x3D;&quot;utf-8&quot;&gt; 定义网页编码格式为 utf-8。\n\n&lt;title&gt; 元素描述了文档的标题，浏览器标签名\n\n&lt;body&gt; 元素包含了可见的页面内容\n\n&lt;h1&gt; 元素定义一个大标题\n\n&lt;p&gt; 元素定义一个段落\n\n&lt;!-- 内容 --&gt;注释内容</code></pre>\n<h5 id=\"元素属性\"><a href=\"#元素属性\" class=\"headerlink\" title=\"元素属性\"></a>元素属性</h5><p>HTML元素属性一般在开始标签中，以键值对表示</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;表示链接&lt;&#x2F;a&gt;</code></pre>\n\n<p>常见属性<br>其它标准属性参考这里</p>\n<h5 id=\"头部\"><a href=\"#头部\" class=\"headerlink\" title=\"头部\"></a>头部</h5><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;head&gt; 元素包含了所有的头部标签元素。\n\n可以添加在头部区域的元素标签为: &lt;title&gt;, &lt;style&gt;, &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;, &lt;noscript&gt;, and &lt;base&gt;.\n\n \n\n&lt;title&gt; 元素定义文档的标题。浏览器会以特殊的方式来使用标题，并且通常把它放置在浏览器窗口的标题栏或状态栏上。同样，当把文档加入用户的链接列表或者收藏夹或书签列表时，标题将成为该文档链接的默认名称。\n\n&lt;title&gt;文档标题&lt;&#x2F;title&gt;\n\n&lt;style&gt; 标签用于为 HTML 文档定义样式信息。在 style 中，可以规定在浏览器中如何呈现 HTML 文档。具体这里\n\n&lt;meta&gt; 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。&lt;meta&gt; 标签没有结束标签。详细这里\n\n&lt;link&gt; 标签定义了文档与外部资源之间的关系。最常见的用途是链接样式表\n\n&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;theme.css&quot; &#x2F;&gt;\n\n&lt;script&gt;标签用于加载脚本文件，如： JavaScript。详细这里\n\n&lt;noscript&gt; 元素用来定义在脚本未被执行时的替代内容（文本）。\n\n&lt;base&gt; 标签为页面上的所有链接规定默认地址或默认目标。详细这里</code></pre>\n<h5 id=\"主体\"><a href=\"#主体\" class=\"headerlink\" title=\"主体\"></a>主体</h5><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">body 元素定义文档的主体。\n\nbody 元素包含文档的所有内容（比如文本、超链接、图像、表格和列表等等）\n\n最为常见的有:\n\n1.&lt;h1&gt; 定义最大的标题。 &lt;h6&gt; 定义最小的标题。标题（Heading）是通过 &lt;h1&gt; - &lt;h6&gt; 标签进行定义的.\n\n&lt;h1&gt;这是一个标题。&lt;&#x2F;h1&gt;\n&lt;h2&gt;这是一个标题。&lt;&#x2F;h2&gt;\n&lt;h3&gt;这是一个标题。&lt;&#x2F;h3&gt;\n\n \n\n2.&lt;hr&gt; 标签在 HTML 页面中创建水平线\n\n&lt;p&gt;这是一个段落。&lt;&#x2F;p&gt;\n&lt;hr&gt;\n&lt;p&gt;这是一个段落。&lt;&#x2F;p&gt;\n\n \n\n3.&lt;p&gt; 标签定义段落。\n\n如果在不产生一个新段落的情况下进行换行（新行），请使用 &lt;br&gt; 标签\n\n&lt;p&gt;这个&lt;br&gt;段落&lt;br&gt;演示了分行的效果&lt;&#x2F;p&gt;\n\n \n\n4.&lt;a&gt; 标签定义超链接，用于从一张页面链接到另一张页面。&lt;a&gt; 元素最重要的属性是 href 属性，它指示链接的目标。\n\n&lt;a href&#x3D;&quot;URL&quot;&gt;链接&lt;&#x2F;a&gt;\n\n \n\n5.&lt;img&gt; 元素向网页中嵌入一幅图像,&lt;img&gt; 标签有两个必需的属性：src 属性 和 alt 属性。src 指 &quot;source&quot;。源属性的值是图像的 URL 地址。alt 属性用来为图像定义一串预备的可替换的文本。\n\n&lt;img src&#x3D;&quot;url&quot;  alt&#x3D;&quot;图片&quot; &#x2F;&gt;\n\n \n\n6.HTML表格由 &lt;table&gt; 标签来定义。每个表格均有若干行（由 &lt;tr&gt; 标签定义），每行被分割为若干单元格（由 &lt;td&gt; 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。\n复制代码\n\n&lt;table border&#x3D;&quot;1&quot;&gt;\n    &lt;tr&gt;\n        &lt;td&gt;row 1, cell 1&lt;&#x2F;td&gt;\n        &lt;td&gt;row 1, cell 2&lt;&#x2F;td&gt;\n    &lt;&#x2F;tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;row 2, cell 1&lt;&#x2F;td&gt;\n        &lt;td&gt;row 2, cell 2&lt;&#x2F;td&gt;\n    &lt;&#x2F;tr&gt;\n&lt;&#x2F;table&gt;\n\n\n\n \n\n7.无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。\n\n无序列表使用 &lt;ul&gt; 标签\n\n&lt;ul&gt;\n&lt;li&gt;Coffee&lt;&#x2F;li&gt;\n&lt;li&gt;Milk&lt;&#x2F;li&gt;\n&lt;&#x2F;ul&gt;\n\n \n\n8.有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于 &lt;ol&gt; 标签。每个列表项始于 &lt;li&gt; 标签。\n\n列表项使用数字来标记。\n\n&lt;ol&gt;\n&lt;li&gt;Coffee&lt;&#x2F;li&gt;\n&lt;li&gt;Milk&lt;&#x2F;li&gt;\n&lt;&#x2F;ol&gt;\n\n \n\n9.&lt;div&gt; 可定义文档中的分区或节（division&#x2F;section）。\n\n&lt;div&gt; 标签可以把文档分割为独立的、不同的部分。它可以用作严格的组织工具，并且不使用任何格式与其关联。\n\n如果用 id 或 class 来标记 &lt;div&gt;，那么该标签的作用会变得更加有效。\n\n&lt;div style&#x3D;&quot;color:#00FF00&quot;&gt;\n  &lt;h3&gt;This is a header&lt;&#x2F;h3&gt;\n  &lt;p&gt;This is a paragraph.&lt;&#x2F;p&gt;\n&lt;&#x2F;div&gt;\n\n \n\n10.&lt;form&gt; 标签用于为用户输入创建 HTML 表单。\n\n表单能够包含 input 元素，比如文本字段、复选框、单选框、提交按钮等等。\n\n表单还可以包含 menus、textarea、fieldset、legend 和 label 元素。\n\n表单用于向服务器传输数据。\n\n&lt;form action&#x3D;&quot;form_action.asp&quot; method&#x3D;&quot;get&quot;&gt;\n  &lt;p&gt;First name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;fname&quot; &#x2F;&gt;&lt;&#x2F;p&gt;\n  &lt;p&gt;Last name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;lname&quot; &#x2F;&gt;&lt;&#x2F;p&gt;\n  &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit&quot; &#x2F;&gt;\n&lt;&#x2F;form&gt;</code></pre>\n\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><h4 id=\"简介-7\"><a href=\"#简介-7\" class=\"headerlink\" title=\"简介\"></a>简介</h4><ol>\n<li>什么是CSS？</li>\n</ol>\n<p>​ CSS：Cascading Style sheet层叠样式表或级联样式表</p>\n<p>​ 是一种样式设置规则，用于控制页面的外观的样式</p>\n<ol start=\"2\">\n<li>为什么使用CSS？</li>\n</ol>\n<p>实现内容与样式的分离，方便团队开发</p>\n<p>样式复用，便于网站后期维护</p>\n<p>页面的精确控制，让页面更精美</p>\n<ol start=\"3\">\n<li>CSS作用</li>\n</ol>\n<p>页面外观美化</p>\n<p>布局和定位</p>\n<h5 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h5><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">1.CSS语法\n\n&lt;head&gt;\n\n    &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;\n\n        选择器&#123;\n\n            样式名1:样式值1;\n\n            样式名2:样式值2;\n\n        &#125;\n\n    &lt;&#x2F;style&gt;\n\n&lt;&#x2F;head&gt;\n\n选择器：要修饰的对象(东西)\n\n样式名：修饰对象的每个样式\n\n样式值：样式的取值\n\n注意：多个样式之间以分号隔开，样式名和样式值之间以冒号隔开\n\n2.CSS引用方式\n\n​ 有三种方式：内部样式、行内样式、外部样式\n\n2.1 内部样式\n\n​ 也称为内嵌样式，在页面头部通过style标签定义\n\n​ 对当前页面所有符合样式选择器的标签起作用\n\n2.2 行内样式\n\n​ 也称为嵌入样式，使用HTML标签的style属性来定义\n\n​ 只对设置style属性的标签起作用\n\n​ 注意：几乎所有HTML标签都具有style属性\n\n2.3 外部样式\n\n​ 使用单独的css文件来定义，然后在页面中使用link标签或@import指令来引入\n\n使用link标签链接外部样式表(推荐)\n\n&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;css文件的路径&quot;&gt;\n\n使用@import指令导入外部样式表\n\n&lt;style&gt;\n\n    @import url(css文件的路径);\n\n&lt;&#x2F;style&gt;\n\n三、选择器\n\n1.基础选择器\n\n1.1 标签选择器\n\n​ 也称为元素选择器，以HTML标签的名字作为样式应用依据\n\n1.2 类选择器\n\n​ 使用自定义名称，以.作为前缀，然后通过HTML标签的class属性值作为依据\n\n注意事项：\n\n同时调用多个类选择器，以空格隔开\n\n类选择器不能以数字开头\n\n注意：几乎所有的HTML标签具有class属性\n\n1.3 ID选择器\n\n​ 使用自定义名称，以#作为前缀，然后通过HTML标签的id属性进行名称匹配\n\n​ 以标签的id属性值作为样式的应用依据，一对一的关系\n\n​ 注意：几乎所有的HTML标签都具有id属性，且id的值必须唯一\n\n2.复杂选择器\n\n2.1 复合选择器\n\n​ 标签选择器和类选择器、标签选择器和ID选择器，一起使用\n\n​ 必须同时满足两个条件才能应用样式\n\n2.2 组合选择器\n\n​ 也称为集体声明\n\n​ 将多个具有相同样式的选择器放在一起声明，使用逗号隔开\n\n2.3 嵌套选择器\n\n​ 在某个选择器内再设置选择器，通过空格隔开\n\n​ 只有满足层次关系最里层选择器的标签才能应用样式\n\n​ 注意：使用空格不区分父子还是后代，表示的后代，使用&gt;表示的是父子关系才可以\n\n2.4 伪类选择器\n\n​ 根据不同的状态显示不同的样式，一般多用于a标签，即超链接\n\n四种状态：\n\n​ link ：未访问的链接\n\n​ visited：已访问过的链接\n\n​ hover ：鼠标移动到a标签上，即悬浮在链接上\n\n​ active ：选定的链接，被激活\n\n​ 注意：书写顺序：link–&gt;visited–&gt;hover–&gt;active\n\n2.5 伪元素选择器\n\n​ first-letter：对应元素内容中的第一个字符\n\n​ first-line：对应元素内容中的第一行\n\n​ after：配合content属性使用，在指定元素后面增加内容\n\n​ before：配合content属性使用，在指定元素前面增加内容\n\n四、选择器的优先级\n\n1.优先级\n\n​ 行内样式&gt;ID选择器&gt;类选择器&gt;标签选择器\n\n​ 原因：首先加载标签选择器，再加载类选择器，然后再加载ID选择器，最后加载行内样式\n\n​ 后加载的样式会覆盖最先加载的同名样式\n\n2.内、外部样式加载顺序\n\n​ 就近原则\n\n​ 原因：按照书写顺序，在同优先级的前提下，后加载的会覆盖先加载的同名样式，所以离得越近越优先\n\n3.!important\n\n​ 可以使用!important使某个样式属性具有最高的优先级\n\n五、常用CSS样式属性\n\n1.字体属性\n\n​ 定义字体相关的样式\n\n| 样式名 | 含义 | 解释 |\n\n| ———– | —– | ——– |\n\n| font-size | 大小、尺寸 | 可以使用多种单位 |\n\n| font-weight | 粗细 | |\n\n| font-family | 字体 | |\n\n| font-style | 样式 | |\n\n| font | 简写 | |\n\n1.1 font-size\n\n​ 取值：\n\ninherit 继承，默认从父标签继承字体大小（默认值），所有的css属性默认值都为inherit\n\nHTML根元素默认字体大小是16px,也称为基础字体大小\n\npx 像素，pixel\n\nchrome浏览器不支持12px以下的字体大小，其他浏览器没问题\n\n%百分比，相对于父标签的字体的大小的百分比\n\nem 倍数，相对于父标签字体大小的倍数\n\n1.2 font-weight\n\n​ 取值：\n\nnormal 普通\n\nbold 粗体\n\n自定义值（400 normal 700 bold）\n\n1.3 font-family\n\n​ 一般建议写3种字体(首选、其次、备用)，以逗号隔开\n\n1.4 font-style\n\n​ 取值：\n\nnormal 普通\n\nitalic 斜体\n\n1.5 font\n\n​ 简写属性： font:font-style|font-weight|font-size|line-height|font-family\n\n​ 必须按照特定的顺序书写\n\n2.文本属性\n\n| 样式名 | 含义 | 解释 |\n\n| ————— | ——- | ————————————— |\n\n| color | 颜色 | |\n\n| line-height | 行高 | 行之间的距离 |\n\n| text-align | 水平对齐方式 | 取值：left、center、right |\n\n| vertical-align | 垂直对齐方式 | 取值：top、middle、bottom，一般用于图片和文字的对齐方式 |\n\n| text-indent | 首行缩进 | |\n\n| text-decoration | 文本修饰 | 取值：underline、overline、line-through、none |\n\n| text-transform | 字母大小写 | 取值：lowercase、uppercase、capitalize |\n\n| letter-sapcing | 字符间距 | |\n\n| word-spacing | 单词间距 | 只对英文有效 |\n\n| white-space | 空白的处理方式 | 文本超出后是否换行，取值：nowrap（直行，不换行）、normal |\n\n取值：四种写法\n\n颜色名称，使用英文单词\n\n16进制的RGB，#RRGGBB\n\n特定情况下，可以进行缩写\n\n#CCCCCC-----&gt;#ccc\n\n#FF0000-----&gt;#F00\n\n#FF7300-----&gt;无法缩写\n\n注意：不区分大小写\n\nrgb函数，rgb(red,green,blue)\n\n每个颜色的取值范围，[0-255]\n\nrgb(255,0,0)----&gt;红色\n\nrgb(0,255,0)----&gt;绿色\n\nrgb(0,0,255)----&gt;蓝色\n\nrgba函数：rgba(red,green,blue,alpha)\n\n可以设置透明度，alpha取值范围[0,1],0表示完全透明，1完全不透明\n\nrgba(255,0,0,1);-----&gt;纯红\n\nrgba(255,0,0,0.5);-----&gt;红色半透明\n\n3.背景属性\n\n| 属性 | 含义 | 解释 |\n\n| ——————— | ———- | —- |\n\n| background-color | 背景颜色 | |\n\n| background-image | 背景图片 | |\n\n| background-repeat | 背景图的重复方式 | |\n\n| background-position | 背景图片的位置 | |\n\n| background-attachment | 背景图片是否跟随滚动 | |\n\n| background | 简写 | |\n\n3.1 background-color\n\n​ 取值：transparent(透明)\n\n3.2 background-image\n\n必须使用url()方式指定图片的路径\n\n如果是在css文件中使用相对路径，此时是相对于css文件，而不是html文件\n\n3.3 background-repeat\n\n​ 取值：repeat（默认）、no-repeat、repeat-y、repeat-x\n\n3.4 background-position\n\n​ 默认背景图片显示左上角\n\n​ 取值：\n\n关键字top、bottom、left、right、center\n\n坐标，左上角(0,0)坐标，向右为x正方向，向下为y正方向\n\nCSS雪碧图，即CSS Sprites，也称为CSS精灵，是一种css图像合并技术\n\n含义：将网页许多非常小的图标&#x2F;图片整合在一张大图中，当访问该页面的时候只需要下载一次，可以减少访问服务器的次数，提高性能\n\n原理：使用background-position进行背景定位，定位出背景图片的位置\n\n3.5 background-attachment\n\n​ 取值：scroll(默认值)、fixed固定不动\n\n3.6 background\n\n​ 简写属性：background:background-color|background-image|background-repeat|background-position\n\n​ 书写顺序是没有要求\n\n4.显示相关\n\n4.1 display\n\n​ 通过display属性设置元素是否显示，以及是否独占一行\n\n​ 常用取值：\n\n| 取值 | 含义 | 解释 |\n\n| ———— | —————- | —————— |\n\n| none | 不显示 | |\n\n| inline | 显示为内联元素，行级元素的默认值 | 将块级元素变为行级元素，不再独占一行 |\n\n| block | 显示为块级元素，块级元素的默认值 | 将行级元素变为块级元素，独占一行 |\n\n| inline-block | 显示为内联元素，但可以设置宽和高 | 在inline的基础上设置宽和高 |\n\n注意:\n\n行级元素默认是无法设置宽和高，可以为行级元素设置display:inline-block，然后就可以设置宽和高了\n\n4.2 visibility\n\n​ 也可以通过visibility属性设置元素是否显示\n\n​ 常用取值：\n\n| 取值 | 含义 | 解释 |\n\n| ——- | —- | —- |\n\n| visible | 显示 | |\n\n| hidden | 隐藏 | |\n\n4.3 两者的区别\n\n​ display隐藏时候不再占据页面的空间，后面的元素会占用其位置\n\n​ visibility隐藏时候会占据页面的空间，位置还保留在页面中，只是不显示\n\n5.列表属性\n\n| 属性 | 含义 | 解释 |\n\n| ——————- | ———– | ——————- |\n\n| list-style-type | 设置列表项前的标记 | |\n\n| list-style-image | 将图像作为列表前的标记 | |\n\n| list-style-position | 设置列表前标记的位置 | outside(默认值)、inside |\n\n| list-style | 简写 | |\n\n| | | |\n\n5.1 list-style-type\n\n​ 取值：none、disc、circle、square、decimal\n\n5.2 list-style\n\n​ 简写属性：list-style:list-style-type|list-style-image|list-style-position\n\n​ 书写顺序没有要求\n\n6.表格属性\n\n​ border-collapse 表格中相邻的边框是否合并(折叠)为单一边框\n\n​ 取值：seperate（分离、默认值）、collapse（合并）\n\n六、盒子模型\n\n1.概念\n\n​ 盒子模型是网页布局的基础，将页面中所有的元素看成是一个盒子，盒子都包含以下几个属性：\n\nwidth 宽度\n\nheight 高度\n\nborder 边框\n\npadding 内边距\n\nmargin 外边距\n\n2.盒子属性\n\n2.1 border\n\n​ 表示的盒子的边框\n\n​ 分为四个方向：\n\n​ border-top、border-right、border-bottom、border-left\n\n​ 每个边都包含三种样式：；\n\n​ 颜色color、粗细width、样式style\n\n​ border-top-color、border-top-width、border-top-style\n\n​ border-right-color、border-right-width、border-right-style\n\n​ border-bottom-color、border-bottom-width、border-bottom-style\n\n​ border-left-color、border-left-width、border-left-style\n\n​ border-style的取值：\n\n​ solid实线、dashed虚线、dotted点状线、double双实线、inset内嵌3D线、outset外嵌3D线\n\n​ 简写，三种方式：\n\n按方向简写\n\nborder-top、border-right、border-bottom、border-left\n\n书写顺序：width style color\n\n按样式简写\n\nborder-color、border-style、border-width\n\n必须按顺时针方向书写，即上、右、下、左，同时可以缩写\n\nborder-width:2px —-&gt;四个边都是2px\n\nborder-width:2px 4px —-&gt;上下2px ,左右4px\n\nborder-width:2px 5px 10px —-&gt;上2px 左右5px 下10px\n\nborder-width:2px 3px 4px 5px —-&gt;上2px 右3px 下4px 左5px\n\n终极简写\n\n如果四个边都一样，border:width stylle color\n\n2.2 padding\n\n​ 表示盒子的内边距，即内容与边框之间的距离\n\n​ 同样也分为四个方向，也可以简写(按顺时针方向)\n\n2.3 margin\n\n​ 表示盒子的外边距，即盒子与盒子之间的距离\n\n​ 同样也分为四个方向，也可以简写\n\n3 其他\n\n3.1 元素所占的空间\n\n​ 页面中的元素所占空间：\n\n宽&#x3D;width+左右padding+左右margin+左右border\n\n高&#x3D;height+左右padding+上下margin+左右border</code></pre>\n\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><h4 id=\"简介-8\"><a href=\"#简介-8\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式、声明式、函数式编程范式。<br>JavaScript在1995年由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语法风格与Self及Scheme较为接近。<br>JavaScript的标准是ECMAScript 。截至 2012 年，所有浏览器都完整的支持ECMAScript 5.1，旧版本的浏览器至少支持ECMAScript 3 标准。2015年6月17日，ECMA国际组织发布了ECMAScript的第六版，该版本正式名称为 ECMAScript 2015，但通常被称为ECMAScript 6 或者ES2015。</p>\n<h4 id=\"使用-1\"><a href=\"#使用-1\" class=\"headerlink\" title=\"使用\"></a>使用</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">1、javaScript的概念:是一种表述语言，也是一种基于对象(Object)和事件驱动(EventDriven)的，安全性好的脚本语言，运行在客户端，从而减轻服务器端的负担，总结如下：\n\n  1.javaScript主要用来向HTML页面找那个添加交互行为。\n\n  2.javaScript是一种脚本语言，语法和java类似。\n\n  3.javaScript一般用来编写客户端脚本。\n\n  4.javaScript是一种解释性语言，边执行边解释。\n\n2、javaScript由核心语法ECMAScript、浏览器对象模型(BOM) 主要用于管理窗口与窗口之间的通讯，因此其核心对象是window、文档对象模型(DOM)三部分组成.\n\n3、网页中引入javaScript三种方式:\n\n  1.使用&lt;Script&gt;&lt;&#x2F;Script&gt;标签内部样式\n\n  2.使用外部js文件\n\n  3.直接在HTML标签中的行内样式。\n\n4.javaScript的作用\n\n1.实现页面表单验证\n\n2.实现页面交互特效\n\n    这里还是要推荐下小编的web前端学习群:867726593，不管你是小白还是大牛，小编我都欢迎，不定期分享干货，包括小编自己整理的一份最新的web前端资料和0基础入门教程，欢迎初学和进阶中的小伙伴。在不忙的时间我会给大家解惑。\n\n5.javaScript的特点\n\n  1.被设计用来向Html页面添加交互行为\n\n  2.是一种英特网上最流行的脚本语言\n\n  3.一般用于编写客户端脚本\n\n  4．是一种解释性语言\n\n6.引入javaScript的方式\n\n   1.使用&lt;Script&gt;标签直接嵌入网页\n\n   2.使用外部js文件\n\nJs中String对象常用的方法：\n\ntoString(包前不包后),2.toLowerCase();toUpperCase();\n\ncharAt(index);返回在指定位置的字符，indexOf(str,index);指定字符串中首次出现的位置;split(str);将字符串分割为字符串数组\n\n在javaScript中条件语句Switch()&#123;&#125;可以接字符串；\n\nalert(“提示信息”)；\n\n   var isOk&#x3D;confirm(“确认框“);&#x2F;&#x2F;如果确认返回true,否则返回false\n\n   prompt();prompt(“提示信息”，“输入框默认信息”);\n\nprompt(“请输入姓名”)\n\n   close();\n\n   open();\n\n   setTimeout();在指定毫秒之后调用某个函数\n\n   setInterval();在指定周期毫秒来调用某个函数\n\nwindow.open();\n\n7.Js语法：\n\n1.区分大小写\n\n2.注意变量，函数等命名规范\n\n3.每行代码以分号结束\n\nJs中的函数：\n\n1.系统函数 \n\n   ParseInt();转换为整数  45.9a转换为45；a6转换返回为NaN(Not a Number)\n\n   isNaN(判断是不是数字)\n\n   typeof(var);判断是什么数据类型\n\n   eval(“5+2”);计算表达式值\n\n2.自定义函数\n\n Function 函数名()&#123;javaScript代码&#125;\n\n Function 函数名(参数1，参数2)&#123;javaScript代码  return 返回值(可选)&#125;\n\nJs中函数的调用:\n\n事件名&#x3D;“函数名(传递的参数值)“;\n\n函数名(传递的参数值);\n\n匿名函数:\n\n匿名函数的声明：\n\nVar 变量名&#x3D;function(参数)&#123;  函数体  return 返回值；&#125; ;\n\n调用\n\n变量名(参数)\n\n8.程序调用\n\n  1.添加alert();方法 2.使用fireBug();方法\n\n9.BOM概述：(Browser Object Model,浏览器对象模型)\n\n 1.window对象的属性\n\n名称说明\n\nHistory有关客户访问过的URL的信息\n\nLocation有关当前URL的信息\n\nScreen有关客户端的屏幕和显示性能的信息\n\nWeindow对象常用的方法：prompt()confirm();setTimeout();setInterval();\n\nWindow对象常用的事件：onload&#x3D;”” onmouseover&#x3D;””;onclick\n\nwindow.parent.location\n\n2.History对象\n\n  方法：back() ;forward();go();\n\n3.Location对象提供当前页面的URL\n\n  属性：host hostname href\n\n  方法:reload() replace();\n\n4.Document对象\n\n  属性:referrer属性判断是不是通过超链接访问的，不是返回null\n\n10.javaScript中的对象，\n\n   Date对象:\n\n  创建date对象发方法var date&#x3D;new Date(MM DD ,YYYY,hh:mm:ss);\n\n                     var  date&#x3D;new Date(); date.getDay();\n\n    Math对象：\n\n     Ceil();对数进行向上取整，ceil(25.5)&#x3D;26;\n\n    Floor();向下取整，floor(25.5)&#x3D;25;\n\n     Math.round(25.5);在原数的加0.5后向下取整\n\n11.Dom概述(文档对象模型)\n\n  由CoreDom,XMLDom,HTML Dom组成；\n\n12.创建数组\n\n   Js中变量的声明:\n\n   Var 数组名称&#x3D;new Array(size);\n\n先声明再赋值 fruit[0]&#x3D;””\n\n声明同时赋值 var fruit&#x3D;new Array(“apple”,”orange”);或 var fruit&#x3D;new Array[“apple”,”orange”];\n\n读取1.使用for循环读取 2.使用for---in读取\n\nFor(var x in fruit)&#123;document.write(fruit[x]+”&lt;br&#x2F;&gt;”)&#125;x为下标\n\nFruit.sort();&#x2F;&#x2F;排序 string str&#x3D;fruit.join(“-”);&#x2F;&#x2F;添加字符串后连接成一个字符串\n\n下拉列表Select对象：\n\n13、 style 定位方面的样式\n\n　　left top  position  z-index\n\n　　鼠标滚动距离：scorllTop:纵向距离\n\n　　　　　　　　　scorllLeft:横向距离\n\n　　鼠标滚动事假：onscorll\n\nJquery对象与Dom对象的相互转换\n\njquery对象转换为DOMD对象，jquery提供两种方法将jquery对象转换为DOM对象，即[index]和get(index),\n\nvar $txtName&#x3D;$(“#txtName”);&#x2F;&#x2F;jquery对象\n\nvar txtName&#x3D;$txtName[0];&#x2F;&#x2F;Dom对象\n\nalert(txtName.checked);&#x2F;&#x2F;检测这个checkbox是否被选中\n\n通过get(index)方法得到对应的Dom对象\n\nVar $txtName&#x3D;$(“#txtName”);&#x2F;&#x2F;jquery对象\n\nVar txtName&#x3D;$txtName.get(0);&#x2F;&#x2F;Dom对象\n\nalert(txtName.checked);&#x2F;&#x2F;检测这个checkbox是否被选中\n\nDom对象转换为jQuery对象\n\nVar txtName&#x3D;document.getElementById(“txtName”);&#x2F;&#x2F;dom对象\n\nVar $txtName&#x3D;$(txtName);&#x2F;&#x2F;\n\nDom中添加class属性使用obj.className&#x3D;classname;\n\n      添加类容使用obj.innerHtml&#x3D;&lt;input &#x2F;&gt;\n\nJquery中添加class属性使用obj.addClaa&#x3D;classname;\n\n      添加类容使用：obj.html&#x3D;&lt;input&#x2F;&gt;;\n\nJqurey中的五大选择器：\n\n基本选择器 (#  .  标签)\n\n层次选择器(后代 &gt;子    +相邻    ~同辈)\n\n属性选择器(P[class&#x3D;name])\n\n过滤选择器(“tr:even”)\n\n可见性选择器(“p:hidden” “p:viside”)\n\nJquery中的事件：\n\n   Obj.bind(“clike”,function()&#123;&#125;);\n\nobj.bind(&#123;mousever:function()&#123;&#125;,&#123;mouserout:function()&#123;&#125;&#125;&#125;);\n\n  obj.unbind();\n\nobj.hover(function()&#123;&#125;,function()&#123;&#125;)方法集合onmouseOver和onmouseOut\n\nobj.toggle();\n\n$(“.tipsbox”).show();obj.hide();\n\n$(“img”).fadeIn(1000);\n\n$(“.txt”).slideUp(1000); obj.slideDown(1000);\n\nObj.toggleClass(“class”);&#x2F;&#x2F;集成了addClass和romoveClass\n\n$(this).val(“”);&#x2F;&#x2F;清空文本内容\n\nVar $newNode&#x3D;$(&lt;”&lt;li&gt;用jquery创建新元素节点&lt;&#x2F;li&gt;”&gt;);\n\n在正则表达式\n\n\nJS中常用的一些小技巧：\n\n1.使用!!操作符转换布尔值，对于变量可以使用！！varable做检测，只要变量的值为：0，null , &quot;&quot; , undefind或者NaN都将返回的是false反之的是true\n\nfunction Account(cash) \n\n&#123; \n\nthis.cash &#x3D; cash; \n\nthis.hasMoney &#x3D; !! cash;\n\n&#125;\n\n2.使用+将字符串转换为数字，只适用字符串数据，否则返回NaN\n\nfunction toNumber(strNum) &#123;\n\nreturn +strNum;\n\n&#125;\n\n适用于Date()返回时间戳数字：+new Date();\n\n3.在循环很大时候数字的长度先给去出来，var legth &#x3D; array.legth;\n\n4.if(&#39;querySelector&#39; in document) &#123;\n\ndocument.querySelector(&quot;#id&quot;);\n\n&#125; else &#123;\n\ndocument.getElementById(&quot;id&quot;);\n\n&#125;\n\n5.获取数组中的最后一个元素\n\nvar array &#x3D; [1,2,3,4,5];\n\narray.slice(-1);\n\n6.字符串元素的替换\n\nvar string &#x3D; &quot;john john&quot;;\n\nstring.replace(&#x2F;hn&#x2F;, &quot;ana&quot;); &#x2F;&#x2F;&quot;joana john&quot;\n\nstring.replace(&#x2F;hn&#x2F;g, &quot;ana&quot;); &#x2F;&#x2F;&quot;joana joana&quot;</code></pre>\n\n<h2 id=\"代码介绍\"><a href=\"#代码介绍\" class=\"headerlink\" title=\"代码介绍\"></a>代码介绍</h2><h3 id=\"bean包\"><a href=\"#bean包\" class=\"headerlink\" title=\"bean包\"></a>bean包</h3><h4 id=\"BootStrap类\"><a href=\"#BootStrap类\" class=\"headerlink\" title=\"BootStrap类\"></a>BootStrap类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.bean;\n\nimport java.sql.Timestamp;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;5 11:28\n *&#x2F;\n\n &#x2F;&#x2F;该类用于将数据库中的数据传递给bootstrap使其对查询数据进行分页处理其中的bootstrap数据类\npublic class BootStrap &#123;\n    private int studentid;\n    private String name;\n    private String gender;\n    private String birthday;\n    private int math;\n    private int java;\n    private int pe;\n\n    public BootStrap() &#123;\n    &#125;\n\n    public BootStrap(int studentid, String name, String gender, String birthday, int math, int java, int pe) &#123;\n        this.studentid &#x3D; studentid;\n        this.name &#x3D; name;\n        this.gender &#x3D; gender;\n        this.birthday &#x3D; birthday;\n        this.math &#x3D; math;\n        this.java &#x3D; java;\n        this.pe &#x3D; pe;\n    &#125;\n\n    public int getStudentid() &#123;\n        return studentid;\n    &#125;\n\n    public void setStudentid(int studentid) &#123;\n        this.studentid &#x3D; studentid;\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name &#x3D; name;\n    &#125;\n\n    public String getGender() &#123;\n        return gender;\n    &#125;\n\n    public void setGender(String gender) &#123;\n        this.gender &#x3D; gender;\n    &#125;\n\n    public String getBirthday() &#123;\n        return birthday;\n    &#125;\n\n    public void setBirthday(String birthday) &#123;\n        this.birthday &#x3D; birthday;\n    &#125;\n\n    public int getMath() &#123;\n        return math;\n    &#125;\n\n    public void setMath(int math) &#123;\n        this.math &#x3D; math;\n    &#125;\n\n    public int getJava() &#123;\n        return java;\n    &#125;\n\n    public void setJava(int java) &#123;\n        this.java &#x3D; java;\n    &#125;\n\n    public int getPe() &#123;\n        return pe;\n    &#125;\n\n    public void setPe(int pe) &#123;\n        this.pe &#x3D; pe;\n    &#125;\n&#125;</code></pre>\n\n\n<h4 id=\"Message类\"><a href=\"#Message类\" class=\"headerlink\" title=\"Message类\"></a>Message类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.bean;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 16:09\n * 后端给前端返回的数据\n *&#x2F;\n \n &#x2F;&#x2F;传递给前端数据，并定义了返回数据的作用\npublic class Message &#123;\n\n    private int status;\n    &#x2F;&#x2F;状态码 0 正常  返回 -1 失败\n\n    private String result;\n    &#x2F;&#x2F;消息内容\n\n    private Object data;\n    &#x2F;&#x2F;消息携带的信息数据\n\n\n    public Message() &#123;\n    &#125;\n\n    public Message(int status, String result) &#123;\n        this.status &#x3D; status;\n        this.result &#x3D; result;\n    &#125;\n\n    public Message(int status, Object data) &#123;\n        this.status &#x3D; status;\n        this.data &#x3D; data;\n    &#125;\n\n    public Message(String result, Object data) &#123;\n        this.result &#x3D; result;\n        this.data &#x3D; data;\n    &#125;\n\n    public Message(int status, String result, Object data) &#123;\n        this.status &#x3D; status;\n        this.result &#x3D; result;\n        this.data &#x3D; data;\n    &#125;\n\n    public int getStatus() &#123;\n        return status;\n    &#125;\n\n    public void setStatus(int status) &#123;\n        this.status &#x3D; status;\n    &#125;\n\n    public String getResult() &#123;\n        return result;\n    &#125;\n\n    public void setResult(String result) &#123;\n        this.result &#x3D; result;\n    &#125;\n\n    public Object getData() &#123;\n        return data;\n    &#125;\n\n    public void setData(Object data) &#123;\n        this.data &#x3D; data;\n    &#125;\n&#125;</code></pre>\n\n<h4 id=\"ResultData类\"><a href=\"#ResultData类\" class=\"headerlink\" title=\"ResultData类\"></a>ResultData类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.bean;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;5 11:05\n *&#x2F;\n\n &#x2F;&#x2F;返回给bootStrap的查询的集合用于分页\npublic class ResultData&lt;T&gt; &#123;\n    &#x2F;&#x2F; 每次查询的集合\n\n    private List&lt;T&gt; rows &#x3D; new ArrayList&lt;&gt;();\n\n    &#x2F;&#x2F; 总数\n\n    private int total;\n\n    public List&lt;T&gt; getRows() &#123;\n        return rows;\n    &#125;\n\n    public void setRows(List&lt;T&gt; rows) &#123;\n        this.rows &#x3D; rows;\n    &#125;\n\n    public int getTotal() &#123;\n        return total;\n    &#125;\n\n    public void setTotal(int total) &#123;\n        this.total &#x3D; total;\n    &#125;\n&#125;</code></pre>\n\n<h4 id=\"Students类\"><a href=\"#Students类\" class=\"headerlink\" title=\"Students类\"></a>Students类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.bean;\n\nimport java.sql.Timestamp;\nimport java.util.Objects;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 18:39\n *&#x2F;\n &#x2F;&#x2F;学生类\npublic class Students &#123;\n\n    private int studentid;\n    private String name;\n    private int gender;\n    private String birthday;\n    private int math;\n    private int java;\n    private int pe;\n\n    public Students() &#123;\n    &#125;\n\n    public Students(int studentid, String name, int gender, String birthday, int math, int java, int pe) &#123;\n        this.studentid &#x3D; studentid;\n        this.name &#x3D; name;\n        this.gender &#x3D; gender;\n        this.birthday &#x3D; birthday;\n        this.math &#x3D; math;\n        this.java &#x3D; java;\n        this.pe &#x3D; pe;\n    &#125;\n\n    public Students(String name, int gender, String birthday, int math, int java, int pe) &#123;\n        this.name &#x3D; name;\n        this.gender &#x3D; gender;\n        this.birthday &#x3D; birthday;\n        this.math &#x3D; math;\n        this.java &#x3D; java;\n        this.pe &#x3D; pe;\n    &#125;\n\n    public int getStudentid() &#123;\n        return studentid;\n    &#125;\n\n    public void setStudentid(int studentid) &#123;\n        this.studentid &#x3D; studentid;\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name &#x3D; name;\n    &#125;\n\n    public int getGender() &#123;\n        return gender;\n    &#125;\n\n    public void setGender(int gender) &#123;\n        this.gender &#x3D; gender;\n    &#125;\n\n    public String getBirthday() &#123;\n        return birthday;\n    &#125;\n\n    public void setBirthday(String birthday) &#123;\n        this.birthday &#x3D; birthday;\n    &#125;\n\n    public int getMath() &#123;\n        return math;\n    &#125;\n\n    public void setMath(int math) &#123;\n        this.math &#x3D; math;\n    &#125;\n\n    public int getJava() &#123;\n        return java;\n    &#125;\n\n    public void setJava(int java) &#123;\n        this.java &#x3D; java;\n    &#125;\n\n    public int getPe() &#123;\n        return pe;\n    &#125;\n\n    public void setPe(int pe) &#123;\n        this.pe &#x3D; pe;\n    &#125;\n\n    @Override\n    public String toString() &#123;\n        return &quot;Students&#123;&quot; +\n                &quot;studentid&#x3D;&quot; + studentid +\n                &quot;, name&#x3D;&#39;&quot; + name + &#39;\\&#39;&#39; +\n                &quot;, gender&#x3D;&quot; + gender +\n                &quot;, birthday&#x3D;&quot; + birthday +\n                &quot;, math&#x3D;&quot; + math +\n                &quot;, java&#x3D;&quot; + java +\n                &quot;, pe&#x3D;&quot; + pe +\n                &#39;&#125;&#39;;\n    &#125;\n\n    @Override\n    public boolean equals(Object o) &#123;\n        if (this &#x3D;&#x3D; o) &#123;\n            return true;\n        &#125;\n        if (o &#x3D;&#x3D; null || getClass() !&#x3D; o.getClass()) &#123;\n            return false;\n        &#125;\n        Students students &#x3D; (Students) o;\n        return studentid &#x3D;&#x3D; students.studentid &amp;&amp; gender &#x3D;&#x3D; students.gender &amp;&amp; math &#x3D;&#x3D; students.math &amp;&amp; java &#x3D;&#x3D; students.java &amp;&amp; pe &#x3D;&#x3D; students.pe &amp;&amp; Objects.equals(name, students.name) &amp;&amp; Objects.equals(birthday, students.birthday);\n    &#125;\n\n    @Override\n    public int hashCode() &#123;\n        return Objects.hash(studentid, name, gender, birthday, math, java, pe);\n    &#125;\n&#125;</code></pre>\n\n<h3 id=\"util包\"><a href=\"#util包\" class=\"headerlink\" title=\"util包\"></a>util包</h3><h4 id=\"NameUtil类\"><a href=\"#NameUtil类\" class=\"headerlink\" title=\"NameUtil类\"></a>NameUtil类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.util;\n\n&#x2F;**\n * 用于返回一个随机姓名\n * @author 15a\n * @date 2022&#x2F;5&#x2F;6 14:09\n *&#x2F;\npublic class NameUtil &#123;\n    public static String getName() &#123;\n        String[]firstNameArray&#x3D; &#123;&quot;尹&quot;,&quot;王&quot;,&quot;任&quot;,&quot;刘&quot;,&quot;孙&quot;,&quot;曲&quot;,&quot;纪&quot;,&quot;许&quot;,&quot;何&quot;,&quot;张&quot;,&quot;李&quot;,&quot;周&quot;,&quot;庞&quot;,&quot;郑&quot;,&quot;段&quot;,&quot;郝&quot;,&quot;徐&quot;,&quot;秦&quot;,&quot;黄&quot;,&quot;谢&quot;&#125;;\n        String[]lastNameArray&#x3D; &#123;&quot;伟&quot;, &quot;勇&quot;, &quot;军&quot;, &quot;磊&quot;, &quot;涛&quot;, &quot;斌&quot;, &quot;强&quot;, &quot;鹏&quot;, &quot;杰&quot;, &quot;峰&quot;, &quot;超&quot;, &quot;波&quot;, &quot;辉&quot;, &quot;刚&quot;, &quot;健&quot;, &quot;明&quot;, &quot;亮&quot;,\n                &quot;俊&quot;, &quot;飞&quot;, &quot;凯&quot;, &quot;浩&quot;, &quot;华&quot;, &quot;平&quot;, &quot;鑫&quot;, &quot;毅&quot;, &quot;林&quot;, &quot;洋&quot;, &quot;宇&quot;, &quot;敏&quot;, &quot;宁&quot;, &quot;建&quot;, &quot;兵&quot;, &quot;旭&quot;, &quot;雷&quot;, &quot;锋&quot;, &quot;彬&quot;, &quot;龙&quot;, &quot;翔&quot;,\n                &quot;阳&quot;, &quot;剑&quot;, &quot;静&quot;, &quot;敏&quot;, &quot;燕&quot;, &quot;艳&quot;, &quot;丽&quot;, &quot;娟&quot;, &quot;莉&quot;, &quot;芳&quot;, &quot;萍&quot;, &quot;玲&quot;, &quot;娜&quot;, &quot;丹&quot;, &quot;洁&quot;, &quot;红&quot;, &quot;颖&quot;, &quot;琳&quot;, &quot;霞&quot;, &quot;婷&quot;, &quot;慧&quot;,\n                &quot;莹&quot;, &quot;晶&quot;, &quot;华&quot;, &quot;倩&quot;, &quot;英&quot;, &quot;佳&quot;, &quot;梅&quot;, &quot;雪&quot;, &quot;蕾&quot;, &quot;琴&quot;, &quot;璐&quot;, &quot;伟&quot;, &quot;云&quot;, &quot;蓉&quot;, &quot;青&quot;, &quot;薇&quot;, &quot;欣&quot;, &quot;琼&quot;, &quot;宁&quot;, &quot;平&quot;,\n                &quot;媛&quot;&#125;;\n        &#x2F;&#x2F;first找姓名列表中的第几个姓\n        int first&#x3D;(int)(20*Math.random());\n        \n        &#x2F;&#x2F;StringBuilder可以直接实现字符串的拼接\n        StringBuilder name&#x3D;new StringBuilder(firstNameArray[first]);\n        \n        &#x2F;&#x2F;名的长度\n        int lastLen&#x3D;(int)(2*Math.random())+1;\n    \n        for(int i&#x3D;0;i&lt;lastLen;i++) &#123;\n            int last&#x3D;(int)(80*Math.random());\n            name.append(lastNameArray[last]);\n        &#125;\n        return name.toString();\n    &#125;\n&#125;</code></pre>\n\n<h4 id=\"StudentsOut类\"><a href=\"#StudentsOut类\" class=\"headerlink\" title=\"StudentsOut类\"></a>StudentsOut类</h4><p>单纯为了excel输出的类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.bean;\n\nimport java.util.Objects;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;7 14:56\n *&#x2F;\npublic class StudentsOut &#123;\n    private int studentid;\n    private String name;\n    private int gender;\n    private String birthday;\n    private int math;\n    private int java;\n    private int pe;\n    private double avg;\n\n    public StudentsOut() &#123;\n    &#125;\n\n    public StudentsOut(int studentid, String name, int gender, String birthday, int math, int java, int pe, double avg) &#123;\n        this.studentid &#x3D; studentid;\n        this.name &#x3D; name;\n        this.gender &#x3D; gender;\n        this.birthday &#x3D; birthday;\n        this.math &#x3D; math;\n        this.java &#x3D; java;\n        this.pe &#x3D; pe;\n        this.avg &#x3D; avg;\n    &#125;\n\n    public int getStudentid() &#123;\n        return studentid;\n    &#125;\n\n    public void setStudentid(int studentid) &#123;\n        this.studentid &#x3D; studentid;\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name &#x3D; name;\n    &#125;\n\n    public int getGender() &#123;\n        return gender;\n    &#125;\n\n    public void setGender(int gender) &#123;\n        this.gender &#x3D; gender;\n    &#125;\n\n    public String getBirthday() &#123;\n        return birthday;\n    &#125;\n\n    public void setBirthday(String birthday) &#123;\n        this.birthday &#x3D; birthday;\n    &#125;\n\n    public int getMath() &#123;\n        return math;\n    &#125;\n\n    public void setMath(int math) &#123;\n        this.math &#x3D; math;\n    &#125;\n\n    public int getJava() &#123;\n        return java;\n    &#125;\n\n    public void setJava(int java) &#123;\n        this.java &#x3D; java;\n    &#125;\n\n    public int getPe() &#123;\n        return pe;\n    &#125;\n\n    public void setPe(int pe) &#123;\n        this.pe &#x3D; pe;\n    &#125;\n\n    public double getAvg() &#123;\n        return avg;\n    &#125;\n\n    public void setAvg(double avg) &#123;\n        this.avg &#x3D; avg;\n    &#125;\n\n    @Override\n    public boolean equals(Object o) &#123;\n        if (this &#x3D;&#x3D; o) &#123;\n            return true;\n        &#125;\n        if (o &#x3D;&#x3D; null || getClass() !&#x3D; o.getClass()) &#123;\n            return false;\n        &#125;\n        StudentsOut that &#x3D; (StudentsOut) o;\n        return studentid &#x3D;&#x3D; that.studentid &amp;&amp; gender &#x3D;&#x3D; that.gender &amp;&amp; math &#x3D;&#x3D; that.math &amp;&amp; java &#x3D;&#x3D; that.java &amp;&amp; pe &#x3D;&#x3D; that.pe &amp;&amp; Double.compare(that.avg, avg) &#x3D;&#x3D; 0 &amp;&amp; Objects.equals(name, that.name) &amp;&amp; Objects.equals(birthday, that.birthday);\n    &#125;\n\n    @Override\n    public int hashCode() &#123;\n        return Objects.hash(studentid, name, gender, birthday, math, java, pe, avg);\n    &#125;\n&#125;</code></pre>\n\n\n<h4 id=\"RandomUtil类\"><a href=\"#RandomUtil类\" class=\"headerlink\" title=\"RandomUtil类\"></a>RandomUtil类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.util;\n\nimport java.util.Random;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;5 10:40\n * 返回学生随机学号\n *&#x2F;\npublic class RandomUtil &#123;\n\n    private static Random r &#x3D; new Random();\n    public static int getCode()&#123;\n        return r.nextInt(900000)+100000;\n    &#125;\n&#125;</code></pre>\n\n<h4 id=\"DruidUtil类\"><a href=\"#DruidUtil类\" class=\"headerlink\" title=\"DruidUtil类\"></a>DruidUtil类</h4><p>了解如何使用德鲁伊池进行数据库的连接即可</p>\n<p>用到时直接套用模板</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.util;\n\nimport com.alibaba.druid.pool.DruidDataSourceFactory;\n\nimport javax.sql.DataSource;\nimport javax.xml.transform.Result;\nimport java.io.IOException;\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.util.Properties;\n\npublic class DruidUtil &#123;\n\n    private static DataSource ds;\n    static&#123;\n        try &#123;\n            Properties ppt &#x3D; new Properties();\n            ppt.load(DruidUtil.class.getClassLoader().getResourceAsStream(&quot;druid.properties&quot;));\n            ds &#x3D; DruidDataSourceFactory.createDataSource(ppt);\n        &#125; catch (Exception e) &#123;\n            e.printStackTrace();\n        &#125;\n    &#125;\n\n\n    &#x2F;**\n     * 从连接池中取出一个连接给用户\n     * @return\n     *&#x2F;\n    public static Connection getConnection()&#123;\n        try &#123;\n            return ds.getConnection();\n        &#125; catch (SQLException throwables) &#123;\n            throwables.printStackTrace();\n        &#125;\n        return null;\n    &#125;\n\n\n    public static void close(Connection conn, Statement state, ResultSet rs)&#123;\n        try &#123;\n            if (rs !&#x3D; null) &#123;\n                rs.close();\n            &#125;\n\n        &#125; catch (Exception throwables) &#123;\n            throwables.printStackTrace();\n        &#125;\n        try &#123;\n            if(state!&#x3D;null) &#123;\n                state.close();\n            &#125;\n        &#125; catch (Exception throwables) &#123;\n            throwables.printStackTrace();\n        &#125;\n        try &#123;\n            conn.close();\n        &#125; catch (Exception throwables) &#123;\n            throwables.printStackTrace();\n        &#125;\n    &#125;\n&#125;</code></pre>\n\n<h4 id=\"JsonUtil类\"><a href=\"#JsonUtil类\" class=\"headerlink\" title=\"JsonUtil类\"></a>JsonUtil类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.util;\n\nimport com.google.gson.Gson;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 16:13\n * 将Json对象转换为字符串\n *&#x2F;\npublic class JsonUtil &#123;\n\n    private static Gson g &#x3D; new Gson();\n\n    &#x2F;&#x2F;把数据进行转换\n    public static String toJson(Object o)&#123;\n        return g.toJson(o);\n    &#125;\n&#125;</code></pre>\n\n<h3 id=\"exception包\"><a href=\"#exception包\" class=\"headerlink\" title=\"exception包\"></a>exception包</h3><h4 id=\"DuplicateException类\"><a href=\"#DuplicateException类\" class=\"headerlink\" title=\"DuplicateException类\"></a>DuplicateException类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.exception;\n&#x2F;**\n* @author 15a\n* @date 2022&#x2F;5&#x2F;5 9:48\n * 处理由于主键重复自定义抛出的异常，返回一个信息\n*&#x2F;\n\npublic class DuplicateException extends Exception&#123;\n    public DuplicateException(String message)&#123;\n        super(message);\n    &#125;\n\n&#125;</code></pre>\n\n<h3 id=\"mvc包\"><a href=\"#mvc包\" class=\"headerlink\" title=\"mvc包\"></a>mvc包</h3><p>因为mvc框架是可以通过Spring来使用的，但是此程序的mvc是我根据视频一点点编写的，所以不太了解，只了解其dao、controller和service的使用。</p>\n<h4 id=\"ResponseView注解\"><a href=\"#ResponseView注解\" class=\"headerlink\" title=\"ResponseView注解\"></a>ResponseView注解</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.mvc;\n\nimport java.lang.annotation.*;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 14:36\n * 被该注解添加的方法，会被用于处理请求，以视图的形式返回数据给前端\n *&#x2F;\n\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface ResponseView &#123;\n    String value();\n\n&#125;</code></pre>\n<h4 id=\"ResponseBody注解\"><a href=\"#ResponseBody注解\" class=\"headerlink\" title=\"ResponseBody注解\"></a>ResponseBody注解</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.mvc;\n\nimport java.lang.annotation.*;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 14:36\n * 被该注解添加的方法，会被用于处理请求，以文字或字符串的形式返回数据给前端\n *&#x2F;\n\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface ResponseBody &#123;\n    String value();\n\n&#125;</code></pre>\n<h4 id=\"ResponseType枚举类\"><a href=\"#ResponseType枚举类\" class=\"headerlink\" title=\"ResponseType枚举类\"></a>ResponseType枚举类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.mvc;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 14:39\n *&#x2F;\npublic enum ResponseType &#123;\n    &#x2F;&#x2F; 文字 视图\n    TEXT,VIEW\n&#125;\n</code></pre>\n\n<h4 id=\"DispatcherServlet类\"><a href=\"#DispatcherServlet类\" class=\"headerlink\" title=\"DispatcherServlet类\"></a>DispatcherServlet类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.mvc;\n\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.util.Properties;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 12:06\n * 传至web.xml的servlet接口\n * 在对应servlet里面将前端.do请求拦截\n *&#x2F;\npublic class DispatcherServlet extends HttpServlet &#123;\n\n    @Override\n    public void init(ServletConfig config) throws ServletException &#123;\n        &#x2F;&#x2F;加载配置文件路径, contentConfigLocation是名字，实际加载的配置文件是application.properties，在xml文件里进行了配置了\n        String path&#x3D;config.getInitParameter(&quot;contentConfigLocation&quot;);\n        &#x2F;&#x2F;读取配置文件 在当前类获取类加载器然后得到资源流\n        InputStream is &#x3D; DispatcherServlet.class.getClassLoader().getResourceAsStream(path);\n\n        try&#123;\n            HandleMapping.load(is);\n        &#125;catch (Exception e)&#123;\n            System.out.println(e);\n        &#125;\n    &#125;\n\n    @Override\n    protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        &#x2F;&#x2F;获取用户请求的URI\n        String uri &#x3D; req.getRequestURI();\n        HandleMapping.MVCMapping mapping &#x3D; HandleMapping.get(uri);\n        if(mapping&#x3D;&#x3D;null)&#123;\n            resp.sendError(404);\n            return;\n        &#125;\n\n        &#x2F;&#x2F;通过获得的mapping(obj, method, type)\n        Method method &#x3D; mapping.getMethod();\n        Object obj &#x3D; mapping.getObj();\n        ResponseType type &#x3D; mapping.getType();\n        Object result &#x3D; null;\n\n        try &#123;\n            result &#x3D; method.invoke(obj,req,resp);\n        &#125; catch (IllegalAccessException e) &#123;\n            e.printStackTrace();\n        &#125; catch (InvocationTargetException e) &#123;\n            e.printStackTrace();\n        &#125;\n        switch (type)&#123;\n            case TEXT:\n                resp.getWriter().write((String)result);\n                break;\n            case VIEW:\n                resp.sendRedirect((String)result);\n                break;\n            default:\n                break;\n        &#125;\n    &#125;\n\n\n    @Override\n    public void destroy() &#123;\n        super.destroy();\n    &#125;\n&#125;</code></pre>\n<h4 id=\"HandleMapping类\"><a href=\"#HandleMapping类\" class=\"headerlink\" title=\"HandleMapping类\"></a>HandleMapping类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.mvc;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.annotation.Annotation;\nimport java.lang.reflect.Method;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Properties;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 14:41\n * 处理映射的类\n *&#x2F;\npublic class HandleMapping &#123;\n\n    private static Map&lt;String,MVCMapping&gt; data &#x3D; new HashMap&lt;&gt;();\n\n\n    &#x2F;**\n     * 根据url获取对应的映射\n     * @param url url\n     * @return 返回MVCMapping\n     *&#x2F;\n    public static MVCMapping get(String url)&#123;\n        return data.get(url);\n    &#125;\n\n    public static void load(InputStream is)&#123;\n        Properties ppt &#x3D; new Properties();\n\n        try &#123;\n            ppt.load(is);\n        &#125; catch (IOException e) &#123;\n            e.printStackTrace();\n        &#125;\n\n        &#x2F;&#x2F;获取配置文件里面&#x3D;右边的名称\n        Collection&lt;Object&gt; values &#x3D; ppt.values();\n\n        for (Object value : values) &#123;\n\n            &#x2F;&#x2F;通过反射加载类\n            &#x2F;&#x2F;反射：\n\n            String ClassName &#x3D; (String) value;\n\n            try &#123;\n                Class&lt;?&gt; aClass &#x3D; Class.forName(ClassName);\n\n                Object o &#x3D; aClass.newInstance();\n\n                Method[] methods &#x3D; aClass.getMethods();\n\n                for (Method method : methods) &#123;\n                    &#x2F;&#x2F;找出含有@ResponseView @ResponseBody\n                    Annotation[] annotations &#x3D; method.getAnnotations();\n                    if(annotations!&#x3D;null)&#123;\n                        for (Annotation annotation : annotations) &#123;\n                            if(annotation instanceof ResponseBody)&#123;\n\n                                &#x2F;&#x2F;给前端返回字符串文本\n                                MVCMapping mvcMapping &#x3D; new MVCMapping(o,method,ResponseType.TEXT);\n                                data.put(((ResponseBody) annotation).value(),mvcMapping);\n                            &#125;\n                            else if(annotation instanceof ResponseView)&#123;\n                                &#x2F;&#x2F;给前端返回要跳转的视图地址\n                                MVCMapping mvcMapping &#x3D; new MVCMapping(o,method,ResponseType.VIEW);\n                                data.put(((ResponseView) annotation).value(),mvcMapping);\n                            &#125;\n                            else&#123;\n\n                            &#125;\n                        &#125;\n                    &#125;\n\n                &#125;\n            &#125; catch (Exception e) &#123;\n                e.printStackTrace();\n            &#125;\n\n\n        &#125;\n\n    &#125;\n\n\n    public static class MVCMapping&#123;\n\n        private Object obj;         &#x2F;&#x2F;一个对象obj 映射到一个方法method 并且类型为type\n        private Method method;\n        private ResponseType type;\n\n        public MVCMapping() &#123;\n        &#125;\n\n        public MVCMapping(Object obj, Method method, ResponseType type) &#123;\n            this.obj &#x3D; obj;\n            this.method &#x3D; method;\n            this.type &#x3D; type;\n        &#125;\n\n        public Object getObj() &#123;\n            return obj;\n        &#125;\n\n        public void setObj(Object obj) &#123;\n            this.obj &#x3D; obj;\n        &#125;\n\n        public Method getMethod() &#123;\n            return method;\n        &#125;\n\n        public void setMethod(Method method) &#123;\n            this.method &#x3D; method;\n        &#125;\n\n        public ResponseType getType() &#123;\n            return type;\n        &#125;\n\n        public void setType(ResponseType type) &#123;\n            this.type &#x3D; type;\n        &#125;\n    &#125;\n&#125;</code></pre>\n<h3 id=\"dao包\"><a href=\"#dao包\" class=\"headerlink\" title=\"dao包\"></a>dao包</h3><p>数据访问层（Dao）</p>\n<p>Dao的作用是封装对数据库的访问：增删改查，不涉及业务逻辑，只是达到按某个条件获得指定数据的要求；</p>\n<h4 id=\"AdminDao接口\"><a href=\"#AdminDao接口\" class=\"headerlink\" title=\"AdminDao接口\"></a>AdminDao接口</h4><p>对于管理员的数据访问以及操作</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.dao;\n\nimport java.util.Date;\n\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 16:27\n * 连接数据库层\n *&#x2F;\npublic interface AdminDao &#123;\n    &#x2F;**\n     * 根据用户名更改登录时间和ip\n     * @param username  用户名\n     * @param date      登陆时间\n     * @param ip        IP地址\n     *&#x2F;\n    void updateLoginTime(String username, Date date, String ip);\n\n\n    &#x2F;**\n     * 检查是否登录成功\n     * @param username 用户名\n     * @param password 密码\n     * @return 是否成功\n     *&#x2F;\n    boolean login(String username,String password);\n&#125;</code></pre>\n\n<h4 id=\"AdminDaoImpl类\"><a href=\"#AdminDaoImpl类\" class=\"headerlink\" title=\"AdminDaoImpl类\"></a>AdminDaoImpl类</h4><p>该类实现了AdminDao接口</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.dao.impl;\n\nimport com.alibaba.druid.pool.DruidDataSourceFactory;\nimport com.soul15a.dao.AdminDao;\nimport com.soul15a.util.DruidUtil;\n\nimport java.sql.*;\nimport java.util.Date;\n\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 16:56\n *&#x2F;\npublic class AdminDaoImpl implements AdminDao &#123;\n    private static final String SQL_UPDATE_LOGIN_TIME &#x3D; &quot;update Admin set logintime&#x3D;?,loginip&#x3D;? where username&#x3D;?&quot;;\n    &#x2F;&#x2F;更新Admin表的登录时间以及ip根据用户名\n\n    private static final String SQL_LOGIN &#x3D; &quot;select * from ADMIN where username&#x3D;? and password&#x3D;?&quot;;\n    &#x2F;&#x2F;根据用户名和密码登录管理员\n\n    @Override\n    public void updateLoginTime(String username, Date date, String ip) &#123;\n        Connection connection &#x3D; null;\n        PreparedStatement state &#x3D; null;\n        &#x2F;&#x2F;获取连接\n\n        &#x2F;&#x2F;预编译sql，防止sql注入\n        try &#123;\n            connection &#x3D; DruidUtil.getConnection();\n            state &#x3D; connection.prepareStatement(SQL_UPDATE_LOGIN_TIME);\n\n\n            &#x2F;&#x2F;传入的util类型的date转换为sql类型的date\n            state.setDate(1,new java.sql.Date(date.getTime()));\n            state.setString(2,ip);\n            state.setString(3,username);\n            state.executeUpdate();\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection,state,null);\n            &#x2F;&#x2F;德鲁伊工具类里面将连接、state语句、结果集的关闭\n        &#125;\n    &#125;\n\n    @Override\n    public boolean login(String username, String password) &#123;\n        Connection connection &#x3D; null;\n        PreparedStatement state &#x3D; null;\n        ResultSet resultSet &#x3D; null;\n\n        &#x2F;&#x2F;预编译sql\n        try &#123;\n            connection &#x3D; DruidUtil.getConnection();\n            state &#x3D; connection.prepareStatement(SQL_LOGIN);\n\n            state.setString(1,username);\n            state.setString(2,password);\n            resultSet &#x3D; state.executeQuery();\n\n            &#x2F;&#x2F;看是否有值，如果查出来有值即返回true\n\n            return resultSet.next();\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection,state,resultSet);\n        &#125;\n\n        return false;\n    &#125;\n&#125;</code></pre>\n\n<h4 id=\"StudentsDao\"><a href=\"#StudentsDao\" class=\"headerlink\" title=\"StudentsDao\"></a>StudentsDao</h4><p>对于学生的数据访问以及操作</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.dao;\n\nimport com.soul15a.bean.Students;\nimport com.soul15a.exception.DuplicateException;\n\nimport java.util.List;\nimport java.util.Map;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 19:25\n *&#x2F;\npublic interface StudentsDao &#123;\n\n\n    &#x2F;**\n     * 查询控制台所需数据\n     * @return 1\n     *&#x2F;\n    List&lt;Map&lt;String, Double&gt;&gt; console();\n\n    &#x2F;**\n     * 查询是否分页\n     * @param limit true代表分页 false代表不分页\n     * @param offset 起始位置\n     * @param pageNumber 每页查询数量\n     * @return 1\n     *&#x2F;\n    List&lt;Students&gt;findAll(boolean limit,int offset, int pageNumber);\n\n    &#x2F;**\n     * 根据学号查询学生\n     * @param studentId 学号\n     * @return 学生对象\n     *&#x2F;\n    Students findByStudentId(int studentId);\n\n\n    &#x2F;**\n     * 根据学生姓名模糊匹配查询\n      * @param name 学生姓名\n     * @param limit true代表分页 false代表不分页\n     * @param offset 起始位置\n     * @param pageNumber 每页查询数量\n     * @return 学生信息列表\n     *&#x2F;\n    List&lt;Students&gt; findByStudentName(String name,boolean limit, int offset, int pageNumber);\n\n\n    &#x2F;**\n     * 导入学生\n     * @param student 学生\n     * @return 是否导入成功\n     *&#x2F;\n    boolean insert(Students student) throws DuplicateException;\n\n    &#x2F;**\n     * 更新学生数据\n     * @param studentid 学号\n     * @param newStudent 新更新的学生信息\n     * @return 是否更新成功\n     *&#x2F;\n    boolean update(int studentid, Students newStudent);\n\n    &#x2F;**\n     * 根据学号来删除学生\n     * @param studentId 学号\n     * @return 是否删除成功\n     *&#x2F;\n    boolean delete(int studentId);\n\n    &#x2F;**\n     * 修改学生成绩\n     * @param math 数学\n     * @param java Java\n     * @param pe 体育\n     * @return 是否修改成功\n     *&#x2F;\n    boolean course(int math,int java,int pe);\n\n    &#x2F;**\n     * 添加十万数据\n     * @return 是否添加成功\n     * @throws DuplicateException 抛出异常，该异常是插入的是否主键重复\n     *&#x2F;\n    boolean add10w() throws DuplicateException;\n\n    &#x2F;**\n     * 生成excel\n     * @return 是否成功\n     * @throws DuplicateException 抛出异常\n     *&#x2F;\n    boolean excel() throws DuplicateException;\n&#125;</code></pre>\n\n<h4 id=\"StudentDaoImpl类\"><a href=\"#StudentDaoImpl类\" class=\"headerlink\" title=\"StudentDaoImpl类\"></a>StudentDaoImpl类</h4><p>对StudentDao接口的实现</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.dao.impl;\n\nimport com.soul15a.bean.Students;\nimport com.soul15a.bean.StudentsOut;\nimport com.soul15a.dao.StudentsDao;\nimport com.soul15a.exception.DuplicateException;\nimport com.soul15a.util.DruidUtil;\nimport com.soul15a.util.NameUtil;\nimport com.soul15a.util.RandomUtil;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.sql.*;\nimport java.util.*;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 19:33\n *&#x2F;\npublic class StudentsDaoImpl implements StudentsDao &#123;\n\n\n\n    private static final String SQL_CONSOLE &#x3D; &quot;SELECT COUNT(studentid) data1_size, AVG(math) data2_size, AVG(java) data3_size, AVG(pe) data4_size FROM student;&quot;;\n    &#x2F;&#x2F;与控制台相关的语句\n\n    private static final String SQL_FIND_ALL &#x3D; &quot;SELECT * FROM student&quot;;\n    &#x2F;&#x2F;查询全部\n\n    private static final String SQL_FIND_LIMIT &#x3D; &quot;SELECT * FROM student limit ?,?&quot;;\n    &#x2F;&#x2F;分页查询\n\n    private static final String SQL_FIND_BY_ID &#x3D; &quot;SELECT * FROM student WHERE studentid&#x3D;?&quot;;\n    &#x2F;&#x2F;根据学号查询\n\n    private static final String SQL_FIND_BY_NAME &#x3D; &quot;SELECT * FROM student WHERE name LIKE ?&quot;;\n    &#x2F;&#x2F;根据姓名查询(支持模糊匹配)\n\n    private static final String SQL_FIND_BY_NAME_LIMIT &#x3D; &quot;SELECT * FROM student WHERE name LIKE ? limit ?,?&quot;;\n    &#x2F;&#x2F;根据姓名查询(支持模糊匹配)(分页)\n\n    private static final String SQL_INSERT &#x3D; &quot;INSERT INTO student (studentid,name,gender,birthday,math,java,pe) VALUES (?,?,?,?,?,?,?)&quot;;\n    &#x2F;&#x2F;导入学生信息\n\n    private static final String SQL_UPDATE &#x3D; &quot;UPDATE student SET name&#x3D;?,gender&#x3D;?,birthday&#x3D;?,math&#x3D;?,java&#x3D;?,pe&#x3D;? WHERE studentid&#x3D;?&quot;;\n    &#x2F;&#x2F;更改学生信息(学号不能修改)\n\n    private static final String SQL_DELETE &#x3D; &quot;DELETE FROM student WHERE studentid&#x3D;?&quot;;\n    &#x2F;&#x2F;删除学生信息\n\n    private static final String SQL_UPDATE_COURSE &#x3D; &quot;UPDATE student SET math&#x3D;?,java&#x3D;?,pe&#x3D;?&quot;;\n    &#x2F;&#x2F;修改学生成绩\n\n    String PATH &#x3D; &quot;C:\\\\Users\\\\15a\\\\Desktop\\\\&quot;;\n    &#x2F;&#x2F;Excel表存放路径\n\n\n    &#x2F;**\n     * 将前端传入的math，java，pe赋值给所有学生的成绩\n     * @param math 数学\n     * @param java Java\n     * @param pe 体育\n     * @return 导入成绩是否成功\n     *&#x2F;\n    @Override\n    public boolean course(int math, int java, int pe)&#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n\n        try &#123;\n            preparedStatement &#x3D; connection.prepareStatement(SQL_UPDATE_COURSE);\n            preparedStatement.setInt(1,math);\n            preparedStatement.setInt(2,java);\n            preparedStatement.setInt(3,pe);\n            return preparedStatement.executeUpdate() &gt; 0;\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection,preparedStatement,null);\n        &#125;\n\n        return false;\n    &#125;\n\n    &#x2F;**\n     * \n     * @return 返回在控制台前端接收的列表，代表控制台中所需的各种值\n     *&#x2F;\n    @Override\n    public List&lt;Map&lt;String, Double&gt;&gt; console() &#123;\n\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet resultSet &#x3D; null;\n        ArrayList list &#x3D; new ArrayList();\n\n\n        try &#123;\n            preparedStatement &#x3D; connection.prepareStatement(SQL_CONSOLE);\n            &#x2F;&#x2F;预编译sql语句\n\n            resultSet &#x3D; preparedStatement.executeQuery();\n            &#x2F;&#x2F;得到结果集\n\n            if(resultSet.next())&#123;\n                double data1_size &#x3D; resultSet.getDouble(&quot;data1_size&quot;);\n                double data2_size &#x3D; resultSet.getDouble(&quot;data2_size&quot;);\n                double data3_size &#x3D; resultSet.getDouble(&quot;data3_size&quot;);\n                double data4_size &#x3D; resultSet.getDouble(&quot;data4_size&quot;);\n                Map map1 &#x3D; new HashMap();\n                Map map2 &#x3D; new HashMap();\n                Map map3 &#x3D; new HashMap();\n                Map map4 &#x3D; new HashMap();\n                map1.put(&quot;data1_size&quot;,data1_size);\n                map2.put(&quot;data2_size&quot;,data2_size);\n                map3.put(&quot;data3_size&quot;,data3_size);\n                map4.put(&quot;data4_size&quot;,data4_size);\n                list.add(map1);\n                list.add(map2);\n                list.add(map3);\n                list.add(map4);\n            &#125;\n        &#125; catch (Exception e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection,preparedStatement,resultSet);\n        &#125;\n\n        return list;\n    &#125;\n\n    @Override\n    public List&lt;Students&gt; findAll(boolean limit, int offset, int pageNumber) &#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet resultSet &#x3D; null;\n        ArrayList list &#x3D; new ArrayList();\n\n        try &#123;\n            if (limit) &#123;\n                preparedStatement &#x3D; connection.prepareStatement(SQL_FIND_LIMIT);\n                preparedStatement.setInt(1, offset);\n                preparedStatement.setInt(2, pageNumber);\n            &#125; else &#123;\n                preparedStatement &#x3D; connection.prepareStatement(SQL_FIND_ALL);\n            &#125;\n            resultSet &#x3D; preparedStatement.executeQuery();\n            while (resultSet.next()) &#123;\n\n                int studentid &#x3D; resultSet.getInt(&quot;studentid&quot;);\n                String name &#x3D; resultSet.getString(&quot;name&quot;);\n                int gender &#x3D; resultSet.getInt(&quot;gender&quot;);\n                String birthday &#x3D; resultSet.getString(&quot;birthday&quot;);\n                int math &#x3D; resultSet.getInt(&quot;math&quot;);\n                int java &#x3D; resultSet.getInt(&quot;java&quot;);\n                int pe &#x3D; resultSet.getInt(&quot;pe&quot;);\n\n                Students student &#x3D; new Students(studentid, name, gender, birthday, math, java, pe);\n                list.add(student);\n            &#125;\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection, preparedStatement, resultSet);\n        &#125;\n\n        return list;\n    &#125;\n\n    @Override\n    public Students findByStudentId(int studentId) &#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet resultSet &#x3D; null;\n        ArrayList list &#x3D; new ArrayList();\n        Students students &#x3D; null;\n        try &#123;\n            preparedStatement &#x3D; connection.prepareStatement(SQL_FIND_BY_ID);\n            preparedStatement.setInt(1,studentId);\n            resultSet &#x3D; preparedStatement.executeQuery();\n            if(resultSet.next())&#123;\n                String name &#x3D; resultSet.getString(&quot;name&quot;);\n                int gender &#x3D; resultSet.getInt(&quot;gender&quot;);\n                String birthday &#x3D; resultSet.getString(&quot;birthday&quot;);\n                int math &#x3D; resultSet.getInt(&quot;math&quot;);\n                int java &#x3D; resultSet.getInt(&quot;java&quot;);\n                int pe &#x3D; resultSet.getInt(&quot;pe&quot;);\n\n                students &#x3D; new Students(studentId,name,gender,birthday,math,java,pe);\n            &#125;\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection, preparedStatement, resultSet);\n        &#125;\n        return students;\n    &#125;\n\n    @Override\n    public List&lt;Students&gt; findByStudentName(String name,boolean limit, int offset, int pageNumber) &#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet resultSet &#x3D; null;\n        ArrayList list &#x3D; new ArrayList();\n\n        try &#123;\n            if(limit) &#123;\n                preparedStatement &#x3D; connection.prepareStatement(SQL_FIND_BY_NAME_LIMIT);\n                preparedStatement.setString(1,&quot;%&quot;+name+&quot;%&quot;);\n                preparedStatement.setInt(2,offset);\n                preparedStatement.setInt(3,pageNumber);\n            &#125;\n            else &#123;\n                preparedStatement &#x3D; connection.prepareStatement(SQL_FIND_BY_NAME);\n                preparedStatement.setString(1,&quot;%&quot;+name+&quot;%&quot;);\n            &#125;\n            resultSet &#x3D; preparedStatement.executeQuery();\n            while (resultSet.next()) &#123;\n                int studentid &#x3D; resultSet.getInt(&quot;studentid&quot;);\n                int gender &#x3D; resultSet.getInt(&quot;gender&quot;);\n                String birthday &#x3D; resultSet.getString(&quot;birthday&quot;);\n                int math &#x3D; resultSet.getInt(&quot;math&quot;);\n                int java &#x3D; resultSet.getInt(&quot;java&quot;);\n                int pe &#x3D; resultSet.getInt(&quot;pe&quot;);\n                Students student &#x3D; new Students(studentid, resultSet.getString(&quot;name&quot;), gender, birthday, math, java, pe);\n                list.add(student);\n            &#125;\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection, preparedStatement, resultSet);\n        &#125;\n\n        return list;\n    &#125;\n\n    @Override\n    public boolean excel()throws DuplicateException&#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet resultSet &#x3D; null;\n\n\n        ArrayList&lt;StudentsOut&gt; list &#x3D; new ArrayList&lt;&gt;();\n        &#x2F;&#x2F;学生列表\n\n        int mathSum &#x3D; 0;\n        int javaSum &#x3D; 0;\n        int peSum &#x3D; 0;\n        int sum &#x3D; 0;\n        try &#123;\n            preparedStatement &#x3D; connection.prepareStatement(SQL_FIND_ALL);\n            resultSet &#x3D; preparedStatement.executeQuery();\n            while (resultSet.next()) &#123;\n\n                int studentid &#x3D; resultSet.getInt(&quot;studentid&quot;);\n                String name &#x3D; resultSet.getString(&quot;name&quot;);\n                int gender &#x3D; resultSet.getInt(&quot;gender&quot;);\n                String birthday &#x3D; resultSet.getString(&quot;birthday&quot;);\n                int math &#x3D; resultSet.getInt(&quot;math&quot;);\n                int java &#x3D; resultSet.getInt(&quot;java&quot;);\n                int pe &#x3D; resultSet.getInt(&quot;pe&quot;);\n                sum +&#x3D; math + java + pe;\n                double avg &#x3D; (math+java+pe)&#x2F;3.0;\n                &#x2F;&#x2F;总成绩平均值\n                mathSum +&#x3D; math;\n                javaSum +&#x3D; java;\n                peSum +&#x3D; pe;\n\n                StudentsOut student &#x3D; new StudentsOut(studentid, name, gender, birthday, math, java, pe,avg);\n                list.add(student);\n            &#125;\n\n            Collections.sort(list, new Comparator&lt;StudentsOut&gt;() &#123;\n                @Override\n                public int compare(StudentsOut o1, StudentsOut o2) &#123;\n                    return Double.compare(o1.getAvg(), o2.getAvg());\n                &#125;\n            &#125;);\n\n            Workbook workbook &#x3D; new XSSFWorkbook();\n\n            Sheet sheet &#x3D; workbook.createSheet(&quot;学生信息&quot;);\n            Row row1 &#x3D; sheet.createRow(0);\n            Cell cell1 &#x3D; row1.createCell(0);\n            Cell cell2 &#x3D; row1.createCell(1);\n            Cell cell3 &#x3D; row1.createCell(2);\n            Cell cell4 &#x3D; row1.createCell(3);\n            Cell cell5 &#x3D; row1.createCell(4);\n            Cell cell6 &#x3D; row1.createCell(5);\n            Cell cell7 &#x3D; row1.createCell(6);\n            Cell cell8 &#x3D; row1.createCell(7);\n            cell1.setCellValue(&quot;学号&quot;);\n            cell2.setCellValue(&quot;姓名&quot;);\n            cell3.setCellValue(&quot;性别&quot;);\n            cell4.setCellValue(&quot;出生日期&quot;);\n            cell5.setCellValue(&quot;数学成绩&quot;);\n            cell6.setCellValue(&quot;Java成绩&quot;);\n            cell7.setCellValue(&quot;体育成绩&quot;);\n            cell8.setCellValue(&quot;总成绩平均值&quot;);\n\n\n            int i &#x3D; 1;\n            for (StudentsOut students : list) &#123;\n                Row row &#x3D; sheet.createRow(i);\n                Cell cell01 &#x3D; row.createCell(0);\n                Cell cell02 &#x3D; row.createCell(1);\n                Cell cell03 &#x3D; row.createCell(2);\n                Cell cell04 &#x3D; row.createCell(3);\n                Cell cell05 &#x3D; row.createCell(4);\n                Cell cell06 &#x3D; row.createCell(5);\n                Cell cell07 &#x3D; row.createCell(6);\n                Cell cell08 &#x3D; row.createCell(7);\n                cell01.setCellValue(students.getStudentid());\n                cell02.setCellValue(students.getName());\n                cell03.setCellValue(students.getGender()&#x3D;&#x3D;1?&quot;男&quot;:&quot;女&quot;);\n                cell04.setCellValue(students.getBirthday());\n                cell05.setCellValue(students.getMath());\n                cell06.setCellValue(students.getJava());\n                cell07.setCellValue(students.getPe());\n                cell08.setCellValue(students.getAvg());\n                i++;\n            &#125;\n            Row row &#x3D; sheet.createRow(i);\n            Cell cell001 &#x3D; row.createCell(0);\n            Cell cell002 &#x3D; row.createCell(1);\n            Cell cell003 &#x3D; row.createCell(2);\n            Cell cell004 &#x3D; row.createCell(3);\n            cell001.setCellValue(&quot;总成绩平均值&quot;);\n            cell002.setCellValue(&quot;数学成绩平均值&quot;);\n            cell003.setCellValue(&quot;Java成绩平均值&quot;);\n            cell004.setCellValue(&quot;体育成绩平均值&quot;);\n            i++;\n            Row row2 &#x3D; sheet.createRow(i);\n            Cell cell0001 &#x3D; row2.createCell(0);\n            Cell cell0002 &#x3D; row2.createCell(1);\n            Cell cell0003 &#x3D; row2.createCell(2);\n            Cell cell0004 &#x3D; row2.createCell(3);\n            cell0001.setCellValue(1.0*sum&#x2F;list.size());\n            cell0002.setCellValue(1.0*mathSum&#x2F;list.size());\n            cell0003.setCellValue(1.0*javaSum&#x2F;list.size());\n            cell0004.setCellValue(1.0*peSum&#x2F;list.size());\n            FileOutputStream fileOutputStream &#x3D; new FileOutputStream(PATH + &quot;学生信息表.xlsx&quot;);\n            workbook.write(fileOutputStream);\n            fileOutputStream.close();\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; catch (IOException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection, preparedStatement, resultSet);\n        &#125;\n        return true;\n    &#125;\n\n\n    @Override\n    public boolean add10w() throws DuplicateException&#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n\n        for(int i &#x3D; 0;i&lt;100000;i++) &#123;\n            try &#123;\n                preparedStatement &#x3D; connection.prepareStatement(SQL_INSERT);\n                Random random &#x3D; new Random();\n                int studentid &#x3D; RandomUtil.getCode();\n                String name &#x3D; NameUtil.getName();\n                int gender &#x3D; random.nextInt(2) + 1;\n                int y &#x3D; random.nextInt(110)+1900;\n                int m &#x3D; random.nextInt(12)+1;\n                int d &#x3D; random.nextInt(30)+1;\n                String birthday &#x3D; y+&quot;-&quot;+m+&quot;-&quot;+d;\n                int math &#x3D; (int) (Math.sqrt(70)*random.nextGaussian() + 80);\n                int java &#x3D; (int) (Math.sqrt(70)*random.nextGaussian() + 80);\n                int pe &#x3D; (int) (Math.sqrt(70)*random.nextGaussian() + 80);\n                preparedStatement.setInt(1,studentid);\n                preparedStatement.setString(2,name);\n                preparedStatement.setInt(3,gender);\n                preparedStatement.setString(4,birthday);\n                preparedStatement.setInt(5,math);\n                preparedStatement.setInt(6,java);\n                preparedStatement.setInt(7,pe);\n                preparedStatement.executeUpdate();\n            &#125; catch (SQLException e) &#123;\n                &#x2F;&#x2F;若主键重复则重新生成\n                if(e.getMessage().contains(&quot;for key&quot;))&#123;\n                    i--;\n                &#125;\n                else&#123;\n                    e.printStackTrace();\n                &#125;\n            &#125;\n        &#125;\n        DruidUtil.close(connection,preparedStatement,null);\n        return true;\n    &#125;\n\n\n    @Override\n    public boolean insert(Students student) throws DuplicateException&#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n\n\n        try &#123;\n            preparedStatement &#x3D; connection.prepareStatement(SQL_INSERT);\n            preparedStatement.setInt(1,student.getStudentid());\n            preparedStatement.setString(2,student.getName());\n            preparedStatement.setInt(3,student.getGender());\n            preparedStatement.setString(4,student.getBirthday());\n            preparedStatement.setInt(5,student.getMath());\n            preparedStatement.setInt(6,student.getJava());\n            preparedStatement.setInt(7,student.getPe());\n            return preparedStatement.executeUpdate() &gt; 0;\n        &#125; catch (SQLException e) &#123;\n            &#x2F;&#x2F;主键重复，重新生成主键\n\n            if(e.getMessage().contains(&quot;for key&quot;))&#123;\n                DuplicateException e2 &#x3D; new DuplicateException(e.getMessage());\n                throw e2;\n            &#125;\n            else&#123;\n                e.printStackTrace();\n            &#125;\n\n        &#125; finally &#123;\n            DruidUtil.close(connection,preparedStatement,null);\n        &#125;\n\n        return false;\n    &#125;\n\n    @Override\n    public boolean update(int id, Students newStudent)&#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n\n        try &#123;\n            preparedStatement &#x3D; connection.prepareStatement(SQL_UPDATE);\n            preparedStatement.setString(1,newStudent.getName());\n            preparedStatement.setInt(2,newStudent.getGender());\n            preparedStatement.setString(3,newStudent.getBirthday());\n            preparedStatement.setInt(4,newStudent.getMath());\n            preparedStatement.setInt(5,newStudent.getJava());\n            preparedStatement.setInt(6,newStudent.getPe());\n            preparedStatement.setInt(7,newStudent.getStudentid());\n            return preparedStatement.executeUpdate() &gt; 0;\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection,preparedStatement,null);\n        &#125;\n        return false;\n    &#125;\n\n\n\n    @Override\n    public boolean delete(int studentId) &#123;\n        Connection connection &#x3D; DruidUtil.getConnection();\n        &#x2F;&#x2F;获取数据库的连接\n        PreparedStatement preparedStatement &#x3D; null;\n\n        try &#123;\n            preparedStatement &#x3D; connection.prepareStatement(SQL_DELETE);\n            preparedStatement.setInt(1,studentId);\n            return preparedStatement.executeUpdate() &gt; 0;\n        &#125; catch (SQLException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            DruidUtil.close(connection,preparedStatement,null);\n        &#125;\n\n        return false;\n    &#125;\n&#125;</code></pre>\n\n<h3 id=\"Service包\"><a href=\"#Service包\" class=\"headerlink\" title=\"Service包\"></a>Service包</h3><p>Service(业务层)<br>service是业务层，是使用一个或多个模型执行操作的方法。</p>\n<ol>\n<li>封装通用的业务逻辑，操作。<br>如一些数据的检验，可以通用处理。</li>\n<li>与数据层的交互。</li>\n<li>其他请求：如远程服务获取数据，如第三方api等。</li>\n</ol>\n<p>实际上操作就是在里面new一个dao类对象，然后直接调用dao即可</p>\n<h4 id=\"AdminService类\"><a href=\"#AdminService类\" class=\"headerlink\" title=\"AdminService类\"></a>AdminService类</h4><p>实现管理的服务</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.service;\n\nimport com.soul15a.dao.AdminDao;\nimport com.soul15a.dao.impl.AdminDaoImpl;\n\nimport java.util.Date;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 17:14\n *&#x2F;\npublic class AdminService &#123;\n\n    private static AdminDao dao &#x3D; new AdminDaoImpl();\n\n    public static void updateLoginTimeAndIp(String username, Date date,String ip)&#123;\n        dao.updateLoginTime(username,date,ip);\n    &#125;\n\n    public static boolean login(String username, String password)&#123;\n       return dao.login(username,password);\n    &#125;\n&#125;</code></pre>\n\n<h4 id=\"StudentService类\"><a href=\"#StudentService类\" class=\"headerlink\" title=\"StudentService类\"></a>StudentService类</h4><p>实现学生的服务</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.service;\n\nimport com.soul15a.bean.Students;\nimport com.soul15a.dao.StudentsDao;\nimport com.soul15a.dao.impl.StudentsDaoImpl;\nimport com.soul15a.exception.DuplicateException;\nimport com.soul15a.util.RandomUtil;\n\nimport java.util.List;\nimport java.util.Map;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 20:40\n *&#x2F;\npublic class StudentService &#123;\n    private static StudentsDao dao &#x3D; new StudentsDaoImpl();\n\n    public List&lt;Map&lt;String,Double&gt;&gt; console()&#123;\n        return dao.console();\n    &#125;\n    \n    &#x2F;**\n     * 查询是否分页\n     * @param limit true代表分页 false代表不分页\n     * @param offset 起始位置\n     * @param pageNumber 每页查询数量\n     * @return 1\n     *&#x2F;\n    public List&lt;Students&gt;findAll(boolean limit, int offset, int pageNumber)&#123;\n        return dao.findAll(limit,offset,pageNumber);\n    &#125;\n\n    &#x2F;**\n     * 根据学号查询学生\n     * @param studentId 学号\n     * @return 学生对象\n     *&#x2F;\n    public static Students findByStudentId(int studentId)&#123;\n        return dao.findByStudentId(studentId);\n    &#125;\n\n\n    &#x2F;**\n     * 根据学生姓名模糊匹配查询\n     * @param name 学生姓名\n     * @param limit true代表分页 false代表不分页\n     * @param offset 起始位置\n     * @param pageNumber 每页查询数量\n     * @return 学生信息列表\n     *&#x2F;\n    public List&lt;Students&gt; findByStudentName(String name,boolean limit, int offset, int pageNumber)&#123;\n        return dao.findByStudentName(name,limit,offset,pageNumber);\n    &#125;\n\n\n    &#x2F;**\n     * 导入学生\n     * @param student 学生\n     * @return 是否导入成功\n     *&#x2F;\n    public static boolean insert(Students student) throws DuplicateException&#123;\n        student.setStudentid(RandomUtil.getCode());\n        try &#123;\n            return dao.insert(student);\n        &#125; catch (DuplicateException e) &#123;\n            return dao.insert(student);\n        &#125;\n    &#125;\n\n    public static boolean add10w()throws DuplicateException&#123;\n        return dao.add10w();\n    &#125;\n\n    public static boolean excel()throws DuplicateException&#123;\n        return dao.excel();\n    &#125;\n\n\n    &#x2F;**\n     * 更新学生数据\n     * @param studentid 学号\n     * @param newStudent 新更新的学生信息\n     * @return 是否更新成功\n     *&#x2F;\n    public static boolean update(int studentid, Students newStudent) throws DuplicateException&#123;\n        dao.delete(studentid);\n        return dao.insert(newStudent);\n    &#125;\n\n    &#x2F;**\n     * 根据学号来删除学生\n     * @param studentid 学号\n     * @return 是否删除成功\n     *&#x2F;\n    public static boolean delete(int studentid)&#123;\n        return dao.delete(studentid);\n    &#125;\n\n\n    public static boolean course(int math,int java,int pe)&#123;\n        return dao.course(math,java,pe);\n    &#125;\n\n&#125;</code></pre>\n\n<h3 id=\"Controller包\"><a href=\"#Controller包\" class=\"headerlink\" title=\"Controller包\"></a>Controller包</h3><p>Controller层，负责具体的业务模块流程的控制，在此层要调用service层的接口来控制业务流程，控制的配置也同样是在Spring的配置文件里进行，针对具体的业务流程，会有不同的控制器。我们具体的设计过程可以将流程进行抽象归纳，设计出可以重复利用的子单元流程模块。这样不仅使程序结构变得清晰，也大大减少了代码量。</p>\n<h4 id=\"AdminController\"><a href=\"#AdminController\" class=\"headerlink\" title=\"AdminController\"></a>AdminController</h4><p>管理层的Controller层</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.controller;\n\nimport com.soul15a.bean.Message;\nimport com.soul15a.mvc.ResponseBody;\nimport com.soul15a.service.AdminService;\nimport com.soul15a.util.JsonUtil;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.util.Date;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 18:06\n *&#x2F;\npublic class AdminController &#123;\n\n    &#x2F;&#x2F;被该注解添加的方法，会被用于处理请求，以文字或字符串的形式返回数据给前端\n    &#x2F;&#x2F;此为使用一个前端文件中&#x2F;admin&#x2F;login.do的请求\n\n    @ResponseBody(&quot;&#x2F;admin&#x2F;login.do&quot;)\n    public String login(HttpServletRequest request, HttpServletResponse response)&#123;\n        String username &#x3D; request.getParameter(&quot;username&quot;);\n        String password &#x3D; request.getParameter(&quot;password&quot;);\n        &#x2F;&#x2F;接收用户名和密码\n\n\n        boolean login &#x3D; AdminService.login(username, password);\n        &#x2F;&#x2F;调用Service层的方法\n        Message msg &#x3D; null;\n\n        if(login)&#123;\n            msg &#x3D; new Message(0, &quot;登陆成功&quot;);\n\n            Date date &#x3D; new Date();\n\n            &#x2F;&#x2F;获取ip\n\n            String remoteAddr &#x3D; request.getRemoteAddr();\n            AdminService.updateLoginTimeAndIp(username,date,remoteAddr);\n            &#x2F;&#x2F;调用Service的方法更新ip\n\n            request.getSession().setAttribute(&quot;adminUsername&quot;,username);\n            &#x2F;&#x2F;将请求的会话的username设为adminUsername\n        &#125;\n        else&#123;\n            msg &#x3D; new Message(-1,&quot;登陆失败&quot;);\n        &#125;\n        &#x2F;&#x2F;将此次操作的Message信息用Gson转为字符串传给前端\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n&#125;</code></pre>\n\n\n<h4 id=\"StudentController类\"><a href=\"#StudentController类\" class=\"headerlink\" title=\"StudentController类\"></a>StudentController类</h4><p>学生信息的Controller层</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.soul15a.controller;\n\nimport com.soul15a.bean.BootStrap;\nimport com.soul15a.bean.Message;\nimport com.soul15a.bean.ResultData;\nimport com.soul15a.bean.Students;\nimport com.soul15a.exception.DuplicateException;\nimport com.soul15a.mvc.ResponseBody;\nimport com.soul15a.service.StudentService;\nimport com.soul15a.util.JsonUtil;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.sql.Timestamp;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\n&#x2F;**\n * @author 15a\n * @date 2022&#x2F;5&#x2F;4 20:42\n *&#x2F;\npublic class StudentsController &#123;\n\n    private StudentService service &#x3D; new StudentService();\n    &#x2F;&#x2F;new一个学生信息的Service层对象以便使用\n\n    \n    &#x2F;&#x2F;HttpServletRequest是获取HTTP页面上的请求信息\n    \n    @ResponseBody(&quot;&#x2F;student&#x2F;console.do&quot;)\n    public String console(HttpServletRequest request, HttpServletResponse response)&#123;\n        Message msg &#x3D; new Message();\n        List&lt;Map&lt;String, Double&gt;&gt; console &#x3D; service.console();\n        if(console.size()&#x3D;&#x3D;0)&#123;\n            msg.setResult(&quot;获取失败&quot;);\n            msg.setStatus(-1);\n        &#125;\n        else&#123;\n            msg.setResult(&quot;获取成功&quot;);\n            msg.setStatus(0);\n            msg.setData(console);\n        &#125;\n\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n\n    @ResponseBody(&quot;&#x2F;student&#x2F;course.do&quot;)\n    public String course(HttpServletRequest request, HttpServletResponse response)&#123;\n        int math &#x3D; Integer.parseInt(request.getParameter(&quot;math&quot;));\n        int java &#x3D; Integer.parseInt(request.getParameter(&quot;java&quot;));\n        int pe &#x3D; Integer.parseInt(request.getParameter(&quot;pe&quot;));\n\n        &#x2F;&#x2F;获取前端页面上被绑定了所填写字符串的值\n        &#x2F;&#x2F;接收数据传给service\n        \n        boolean flag &#x3D; false;\n        Message msg &#x3D; new Message();\n        flag &#x3D; StudentService.course(math,java,pe);\n        if(!flag)&#123;\n            msg.setStatus(-1);\n            msg.setResult(&quot;修改失败&quot;);\n        &#125;\n        else&#123;\n            msg.setStatus(0);\n            msg.setResult(&quot;删除成功&quot;);\n        &#125;\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;other&#x2F;list.do&quot;)\n    public String name(HttpServletRequest request, HttpServletResponse response)&#123;\n        String tname &#x3D; request.getParameter(&quot;tname&quot;);\n        int offset &#x3D; Integer.parseInt(request.getParameter(&quot;offset&quot;));\n        int pageNumber &#x3D; Integer.parseInt(request.getParameter(&quot;pageNumber&quot;));\n\n        List&lt;Students&gt; list &#x3D; service.findByStudentName(tname,true,offset,pageNumber);\n\n        List&lt;BootStrap&gt; listResult &#x3D; new ArrayList&lt;&gt;();\n\n        for (Students students : list) &#123;\n            String gender &#x3D; students.getGender()&#x3D;&#x3D;1?&quot;男&quot;:&quot;女&quot;;\n            BootStrap b &#x3D; new BootStrap(students.getStudentid(),students.getName(),gender,students.getBirthday(),students.getMath(),students.getJava(),students.getPe());\n            listResult.add(b);\n        &#125;\n        ResultData&lt;BootStrap&gt; data &#x3D; new ResultData&lt;&gt;();\n        data.setRows(listResult);\n        &#x2F;&#x2F;&#123;&#123;data1_size&#125;, &#123;&#125;&#125;\n        int total &#x3D; listResult.size();\n        data.setTotal(total);\n        String s &#x3D; JsonUtil.toJson(data);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;student&#x2F;list.do&quot;)\n    public String list(HttpServletRequest request, HttpServletResponse response)&#123;\n        &#x2F;&#x2F;获取起始索引数量\n\n        int offset &#x3D; Integer.parseInt(request.getParameter(&quot;offset&quot;));\n        int pageNumber &#x3D; Integer.parseInt(request.getParameter(&quot;pageNumber&quot;));\n\n        &#x2F;&#x2F;进行查询\n\n        List&lt;Students&gt; list &#x3D; service.findAll(true,offset,pageNumber);\n\n        List&lt;BootStrap&gt; listResult &#x3D; new ArrayList&lt;&gt;();\n        &#x2F;&#x2F;用于返回\n\n        for (Students students : list) &#123;\n            String gender &#x3D; students.getGender()&#x3D;&#x3D;1?&quot;男&quot;:&quot;女&quot;;\n            BootStrap b &#x3D; new BootStrap(students.getStudentid(),students.getName(),gender,students.getBirthday(),students.getMath(),students.getJava(),students.getPe());\n            listResult.add(b);\n        &#125;\n\n        ResultData&lt;BootStrap&gt; data &#x3D; new ResultData&lt;&gt;();\n        data.setRows(listResult);\n        List&lt;Map&lt;String, Double&gt;&gt; dat &#x3D; service.console();\n        &#x2F;&#x2F;&#123;&#123;data1_size&#125;, &#123;&#125;&#125;\n\n\n        int total &#x3D; dat.get(0).get(&quot;data1_size&quot;).intValue();\n        data.setTotal(total);\n        String s &#x3D; JsonUtil.toJson(data);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;other&#x2F;excel.do&quot;)\n    public String excel(HttpServletRequest request, HttpServletResponse response)&#123;\n        boolean flag &#x3D; false;\n        Message msg &#x3D; new Message();\n        try &#123;\n            flag &#x3D; StudentService.excel();\n        &#125; catch (DuplicateException e) &#123;\n            e.printStackTrace();\n        &#125;\n        if(flag)&#123;\n            msg.setStatus(0);\n            msg.setResult(&quot;生成成功&quot;);\n        &#125;\n        else&#123;\n            msg.setStatus(-1);\n            msg.setResult(&quot;生成失败&quot;);\n        &#125;\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;other&#x2F;add10w.do&quot;)\n    public String add10w(HttpServletRequest request, HttpServletResponse response)&#123;\n        boolean flag &#x3D; false;\n        Message msg &#x3D; new Message();\n        try &#123;\n            flag &#x3D; StudentService.add10w();\n        &#125; catch (DuplicateException e) &#123;\n            e.printStackTrace();\n        &#125;\n        if(flag)&#123;\n            msg.setStatus(0);\n            msg.setResult(&quot;生成成功&quot;);\n        &#125;\n        else&#123;\n            msg.setStatus(-1);\n            msg.setResult(&quot;生成失败&quot;);\n        &#125;\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;student&#x2F;insert.do&quot;)\n    public String insert(HttpServletRequest request, HttpServletResponse response)&#123;\n\n        &#x2F;&#x2F; 学号自动生成\n\n        String name &#x3D; request.getParameter(&quot;name&quot;);\n        String gender &#x3D; request.getParameter(&quot;gender&quot;);\n        String birthday &#x3D; request.getParameter(&quot;birthday&quot;);\n        String math &#x3D; request.getParameter(&quot;math&quot;);\n        String java &#x3D; request.getParameter(&quot;java&quot;);\n        String pe &#x3D; request.getParameter(&quot;pe&quot;);\n        System.out.println(name);\n        System.out.println(gender);\n        System.out.println(birthday);\n        System.out.println(math);\n        System.out.println(java);\n        System.out.println(pe);\n        int tmp &#x3D; gender.equals(&quot;男&quot;)?1:2;\n        Students students &#x3D; new Students(1,name, tmp, birthday, Integer.parseInt(math.trim()), Integer.parseInt(java.trim()), Integer.parseInt(pe.trim()));\n\n        Message msg &#x3D; new Message();\n        boolean flag &#x3D; false;\n        try &#123;\n            flag &#x3D; StudentService.insert(students);\n        &#125; catch (DuplicateException e) &#123;\n            e.printStackTrace();\n        &#125;\n        if(flag)&#123;\n            msg.setStatus(0);\n            msg.setResult(&quot;录入成功&quot;);\n        &#125;\n        else&#123;\n            msg.setStatus(-1);\n            msg.setResult(&quot;录入失败&quot;);\n        &#125;\n\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;student&#x2F;find.do&quot;)\n    public String find(HttpServletRequest request, HttpServletResponse response)&#123;\n        String studentid &#x3D; request.getParameter(&quot;studentid&quot;);\n        Students byStudentId &#x3D; StudentService.findByStudentId(Integer.parseInt(studentid.trim()));\n\n        Message msg &#x3D; new Message();\n        if(byStudentId&#x3D;&#x3D;null)&#123;\n            msg.setStatus(-1);\n            msg.setResult(&quot;不存在该学生&quot;);\n        &#125;\n        else &#123;\n            msg.setStatus(0);\n            msg.setData(byStudentId);\n        &#125;\n\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;student&#x2F;update.do&quot;)\n    public String update(HttpServletRequest request, HttpServletResponse response)&#123;\n        int studentid &#x3D; Integer.parseInt(request.getParameter(&quot;studentid&quot;));\n        String name &#x3D; request.getParameter(&quot;name&quot;);\n        String gender &#x3D; request.getParameter(&quot;gender&quot;);\n        String birthday &#x3D; request.getParameter(&quot;birthday&quot;);\n        String math &#x3D; request.getParameter(&quot;math&quot;);\n        String java &#x3D; request.getParameter(&quot;java&quot;);\n        String pe &#x3D; request.getParameter(&quot;pe&quot;);\n        Students newStudent &#x3D; new Students(studentid,name,Integer.parseInt(gender),birthday,Integer.parseInt(math),Integer.parseInt(java),Integer.parseInt(pe));\n\n        boolean flag &#x3D; false;\n        Message msg &#x3D; new Message();\n\n        try &#123;\n            flag &#x3D; StudentService.update(studentid,newStudent);\n        &#125; catch (DuplicateException e) &#123;\n            e.printStackTrace();\n        &#125;\n\n        if(!flag)&#123;\n            msg.setStatus(-1);\n            msg.setResult(&quot;更新失败&quot;);\n        &#125;\n        else &#123;\n            msg.setStatus(0);\n            msg.setResult(&quot;更新成功&quot;);\n        &#125;\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n    @ResponseBody(&quot;&#x2F;student&#x2F;delete.do&quot;)\n    public String delete(HttpServletRequest request, HttpServletResponse response)&#123;\n        System.out.println(request.getParameter(&quot;id&quot;));\n        int studentid &#x3D; Integer.parseInt(request.getParameter(&quot;id&quot;));\n        boolean flag &#x3D; false;\n        Message msg &#x3D; new Message();\n\n\n        flag &#x3D; StudentService.delete(studentid);\n\n\n        if(!flag)&#123;\n            msg.setStatus(-1);\n            msg.setResult(&quot;删除失败&quot;);\n        &#125;\n        else &#123;\n            msg.setStatus(0);\n            msg.setResult(&quot;删除成功&quot;);\n        &#125;\n        String s &#x3D; JsonUtil.toJson(msg);\n        return s;\n    &#125;\n\n&#125;</code></pre>\n\n<h3 id=\"html文件\"><a href=\"#html文件\" class=\"headerlink\" title=\"html文件\"></a>html文件</h3><p>css js文件不讲解，因为是套用的。html只讲解请求部分,重复的也不再重复讲了</p>\n<h4 id=\"login-html\"><a href=\"#login-html\" class=\"headerlink\" title=\"login.html\"></a>login.html</h4><p>登陆界面</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, maximum-scale&#x3D;1&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;assets&#x2F;css&#x2F;layui.css&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;assets&#x2F;css&#x2F;login.css&quot;&gt;\n\n    &lt;link rel&#x3D;&quot;icon&quot; href&#x3D;&quot;&#x2F;favicon.ico&quot;&gt;\n    &lt;title&gt;学生信息管理后台&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body class&#x3D;&quot;login-wrap&quot;&gt;\n    &lt;div class&#x3D;&quot;login-container&quot;&gt;\n    \t&lt;h3&gt;学生信息后台管理&lt;&#x2F;h3&gt;\n        &lt;form class&#x3D;&quot;login-form&quot; action&#x3D;&quot;index.html&quot;&gt;\n            &lt;div class&#x3D;&quot;input-group&quot;&gt;\n                &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;username&quot; class&#x3D;&quot;input-field&quot;&gt;\n                &lt;label for&#x3D;&quot;username&quot; class&#x3D;&quot;input-label&quot;&gt;\n                    &lt;span class&#x3D;&quot;label-title&quot;&gt;用户名&lt;&#x2F;span&gt;\n                &lt;&#x2F;label&gt;\n            &lt;&#x2F;div&gt;\n            &lt;div class&#x3D;&quot;input-group&quot;&gt;\n                &lt;input type&#x3D;&quot;password&quot; id&#x3D;&quot;password&quot; class&#x3D;&quot;input-field&quot;&gt;\n                &lt;label for&#x3D;&quot;password&quot; class&#x3D;&quot;input-label&quot;&gt;\n                    &lt;span class&#x3D;&quot;label-title&quot;&gt;密码&lt;&#x2F;span&gt;\n                &lt;&#x2F;label&gt;\n            &lt;&#x2F;div&gt;\n            &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;login-button&quot;&gt;登录&lt;i class&#x3D;&quot;ai ai-enter&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;button&gt;\n        &lt;&#x2F;form&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;\n\n&lt;script src&#x3D;&quot;assets&#x2F;layui.js&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;script src&#x3D;&quot;&#x2F;admin&#x2F;js&#x2F;index.js&quot; data-main&#x3D;&quot;login&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;&#x2F;admin&#x2F;js&#x2F;login.js&quot; data-main&#x3D;&quot;login&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;..&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;..&#x2F;layer&#x2F;layer.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script&gt;\n    $(function () &#123;\n        $(&quot;.login-button&quot;).click(function()&#123;\n            var username &#x3D; $(&quot;#username&quot;).val();\n            var password&#x3D;$(&quot;#password&quot;).val();\n            &#x2F;&#x2F;1 先转圈\n            var windowId&#x3D;layer.load(0);\n\n            &#x2F;&#x2F;2 ajax与服务器交互\n            $.post(&quot;&#x2F;admin&#x2F;login.do&quot;,&#123;username:username,password:password&#125;,function (data) &#123;\n\n                &#x2F;&#x2F;3 关闭load窗口\n                layer.close(windowId);\n\n                &#x2F;&#x2F;4 讲服务器返回结果进行显示\n                layer.msg(data.result);\n                if(data.status&#x3D;&#x3D;0)&#123;\n                    &#x2F;&#x2F;跳转到主页\n                    location.assign(&quot;index.html&quot;);\n                &#125;\n\n            &#125;,&quot;JSON&quot;);\n\n\n        &#125;);\n    &#125;);\n&lt;&#x2F;script&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>前端上将绑定了username和password的地方填写值传入了这两个参数，然后登录接收了这个值，点击了登录进入了点击事件。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">发出url请求 请求的值调用了username和password 然后执行方法\n $.post(&quot;&#x2F;admin&#x2F;login.do&quot;,&#123;username:username,password:password&#125;,function (data) &#123;\n\n                &#x2F;&#x2F;3 关闭load窗口\n                layer.close(windowId);\n\n                &#x2F;&#x2F;4 将服务器返回结果进行显示\n                layer.msg(data.result);\n                if(data.status&#x3D;&#x3D;0)&#123;\n                    &#x2F;&#x2F;跳转到主页\n                    location.assign(&quot;index.html&quot;);\n                &#125;\n\n            &#125;,&quot;JSON&quot;);</code></pre>\n\n\n<h4 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h4><p>主界面</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, maximum-scale&#x3D;1&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;assets&#x2F;css&#x2F;layui.css&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;assets&#x2F;css&#x2F;admin.css&quot;&gt;\n    &lt;link rel&#x3D;&quot;icon&quot; href&#x3D;&quot;&#x2F;favicon.ico&quot;&gt;\n    &lt;title&gt;学生信息管理后台&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body class&#x3D;&quot;layui-layout-body&quot;&gt;\n    &lt;div class&#x3D;&quot;layui-layout layui-layout-admin&quot;&gt;\n        &lt;div class&#x3D;&quot;layui-header custom-header&quot;&gt;\n            \n            &lt;ul class&#x3D;&quot;layui-nav layui-layout-left&quot;&gt;\n                &lt;li class&#x3D;&quot;layui-nav-item slide-sidebar&quot; lay-unselect&gt;\n                    &lt;a href&#x3D;&quot;javascript:;&quot; class&#x3D;&quot;icon-font&quot;&gt;&lt;i class&#x3D;&quot;ai ai-menufold&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;\n                &lt;&#x2F;li&gt;\n            &lt;&#x2F;ul&gt;\n\n            &lt;ul class&#x3D;&quot;layui-nav layui-layout-right&quot;&gt;\n                &lt;li class&#x3D;&quot;layui-nav-item&quot;&gt;\n                    &lt;a href&#x3D;&quot;javascript:;&quot;&gt;Soul_15a&lt;&#x2F;a&gt;\n                    &lt;dl class&#x3D;&quot;layui-nav-child&quot;&gt;\n                        &lt;dd&gt;&lt;a href&#x3D;&quot;login.html&quot;&gt;退出&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                    &lt;&#x2F;dl&gt;\n                &lt;&#x2F;li&gt;\n            &lt;&#x2F;ul&gt;\n        &lt;&#x2F;div&gt;\n\n        &lt;div class&#x3D;&quot;layui-side custom-admin&quot;&gt;\n            &lt;div class&#x3D;&quot;layui-side-scroll&quot;&gt;\n\n                &lt;div class&#x3D;&quot;custom-logo&quot;&gt;\n\n                    &lt;h1&gt;学生信息管理系统&lt;&#x2F;h1&gt;\n                &lt;&#x2F;div&gt;\n                &lt;ul id&#x3D;&quot;Nav&quot; class&#x3D;&quot;layui-nav layui-nav-tree&quot;&gt;\n                    &lt;li class&#x3D;&quot;layui-nav-item&quot;&gt;\n                        &lt;a href&#x3D;&quot;javascript:;&quot;&gt;\n                            &lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe68e;&lt;&#x2F;i&gt;\n                            &lt;em&gt;主页&lt;&#x2F;em&gt;\n                        &lt;&#x2F;a&gt;\n                        &lt;!--下面是访问各个界面的网页--&gt;\n                        &lt;dl class&#x3D;&quot;layui-nav-child&quot;&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;console.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe665;&lt;&#x2F;i&gt; 控制台&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                        &lt;&#x2F;dl&gt;\n                    &lt;&#x2F;li&gt;\n                    &lt;li class&#x3D;&quot;layui-nav-item&quot;&gt;\n                        &lt;a href&#x3D;&quot;javascript:;&quot;&gt;\n                            &lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe664;&lt;&#x2F;i&gt;\n                            &lt;em&gt;其他功能&lt;&#x2F;em&gt;\n                        &lt;&#x2F;a&gt;\n                        &lt;dl class&#x3D;&quot;layui-nav-child&quot;&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;other&#x2F;list.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe60a;&lt;&#x2F;i&gt; 学生姓名查询&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;other&#x2F;add10w.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe654;&lt;&#x2F;i&gt; 生成十万数据&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;other&#x2F;excel.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe654;&lt;&#x2F;i&gt; 生成Excel&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                        &lt;&#x2F;dl&gt;\n                    &lt;&#x2F;li&gt;\n                    &lt;li class&#x3D;&quot;layui-nav-item&quot;&gt;\n                        &lt;a href&#x3D;&quot;javascript:;&quot;&gt;\n                            &lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe857;&lt;&#x2F;i&gt;\n                            &lt;em&gt;学生管理&lt;&#x2F;em&gt;\n                        &lt;&#x2F;a&gt;\n                        &lt;dl class&#x3D;&quot;layui-nav-child&quot;&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;student&#x2F;list.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe60a;&lt;&#x2F;i&gt; 学生列表&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;student&#x2F;add.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe654;&lt;&#x2F;i&gt; 学生录入&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;student&#x2F;update.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe642;&lt;&#x2F;i&gt; 学生修改&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;student&#x2F;delete.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe640;&lt;&#x2F;i&gt; 学生删除&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                            &lt;dd&gt;&lt;a href&#x3D;&quot;views&#x2F;student&#x2F;course.html&quot;&gt;&lt;i class&#x3D;&quot;layui-icon&quot;&gt;&amp;#xe642;&lt;&#x2F;i&gt; 添加学生成绩&lt;&#x2F;a&gt;&lt;&#x2F;dd&gt;\n                        &lt;&#x2F;dl&gt;\n                    &lt;&#x2F;li&gt;\n\n                &lt;&#x2F;ul&gt;\n\n            &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n\n        &lt;div class&#x3D;&quot;layui-body&quot;&gt;\n             &lt;div class&#x3D;&quot;layui-tab app-container&quot; lay-allowClose&#x3D;&quot;true&quot; lay-filter&#x3D;&quot;tabs&quot;&gt;\n                &lt;ul id&#x3D;&quot;appTabs&quot; class&#x3D;&quot;layui-tab-title custom-tab&quot;&gt;&lt;&#x2F;ul&gt;\n                &lt;div id&#x3D;&quot;appTabPage&quot; class&#x3D;&quot;layui-tab-content&quot;&gt;&lt;&#x2F;div&gt;\n            &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n\n        &lt;div class&#x3D;&quot;layui-footer&quot;&gt;\n            &lt;p&gt;©2022 &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;soul15a.github.io&#x2F;&quot; target&#x3D;&quot;_blank&quot;&gt;By Soul_15a&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;\n        &lt;&#x2F;div&gt;\n\n        &lt;div class&#x3D;&quot;mobile-mask&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;script src&#x3D;&quot;assets&#x2F;layui.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script src&#x3D;&quot;js&#x2F;index.js&quot; data-main&#x3D;&quot;home&quot;&gt;&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-student-x2F-add-html\"><a href=\"#x2F-student-x2F-add-html\" class=\"headerlink\" title=\"&#x2F;student&#x2F;add.html\"></a>&#x2F;student&#x2F;add.html</h4><p>添加学生信息</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;css&#x2F;layui.css&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;css&#x2F;view.css&quot;&#x2F;&gt;\n    &lt;title&gt;&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body class&#x3D;&quot;layui-view-body&quot;&gt;\n    &lt;div class&#x3D;&quot;layui-content&quot;&gt;\n        &lt;div class&#x3D;&quot;layui-row&quot;&gt;\n            &lt;div class&#x3D;&quot;layui-card&quot;&gt;\n                &lt;div class&#x3D;&quot;layui-card-header&quot;&gt;学生录入&lt;&#x2F;div&gt;\n                &lt;form id&#x3D;&quot;form&quot; class&#x3D;&quot;layui-form layui-card-body&quot; &gt;\n                    &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n                        &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;姓名&lt;&#x2F;label&gt;\n                        &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n                            &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入姓名&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n                        &lt;&#x2F;div&gt;\n                    &lt;&#x2F;div&gt;\n                    &lt;!--两个选项进行选择--&gt;\n                  &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n                    &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;性别&lt;&#x2F;label&gt;\n                    &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n                      &lt;select name&#x3D;&quot;gender&quot; lay-verify&#x3D;&quot;&quot; lay-search&gt;\n\t\t\t\t\t\t&lt;option &gt;男&lt;&#x2F;option&gt;&lt;option &gt;女&lt;&#x2F;option&gt;\n\t\t\t\t\t&lt;&#x2F;select&gt;\n                    &lt;&#x2F;div&gt;\n                  &lt;&#x2F;div&gt;\n                    &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n                        &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;出生日期&lt;&#x2F;label&gt;\n                        &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n                            &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;birthday&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入出生日期&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n                        &lt;&#x2F;div&gt;\n                    &lt;&#x2F;div&gt;\n                    &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n                        &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;数学成绩&lt;&#x2F;label&gt;\n                        &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n                            &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;math&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入数学成绩&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n                        &lt;&#x2F;div&gt;\n                    &lt;&#x2F;div&gt;\n                    &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n                        &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;Java成绩&lt;&#x2F;label&gt;\n                        &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n                            &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;java&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入Java成绩&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n                        &lt;&#x2F;div&gt;\n                    &lt;&#x2F;div&gt;\n                  &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n                    &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;体育成绩&lt;&#x2F;label&gt;\n                    &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n                      &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;pe&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入体育成绩&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n                    &lt;&#x2F;div&gt;\n                  &lt;&#x2F;div&gt;\n                  &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n                    &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n                      &lt;button class&#x3D;&quot;layui-btn layui-btn-blue&quot; lay-submit lay-filter&#x3D;&quot;formDemo&quot;&gt;立即提交&lt;&#x2F;button&gt;\n                      &lt;button type&#x3D;&quot;reset&quot; class&#x3D;&quot;layui-btn layui-btn-primary&quot;&gt;重置&lt;&#x2F;button&gt;\n                    &lt;&#x2F;div&gt;\n                  &lt;&#x2F;div&gt;\n                &lt;&#x2F;form&gt;  \n            &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;script src&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;layui.all.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script src&#x3D;&quot;&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script src&#x3D;&quot;&#x2F;layer&#x2F;layer.js&quot;&gt;&lt;&#x2F;script&gt;\n        &lt;script&gt;\n            $(function () &#123;\n                &lt;!--搜集用户的表单--&gt;\n                $(&quot;#form&quot;).submit(function () &#123;\n                    var windowId&#x3D;layer.load(1);\n\n\n\n                    var name&#x3D;$(&quot;input:eq(0)&quot;).val();\n                    var gender&#x3D;$(&quot;input:eq(1)&quot;).val();\n                    var birthday&#x3D;$(&quot;input:eq(2)&quot;).val();\n                    var math&#x3D;$(&quot;input:eq(3)&quot;).val();\n                    var java&#x3D;$(&quot;input:eq(4)&quot;).val();\n                    var pe&#x3D;$(&quot;input:eq(5)&quot;).val();\n\n\n\n                    $.post(&quot;&#x2F;student&#x2F;insert.do&quot;,&#123;\n                        name:name,\n                        gender:gender,\n                        birthday:birthday,\n                        math:math,\n                        java:java,\n                        pe:pe\n\n                    &#125;,function (data) &#123;\n\n                        if(data.status&#x3D;&#x3D;0)&#123;\n\n                            layer.close(windowId);\n                            layer.msg(&quot;录入成功&quot;);\n\n                            $(&quot;input:eq(0)&quot;).val(&quot;&quot;);\n                            $(&quot;input:eq(1)&quot;).val(&quot;男&quot;);\n                            $(&quot;input:eq(2)&quot;).val(&quot;&quot;);\n                            $(&quot;input:eq(3)&quot;).val(&quot;&quot;);\n                            $(&quot;input:eq(4)&quot;).val(&quot;&quot;);\n                            $(&quot;input:eq(5)&quot;).val(&quot;&quot;);\n\n                        &#125;else if(data.status!&#x3D;0)&#123;\n                            layer.msg(data.result);\n                        &#125;\n\n                    &#125;,&quot;json&quot;)\n\n                &#125;);\n            &#125;)\n        &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-student-x2F-course-html\"><a href=\"#x2F-student-x2F-course-html\" class=\"headerlink\" title=\"&#x2F;student&#x2F;course.html\"></a>&#x2F;student&#x2F;course.html</h4><p>修改学生成绩</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;css&#x2F;layui.css&quot;&gt;\n  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;css&#x2F;view.css&quot;&#x2F;&gt;\n  &lt;title&gt;&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body class&#x3D;&quot;layui-view-body&quot;&gt;\n&lt;div class&#x3D;&quot;layui-content&quot;&gt;\n  &lt;div class&#x3D;&quot;layui-row&quot;&gt;\n    &lt;div class&#x3D;&quot;layui-card&quot;&gt;\n      &lt;div class&#x3D;&quot;layui-card-header&quot;&gt;修改学生成绩&lt;&#x2F;div&gt;\n      &lt;form id&#x3D;&quot;form&quot; class&#x3D;&quot;layui-form layui-card-body&quot; &gt;\n        &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n          &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;数学成绩&lt;&#x2F;label&gt;\n          &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n            &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;math&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入数学成绩&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n          &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n          &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;Java成绩&lt;&#x2F;label&gt;\n          &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n            &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;java&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入Java成绩&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n          &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n          &lt;label class&#x3D;&quot;layui-form-label&quot;&gt;体育成绩&lt;&#x2F;label&gt;\n          &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n            &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;pe&quot; required  lay-verify&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入体育成绩&quot; autocomplete&#x3D;&quot;off&quot; class&#x3D;&quot;layui-input&quot;&gt;\n          &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;layui-form-item&quot;&gt;\n          &lt;div class&#x3D;&quot;layui-input-block&quot;&gt;\n            &lt;button class&#x3D;&quot;layui-btn layui-btn-blue&quot; lay-submit lay-filter&#x3D;&quot;formDemo&quot;&gt;立即修改&lt;&#x2F;button&gt;\n            &lt;button type&#x3D;&quot;reset&quot; class&#x3D;&quot;layui-btn layui-btn-primary&quot;&gt;重置&lt;&#x2F;button&gt;\n          &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n      &lt;&#x2F;form&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;\n&lt;script src&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;layui.all.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;&#x2F;layer&#x2F;layer.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script&gt;\n  $(function () &#123;\n    $(&quot;#form&quot;).submit(function () &#123;\n      var windowId&#x3D;layer.load(1);\n\n\n\n      var math&#x3D;$(&quot;input:eq(0)&quot;).val();\n      var java&#x3D;$(&quot;input:eq(1)&quot;).val();\n      var pe&#x3D;$(&quot;input:eq(2)&quot;).val();\n\n\n\n\n      $.post(&quot;&#x2F;student&#x2F;course.do&quot;,&#123;\n        math:math,\n        java:java,\n        pe:pe\n\n      &#125;,function (data) &#123;\n\n        if(data.status&#x3D;&#x3D;0)&#123;\n\n          layer.close(windowId);\n          layer.msg(&quot;修改成功&quot;);\n\n          $(&quot;input:eq(0)&quot;).val(&quot;&quot;);\n          $(&quot;input:eq(1)&quot;).val(&quot;&quot;);\n          $(&quot;input:eq(2)&quot;).val(&quot;&quot;);\n\n\n        &#125;else if(data.status!&#x3D;0)&#123;\n          layer.msg(data.result);\n        &#125;\n\n      &#125;,&quot;json&quot;)\n\n    &#125;);\n  &#125;)\n&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-student-x2F-delete-html\"><a href=\"#x2F-student-x2F-delete-html\" class=\"headerlink\" title=\"&#x2F;student&#x2F;delete.html\"></a>&#x2F;student&#x2F;delete.html</h4><p>删除学生信息</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\t&lt;head&gt;\n\t\t&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n\t\t&lt;title&gt;&lt;&#x2F;title&gt;\n\t\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;reset.css&quot;&#x2F;&gt;\n\t\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;add.css&quot;&#x2F;&gt;\n\t&lt;&#x2F;head&gt;\n\t&lt;body&gt;\n\t\t&lt;div id&#x3D;&quot;app&quot;&gt;\n\t\t\t&lt;div class&#x3D;&quot;header&quot;&gt;\n\t\t\t\t&lt;span&gt;删除学生信息&lt;&#x2F;span&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;content&quot;&gt;\n\t\t\t\t&lt;table&gt;\t\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;学号&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input id&#x3D;&quot;studentid&quot; class&#x3D;&quot;input inline-input&quot; placeholder&#x3D;&quot;请输入学号&quot;&gt; &lt;span id&#x3D;&quot;find&quot; class&#x3D;&quot;btn btn-info&quot;&gt;立即查找&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t&lt;&#x2F;table&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t\n\t\t\t\n\t\t\t&lt;div class&#x3D;&quot;header&quot;&gt;\n\t\t\t\t&lt;span&gt;查找信息如下&lt;&#x2F;span&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;content&quot;&gt;\n\t\t\t\t&lt;table&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;学号&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;姓名&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;性别&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;出生日期&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;数学成绩&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;Java成绩&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;体育成绩&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td&gt;&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;span class&#x3D;&quot;btn btn-info&quot; id&#x3D;&quot;delete&quot;&gt;立即删除&lt;&#x2F;span&gt; &lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t&lt;&#x2F;table&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;body&gt;\n\t&lt;script src&#x3D;&quot;&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n\t&lt;script src&#x3D;&quot;&#x2F;layer&#x2F;layer.js&quot;&gt;&lt;&#x2F;script&gt;\n\t&lt;script&gt;\n\t\t$(&quot;.header:eq(1),.content:eq(1)&quot;).hide();\n\t\tvar studentId &#x3D; null;\n\t\t$(function()&#123;\n\t\t\t$(&quot;#find&quot;).click(function()&#123;\n\t\t\t\tvar windowId &#x3D; layer.load();\n\t\t\t\tvar studentid &#x3D; $(&quot;#studentid&quot;).val();\n\t\t\t\t$.getJSON(&quot;&#x2F;student&#x2F;find.do&quot;,&#123;studentid:studentid&#125;,function(data)&#123;\n\t\t\t\t\tlayer.close(windowId);\n\t\t\t\t\tlayer.msg(data.result);\n\t\t\t\t\tif(data.status &#x3D;&#x3D; 0)&#123;\n\t\t\t\t\t\t$(&quot;.header:eq(1),.content:eq(1)&quot;).fadeIn(1000);\n\t\t\t\t\t\tstudentId &#x3D; data.data.studentid;\n\t\t\t\t\t\t$(&quot;input:eq(1)&quot;).val(data.data.studentid);\n\t\t\t\t\t\t$(&quot;input:eq(2)&quot;).val(data.data.name);\n\t\t\t\t\t\t$(&quot;input:eq(3)&quot;).val(data.data.gender);\n\t\t\t\t\t\t$(&quot;input:eq(4)&quot;).val(data.data.birthday);\n\t\t\t\t\t\t$(&quot;input:eq(5)&quot;).val(data.data.math);\n\t\t\t\t\t\t$(&quot;input:eq(6)&quot;).val(data.data.java);\n\t\t\t\t\t\t$(&quot;input:eq(7)&quot;).val(data.data.pe);\n\t\t\t\t\t&#125;\n\t\t\t\t&#125;)\n\t\t\t&#125;);\n\t\t\t$(&quot;#delete&quot;).click(function () &#123;\n\t\t\t\tvar windowId&#x3D;layer.load(0);\n\t\t\t\t$.getJSON(&quot;&#x2F;student&#x2F;delete.do&quot;,&#123;id:studentId&#125;,function (data) &#123;\n\t\t\t\t\tlayer.close(windowId);\n\t\t\t\t\tlayer.msg(data.result);\n\t\t\t\t\t$(&quot;.header:eq(1),.content:eq(1)&quot;).hide();\n\n\t\t\t\t&#125;);\n\t\t\t&#125;);\n\t\t&#125;);\n\t&lt;&#x2F;script&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-student-x2F-list-html\"><a href=\"#x2F-student-x2F-list-html\" class=\"headerlink\" title=\"&#x2F;student&#x2F;list.html\"></a>&#x2F;student&#x2F;list.html</h4><p>将学生列表通过BootStrap分页展现出来</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\t&lt;head&gt;\n\t\t&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n\t\t&lt;title&gt;&lt;&#x2F;title&gt;\n\t\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;reset.css&quot;&#x2F;&gt;\n\t\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;list.css&quot;&#x2F;&gt;\n\t\t&lt;link href&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;bootstrap-table&#x2F;1.17.1&#x2F;bootstrap-table.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;\n\t\t&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@3.3.7&#x2F;dist&#x2F;css&#x2F;bootstrap.min.css&quot; integrity&#x3D;&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz&#x2F;K68vbdEjh4u&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;\n\t\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.5.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\t\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@3.3.7&#x2F;dist&#x2F;js&#x2F;bootstrap.min.js&quot; integrity&#x3D;&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;&lt;&#x2F;script&gt;\n\t\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;bootstrap-table&#x2F;1.17.1&#x2F;bootstrap-table.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\t\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;bootstrap-table&#x2F;1.17.1&#x2F;locale&#x2F;bootstrap-table-zh-CN.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\t&lt;&#x2F;head&gt;\n\t&lt;body&gt;\n\t\t&lt;table id&#x3D;&quot;student_list&quot;&gt;&lt;&#x2F;table&gt;\n\t\t&lt;script&gt;\n\t\t\t$(function () &#123;\n\t\t\t\t$(&quot;#student_list&quot;).bootstrapTable(&#123;\n\t\t\t\t\turl:&quot;&#x2F;student&#x2F;list.do&quot;, &#x2F;&#x2F;数据地址\n\t\t\t\t\tstriped:true,  &#x2F;&#x2F;是否显示行间隔\n\t\t\t\t\tpageNumber:1,&#x2F;&#x2F;初始化加载第几页\n\t\t\t\t\tpagination:true,&#x2F;&#x2F;是否分页\n\t\t\t\t\tsidePagination:&#39;server&#39;,\n\t\t\t\t\tpageSize:8,\n\t\t\t\t\tpageList:[5,10,20],\n\t\t\t\t\tshowRefresh:true,\n\n\t\t\t\t\tqueryParams:function (params) &#123;\n\t\t\t\t\t\tvar temp&#x3D;&#123;\n\t\t\t\t\t\t\toffset:params.offset,\n\t\t\t\t\t\t\tpageNumber:params.limit\n\t\t\t\t\t\t&#125;;\n\t\t\t\t\t\treturn temp;\n\n\t\t\t\t\t&#125;,\n\t\t\t\t\tcolumns:[\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;学号&quot;,\n\t\t\t\t\t\t\tfield:&quot;studentid&quot;,\n\t\t\t\t\t\t\tsortable:false,\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;姓名&quot;,\n\t\t\t\t\t\t\tfield:&quot;name&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;性别&quot;,\n\t\t\t\t\t\t\tfield:&quot;gender&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;出生日期&quot;,\n\t\t\t\t\t\t\tfield:&quot;birthday&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;数学成绩&quot;,\n\t\t\t\t\t\t\tfield:&quot;math&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;Java成绩&quot;,\n\t\t\t\t\t\t\tfield:&quot;java&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;体育成绩&quot;,\n\t\t\t\t\t\t\tfield:&quot;pe&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t]\n\t\t\t\t&#125;);\n\t\t\t&#125;);\n\n\t\t&lt;&#x2F;script&gt;\n\n\t&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-student-x2F-update-html\"><a href=\"#x2F-student-x2F-update-html\" class=\"headerlink\" title=\"&#x2F;student&#x2F;update.html\"></a>&#x2F;student&#x2F;update.html</h4><p>修改学生信息</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\t&lt;head&gt;\n\t\t&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n\t\t&lt;title&gt;&lt;&#x2F;title&gt;\n\t\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;reset.css&quot;&#x2F;&gt;\n\t\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;add.css&quot;&#x2F;&gt;\n\t&lt;&#x2F;head&gt;\n\t&lt;body&gt;\n\t\t&lt;div id&#x3D;&quot;app&quot;&gt;\n\t\t\t&lt;div class&#x3D;&quot;header&quot;&gt;\n\t\t\t\t&lt;span&gt;修改学生信息&lt;&#x2F;span&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;content&quot;&gt;\n\t\t\t\t&lt;table&gt;\t\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;学号&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input inline-input&quot; placeholder&#x3D;&quot;请输入学号&quot; id&#x3D;&quot;studentid&quot;&gt; &lt;span class&#x3D;&quot;btn btn-info&quot; id&#x3D;&quot;find&quot;&gt;立即查找&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t&lt;&#x2F;table&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t\n\t\t\t\n\t\t\t&lt;div class&#x3D;&quot;header&quot;&gt;\n\t\t\t\t&lt;span&gt;查找信息如下&lt;&#x2F;span&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t\t&lt;div class&#x3D;&quot;content&quot;&gt;\n\t\t\t\t&lt;table&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;姓名&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;请输入姓名&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;性别&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input type&#x3D;&quot;radio&quot; class&#x3D;&quot;status&quot; name&#x3D;&quot;gender&quot; value&#x3D;&quot;1&quot;&gt;男  &lt;input class&#x3D;&quot;status&quot;  name&#x3D;&quot;gender&quot; type&#x3D;&quot;radio&quot; value&#x3D;&quot;2&quot;&gt;女&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;出生日期&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;数学成绩&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;Java成绩&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;体育成绩&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input class&#x3D;&quot;input&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t&lt;td&gt;&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;span class&#x3D;&quot;btn btn-info&quot; id&#x3D;&quot;update&quot;&gt;立即修改&lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;btn&quot;&gt;重置&lt;&#x2F;span&gt; &lt;&#x2F;td&gt;\n\t\t\t\t\t&lt;&#x2F;tr&gt;\n\t\t\t\t&lt;&#x2F;table&gt;\n\t\t\t&lt;&#x2F;div&gt;\n\t\t&lt;&#x2F;div&gt;\n\t&lt;&#x2F;body&gt;\n\n\t&lt;script src&#x3D;&quot;&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n\t&lt;script src&#x3D;&quot;&#x2F;layer&#x2F;layer.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script&gt;\n\t$(&quot;.header:eq(1),.content:eq(1)&quot;).hide();\n\tvar studentId&#x3D;null;\n\t$(function () &#123;\n\t\t\t$(&quot;#find&quot;).click(function () &#123;\n\t\t\t\tvar windowId&#x3D;layer.load(0);\n\t\t\t\tvar studentid&#x3D;$(&quot;#studentid&quot;).val();\n\t\t\t\t$.getJSON(&quot;&#x2F;student&#x2F;find.do&quot;,&#123;studentid:studentid&#125;,function (data) &#123;\n\n\t\t\t\t\tlayer.close(windowId);\n\t\t\t\t\tif(data.status&#x3D;&#x3D;0)&#123;\n\t\t\t\t\t$(&quot;.header:eq(1),.content:eq(1)&quot;).fadeIn(1000);\n\t\t\t\t\tstudentId&#x3D;data.data.studentid;\n\t\t\t\t\t$(&quot;input:eq(1)&quot;).val(data.data.name);\n\t\t\t\t\tif(data.data.gender&#x3D;&#x3D;1)&#123;\n\t\t\t\t\t\t$(&quot;.status:eq(2)&quot;).prop(&quot;checked&quot;,true);\n\t\t\t\t\t&#125;else&#123;\n\t\t\t\t\t\t$(&quot;.status:eq(3)&quot;).prop(&quot;checked&quot;,true);\n\t\t\t\t\t&#125;\n\t\t\t\t\t$(&quot;input:eq(4)&quot;).val(data.data.birthday);\n\t\t\t\t\t$(&quot;input:eq(5)&quot;).val(data.data.math);\n\t\t\t\t\t$(&quot;input:eq(6)&quot;).val(data.data.java);\n\t\t\t\t\t$(&quot;input:eq(7)&quot;).val(data.data.pe);\n\t\t\t\t\t&#125;\n\t\t\t\t\tlayer.msg(data.result);\n\n\t\t\t\t&#125;);\n\t\t\t\t$(&quot;#update&quot;).click(function () &#123;\n\t\t\t\t\tvar flag&#x3D;true;\n\t\t\t\t\tvar windowId&#x3D;layer.load(0);\n\t\t\t\t\tvar name&#x3D;$(&quot;input:eq(1)&quot;).val();\n\t\t\t\t\tvar gender&#x3D;$(&quot;.status:checked&quot;).val();\n\t\t\t\t\tvar birthday&#x3D;$(&quot;input:eq(4)&quot;).val();\n\t\t\t\t\tvar math&#x3D;$(&quot;input:eq(5)&quot;).val();\n\t\t\t\t\tvar java&#x3D;$(&quot;input:eq(6)&quot;).val();\n\t\t\t\t\tvar pe&#x3D;$(&quot;input:eq(7)&quot;).val();\n\n\n\n\t\t\t\t\tvar student&#x3D;&#123;\n\t\t\t\t\t\tstudentid:studentid,\n\t\t\t\t\t\tname:name,\n\t\t\t\t\t\tgender:gender,\n\t\t\t\t\t\tbirthday:birthday,\n\t\t\t\t\t\tmath:math,\n\t\t\t\t\t\tjava:java,\n\t\t\t\t\t\tpe:pe,\n\t\t\t\t\t&#125;;\n\n\t\t\t\t\t$.getJSON(&quot;&#x2F;student&#x2F;update.do&quot;,student,function (data) &#123;\n\t\t\t\t\t\tlayer.close(windowId);\n\t\t\t\t\t\tlayer.msg(data.result);\n\t\t\t\t\t\tif(data.status&#x3D;&#x3D;0)&#123;\n\t\t\t\t\t\t\t$(&quot;.header:eq(1),.content:eq(1)&quot;).hide();\n\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t&#125;)\n\n\t\t\t\t&#125;);\n\t\t\t&#125;);\n\t&#125;)\n&lt;&#x2F;script&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-other-x2F-add10w-html\"><a href=\"#x2F-other-x2F-add10w-html\" class=\"headerlink\" title=\"&#x2F;other&#x2F;add10w.html\"></a>&#x2F;other&#x2F;add10w.html</h4><p>随机生成十万数据</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n  &lt;title&gt;&lt;&#x2F;title&gt;\n  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;reset.css&quot;&#x2F;&gt;\n  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;add.css&quot;&#x2F;&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;div id&#x3D;&quot;app&quot;&gt;\n  &lt;div class&#x3D;&quot;header&quot;&gt;\n    &lt;span&gt;自动生成10w数据&lt;&#x2F;span&gt;\n  &lt;&#x2F;div&gt;\n  &lt;div class&#x3D;&quot;content&quot;&gt;\n    &lt;table&gt;\n      &lt;tr&gt;\n        &lt;td&gt;&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;span class&#x3D;&quot;btn btn-info&quot; id&#x3D;&quot;ok&quot;&gt;立即生成&lt;&#x2F;span&gt; &lt;&#x2F;td&gt;\n      &lt;&#x2F;tr&gt;\n    &lt;&#x2F;table&gt;\n\n\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;\n&lt;script src&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;layui.all.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;&#x2F;layer&#x2F;layer.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script&gt;\n  $(function () &#123;\n    $(&quot;#ok&quot;).click(function () &#123;\n      var windowId&#x3D;layer.load(0);\n\n        $.post(&quot;&#x2F;other&#x2F;add10w.do&quot;,null,function () &#123;\n          layer.close(windowId);\n          layer.msg(data.result);\n        &#125;)\n\n    &#125;);\n  &#125;)\n&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-other-x2F-excel-html\"><a href=\"#x2F-other-x2F-excel-html\" class=\"headerlink\" title=\"&#x2F;other&#x2F;excel.html\"></a>&#x2F;other&#x2F;excel.html</h4><p>生成Excel表格</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n  &lt;title&gt;&lt;&#x2F;title&gt;\n  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;reset.css&quot;&#x2F;&gt;\n  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;add.css&quot;&#x2F;&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;div id&#x3D;&quot;app&quot;&gt;\n  &lt;div class&#x3D;&quot;header&quot;&gt;\n    &lt;span&gt;生成excel&lt;&#x2F;span&gt;\n  &lt;&#x2F;div&gt;\n  &lt;div class&#x3D;&quot;content&quot;&gt;\n    &lt;table&gt;\n      &lt;tr&gt;\n        &lt;td&gt;&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;span class&#x3D;&quot;btn btn-info&quot; id&#x3D;&quot;ok&quot;&gt;立即生成&lt;&#x2F;span&gt; &lt;&#x2F;td&gt;\n      &lt;&#x2F;tr&gt;\n    &lt;&#x2F;table&gt;\n\n\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;\n&lt;script src&#x3D;&quot;..&#x2F;..&#x2F;assets&#x2F;layui.all.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;&#x2F;layer&#x2F;layer.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script&gt;\n  $(function () &#123;\n    $(&quot;#ok&quot;).click(function () &#123;\n      var windowId&#x3D;layer.load(0);\n\n        $.post(&quot;&#x2F;other&#x2F;excel.do&quot;,null,function () &#123;\n          layer.close(windowId);\n          layer.msg(data.result);\n        &#125;)\n\n    &#125;);\n  &#125;)\n&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"x2F-other-x2F-list-html\"><a href=\"#x2F-other-x2F-list-html\" class=\"headerlink\" title=\"&#x2F;other&#x2F;list.html\"></a>&#x2F;other&#x2F;list.html</h4><p>通过模糊查询学生姓名再用bootstrap生成列表</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n\t&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n\t&lt;title&gt;&lt;&#x2F;title&gt;\n\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;reset.css&quot;&#x2F;&gt;\n\t&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;..&#x2F;..&#x2F;css&#x2F;list.css&quot;&#x2F;&gt;\n\t&lt;link href&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;bootstrap-table&#x2F;1.17.1&#x2F;bootstrap-table.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;\n\t&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@3.3.7&#x2F;dist&#x2F;css&#x2F;bootstrap.min.css&quot; integrity&#x3D;&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz&#x2F;K68vbdEjh4u&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;\n\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.5.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@3.3.7&#x2F;dist&#x2F;js&#x2F;bootstrap.min.js&quot; integrity&#x3D;&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;&lt;&#x2F;script&gt;\n\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;bootstrap-table&#x2F;1.17.1&#x2F;bootstrap-table.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\t&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;bootstrap-table&#x2F;1.17.1&#x2F;locale&#x2F;bootstrap-table-zh-CN.min.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;div class&#x3D;&quot;header&quot;&gt;\n&lt;span&gt;根据姓名查询&lt;&#x2F;span&gt;\n&lt;&#x2F;div&gt;\n&lt;div class&#x3D;&quot;content&quot;&gt;\n\t&lt;table&gt;\n\t\t&lt;tr&gt;\n\t\t\t&lt;td class&#x3D;&quot;text-right&quot;&gt;姓名&lt;&#x2F;td&gt;&lt;td class&#x3D;&quot;content_right&quot;&gt;&lt;input id&#x3D;&quot;tname&quot; class&#x3D;&quot;input inline-input&quot; placeholder&#x3D;&quot;请输入姓名&quot;&gt; &lt;span id&#x3D;&quot;find&quot; class&#x3D;&quot;btn btn-info&quot;&gt;立即查找&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;\n\t\t&lt;&#x2F;tr&gt;\n\t&lt;&#x2F;table&gt;\n&lt;&#x2F;div&gt;\n&lt;table id&#x3D;&quot;other_list&quot;&gt;&lt;&#x2F;table&gt;\n&lt;script&gt;\n\t$(function()&#123;\n\t\t$(&quot;#find&quot;).click(function()&#123;\n\t\t\t$(function () &#123;\n\t\t\t\t$(&quot;#other_list&quot;).bootstrapTable(&#123;\n\t\t\t\t\turl:&quot;&#x2F;other&#x2F;list.do&quot;, &#x2F;&#x2F;数据地址\n\t\t\t\t\tstriped:true,  &#x2F;&#x2F;是否显示行间隔\n\t\t\t\t\tpageNumber:1,&#x2F;&#x2F;初始化加载第几页\n\t\t\t\t\tpagination:true,&#x2F;&#x2F;是否分页\n\t\t\t\t\tsidePagination:&#39;server&#39;,\n\t\t\t\t\tpageSize:8,\n\t\t\t\t\tpageList:[5,10,20],\n\t\t\t\t\tshowRefresh:true,\n\n\t\t\t\t\tqueryParams:function (params) &#123;\n\t\t\t\t\t\tvar temp&#x3D;&#123;\n\t\t\t\t\t\t\ttname: $(&quot;#tname&quot;).val(),\n\t\t\t\t\t\t\toffset:params.offset,\n\t\t\t\t\t\t\tpageNumber:params.limit\n\t\t\t\t\t\t&#125;;\n\t\t\t\t\t\treturn temp;\n\n\t\t\t\t\t&#125;,\n\t\t\t\t\tcolumns:[\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;学号&quot;,\n\t\t\t\t\t\t\tfield:&quot;studentid&quot;,\n\t\t\t\t\t\t\tsortable:false,\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;姓名&quot;,\n\t\t\t\t\t\t\tfield:&quot;name&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;性别&quot;,\n\t\t\t\t\t\t\tfield:&quot;gender&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;出生日期&quot;,\n\t\t\t\t\t\t\tfield:&quot;birthday&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;数学成绩&quot;,\n\t\t\t\t\t\t\tfield:&quot;math&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;Java成绩&quot;,\n\t\t\t\t\t\t\tfield:&quot;java&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\ttitle:&quot;体育成绩&quot;,\n\t\t\t\t\t\t\tfield:&quot;pe&quot;,\n\t\t\t\t\t\t\tsortable:false\n\t\t\t\t\t\t&#125;,\n\t\t\t\t\t]\n\n\t\t\t\t&#125;);\n\t\t\t&#125;);\n\t\t&#125;);\n\t&#125;);\n\n\n&lt;&#x2F;script&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h4 id=\"console-html\"><a href=\"#console-html\" class=\"headerlink\" title=\"console.html\"></a>console.html</h4><p>控制台主页</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;..&#x2F;assets&#x2F;css&#x2F;layui.css&quot;&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;..&#x2F;assets&#x2F;css&#x2F;view.css&quot;&#x2F;&gt;\n    &lt;script src&#x3D;&quot;..&#x2F;assets&#x2F;echarts.min.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script src&#x3D;&quot;..&#x2F;..&#x2F;qrcode&#x2F;jquery2.1.4.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;title&gt;&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body class&#x3D;&quot;layui-view-body&quot;&gt;\n    &lt;div class&#x3D;&quot;layui-content&quot;&gt;\n        &lt;div class&#x3D;&quot;layui-row layui-col-space20&quot;&gt;\n            &lt;div class&#x3D;&quot;layui-col-sm6 layui-col-md6&quot;&gt;\n                &lt;div class&#x3D;&quot;layui-card&quot;&gt;\n                    &lt;div class&#x3D;&quot;layui-card-body chart-card&quot;&gt;\n                        &lt;div class&#x3D;&quot;chart-header&quot;&gt;\n                            &lt;div class&#x3D;&quot;metawrap&quot;&gt;\n                                &lt;div class&#x3D;&quot;meta&quot;&gt;\n                                    &lt;span&gt;学生人数&lt;&#x2F;span&gt;\n                                &lt;&#x2F;div&gt;\n                                &lt;div id&#x3D;&quot;data1_size&quot; class&#x3D;&quot;total&quot;&gt;-&lt;&#x2F;div&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n                        &lt;div class&#x3D;&quot;chart-body&quot;&gt;\n                            &lt;div class&#x3D;&quot;contentwrap&quot;&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n\n                    &lt;&#x2F;div&gt;\n                &lt;&#x2F;div&gt;\n            &lt;&#x2F;div&gt;\n            &lt;div class&#x3D;&quot;layui-col-sm6 layui-col-md6&quot;&gt;\n                &lt;div class&#x3D;&quot;layui-card&quot;&gt;\n                    &lt;div class&#x3D;&quot;layui-card-body chart-card&quot;&gt;\n                        &lt;div class&#x3D;&quot;chart-header&quot;&gt;\n                            &lt;div class&#x3D;&quot;metawrap&quot;&gt;\n                                &lt;div class&#x3D;&quot;meta&quot;&gt;\n                                    &lt;span&gt;数学成绩平均值&lt;&#x2F;span&gt;\n                                &lt;&#x2F;div&gt;\n                                &lt;div id&#x3D;&quot;data2_size&quot; class&#x3D;&quot;total&quot;&gt;-&lt;&#x2F;div&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n                        &lt;div class&#x3D;&quot;chart-body&quot;&gt;\n                            &lt;div class&#x3D;&quot;contentwrap&quot;&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n\n                    &lt;&#x2F;div&gt;\n                &lt;&#x2F;div&gt;\n            &lt;&#x2F;div&gt;\n            &lt;div class&#x3D;&quot;layui-col-sm6 layui-col-md6&quot;&gt;\n                &lt;div class&#x3D;&quot;layui-card&quot;&gt;\n                    &lt;div class&#x3D;&quot;layui-card-body chart-card&quot;&gt;\n                        &lt;div class&#x3D;&quot;chart-header&quot;&gt;\n                            &lt;div class&#x3D;&quot;metawrap&quot;&gt;\n                                &lt;div class&#x3D;&quot;meta&quot;&gt;\n                                    &lt;span&gt;Java成绩平均值&lt;&#x2F;span&gt;\n                                &lt;&#x2F;div&gt;\n                                &lt;div id&#x3D;&quot;data3_size&quot; class&#x3D;&quot;total&quot;&gt;-&lt;&#x2F;div&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n                        &lt;div class&#x3D;&quot;chart-body&quot;&gt;\n                            &lt;div class&#x3D;&quot;contentwrap&quot;&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n\n                    &lt;&#x2F;div&gt;\n                &lt;&#x2F;div&gt;\n            &lt;&#x2F;div&gt;\n            &lt;div class&#x3D;&quot;layui-col-sm6 layui-col-md6&quot;&gt;\n                &lt;div class&#x3D;&quot;layui-card&quot;&gt;\n                    &lt;div class&#x3D;&quot;layui-card-body chart-card&quot;&gt;\n                        &lt;div class&#x3D;&quot;chart-header&quot;&gt;\n                            &lt;div class&#x3D;&quot;metawrap&quot;&gt;\n                                &lt;div class&#x3D;&quot;meta&quot;&gt;\n                                    &lt;span&gt;体育成绩平均值&lt;&#x2F;span&gt;\n                                &lt;&#x2F;div&gt;\n                                &lt;div id&#x3D;&quot;data4_size&quot; class&#x3D;&quot;total&quot;&gt;-&lt;&#x2F;div&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n                        &lt;div class&#x3D;&quot;chart-body&quot;&gt;\n                            &lt;div class&#x3D;&quot;contentwrap&quot;&gt;\n                            &lt;&#x2F;div&gt;\n                        &lt;&#x2F;div&gt;\n\n                    &lt;&#x2F;div&gt;\n                &lt;&#x2F;div&gt;\n            &lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;script src&#x3D;&quot;..&#x2F;assets&#x2F;layui.all.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script&gt;\n     var element &#x3D; layui.element;\n    &lt;&#x2F;script&gt;\n    &lt;script&gt;\n        $(function()&#123;\n            &#x2F;&#x2F; ajax与服务器交互\n           $.post(&quot;&#x2F;student&#x2F;console.do&quot;,null,function(data)&#123;\n\n               &#x2F;&#x2F;[&#123;size:总数&#125;,&#123;size:总数]\n               $(&quot;#data1_size&quot;).html(data.data[0].data1_size)\n               $(&quot;#data2_size&quot;).html(data.data[1].data2_size);\n               $(&quot;#data3_size&quot;).html(data.data[2].data3_size);\n               $(&quot;#data4_size&quot;).html(data.data[3].data4_size);\n\n           &#125;,&quot;JSON&quot;);\n        &#125;);\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>","feature":true,"text":"前言本管理系统基于 MVC框架、数据库(Mysql)、Ajax 前端：html、css、js、JQuery、layer事件模板框架 数据库分页使用了Bootstrap 由于时间问题以及对前端的不熟悉，所以本系统套用了别人的前端模板，根据自己需要进行了修改。 MVC框架并没有使用现...","link":"","photos":[],"count_time":{"symbolsCount":"147k","symbolsTime":"2:14"},"categories":[],"tags":[{"name":"java","slug":"java","count":2,"path":"api/tags/java.json"},{"name":"jdbc","slug":"jdbc","count":2,"path":"api/tags/jdbc.json"},{"name":"数据库","slug":"数据库","count":2,"path":"api/tags/数据库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%80%E6%9C%AF%E6%A0%88%E4%BB%8B%E7%BB%8D-%E5%90%8E%E7%AB%AF\"><span class=\"toc-text\">技术栈介绍(后端)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JavaWeb\"><span class=\"toc-text\">JavaWeb</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">项目步骤</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">主要框架</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#JSP%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">JSP优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#JSP%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">JSP缺点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Spring-MVC%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">Spring MVC优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Stripes%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">Stripes优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Stripes%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">Stripes缺点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Struts-2%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">Struts 2优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Struts-2%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">Struts 2缺点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Tapestry%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">Tapestry优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Tapestry%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">Tapestry缺点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Wicket%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">Wicket优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Wicket%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">Wicket缺点</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MVC%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">MVC框架</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-1\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#MVC-%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">MVC 编程模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A1%86%E6%9E%B6%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">框架内容</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">视图</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">模型</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">控制器</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">主要区别</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mysql\"><span class=\"toc-text\">Mysql</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-2\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">应用环境</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">系统特性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E\"><span class=\"toc-text\">存储引擎</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">应用架构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%AD%A6%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">初学基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5-MySQL\"><span class=\"toc-text\">连接 MySQL</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">修改密码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">操作技巧</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%98%BE%E7%A4%BA%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">显示命令*</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%9C%AC%E8%BD%AC%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">文本转数据库</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E5%91%BD%E4%BB%A4%E5%9C%A8DOS%E7%9A%84-mysql-bin%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%89%A7%E8%A1%8C%EF%BC%89\"><span class=\"toc-text\">备份数据库（命令在DOS的\\mysql\\bin目录下执行）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">自动备份 mysql 数据库的方法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BF%98%E5%8E%9F%E5%AF%BC%E5%85%A5\"><span class=\"toc-text\">还原导入</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%80%E6%9C%AF%E6%A0%88%E4%BB%8B%E7%BB%8D-%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">技术栈介绍(前端)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Ajax\"><span class=\"toc-text\">Ajax</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-3\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9D%A5%E6%BA%90\"><span class=\"toc-text\">来源</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#AJAX-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">AJAX 工作原理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">特点</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#layer\"><span class=\"toc-text\">layer</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%B9%E5%87%BA%E5%B1%82%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">弹出层组件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#jQuery\"><span class=\"toc-text\">jQuery</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-4\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E8%A8%80%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">语言特点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E8%8E%B7%E5%8F%96%E6%96%87%E6%A1%A3%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">快速获取文档元素</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8F%90%E4%BE%9B%E6%BC%82%E4%BA%AE%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%8A%A8%E6%80%81%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">提供漂亮的页面动态效果</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAAJAX%E6%97%A0%E5%88%B7%E6%96%B0%E7%BD%91%E9%A1%B5\"><span class=\"toc-text\">创建AJAX无刷新网页</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8F%90%E4%BE%9B%E5%AF%B9JavaScript%E8%AF%AD%E8%A8%80%E7%9A%84%E5%A2%9E%E5%BC%BA\"><span class=\"toc-text\">提供对JavaScript语言的增强</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A2%9E%E5%BC%BA%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86\"><span class=\"toc-text\">增强的事件处理</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9%E7%BD%91%E9%A1%B5%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">更改网页内容</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">语言基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E5%99%A8\"><span class=\"toc-text\">选择器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E5%85%83%E7%B4%A0%E9%80%89%E6%8B%A9%E5%99%A8\"><span class=\"toc-text\">元素选择器</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#id-%E9%80%89%E6%8B%A9%E5%99%A8\"><span class=\"toc-text\">id 选择器</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#class-%E9%80%89%E6%8B%A9%E5%99%A8\"><span class=\"toc-text\">class 选择器</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86\"><span class=\"toc-text\">事件处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#jQuery-%E4%BA%8B%E4%BB%B6%E6%96%B9%E6%B3%95%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">jQuery 事件方法语法</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Bootstrap\"><span class=\"toc-text\">Bootstrap</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-5\"><span class=\"toc-text\">简介</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTML\"><span class=\"toc-text\">HTML</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-6\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%ACHTML-%E7%BD%91%E9%A1%B5%E7%BB%93%E6%9E%84%E5%A6%82%E4%B8%8B%EF%BC%8Cbody%E6%A0%87%E7%AD%BE%E5%86%85%E7%9A%84%E6%89%8D%E6%98%AF%E6%88%91%E4%BB%AC%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E6%89%80%E8%A7%86%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">基本HTML 网页结构如下，body标签内的才是我们在浏览器上所视内容</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">元素属性</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%B4%E9%83%A8\"><span class=\"toc-text\">头部</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E4%BD%93\"><span class=\"toc-text\">主体</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS\"><span class=\"toc-text\">CSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-7\"><span class=\"toc-text\">简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">基本用法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JavaScript\"><span class=\"toc-text\">JavaScript</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-8\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-1\"><span class=\"toc-text\">使用</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">代码介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#bean%E5%8C%85\"><span class=\"toc-text\">bean包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BootStrap%E7%B1%BB\"><span class=\"toc-text\">BootStrap类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Message%E7%B1%BB\"><span class=\"toc-text\">Message类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ResultData%E7%B1%BB\"><span class=\"toc-text\">ResultData类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Students%E7%B1%BB\"><span class=\"toc-text\">Students类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#util%E5%8C%85\"><span class=\"toc-text\">util包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#NameUtil%E7%B1%BB\"><span class=\"toc-text\">NameUtil类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#StudentsOut%E7%B1%BB\"><span class=\"toc-text\">StudentsOut类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RandomUtil%E7%B1%BB\"><span class=\"toc-text\">RandomUtil类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#DruidUtil%E7%B1%BB\"><span class=\"toc-text\">DruidUtil类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#JsonUtil%E7%B1%BB\"><span class=\"toc-text\">JsonUtil类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#exception%E5%8C%85\"><span class=\"toc-text\">exception包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#DuplicateException%E7%B1%BB\"><span class=\"toc-text\">DuplicateException类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mvc%E5%8C%85\"><span class=\"toc-text\">mvc包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ResponseView%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">ResponseView注解</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ResponseBody%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">ResponseBody注解</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ResponseType%E6%9E%9A%E4%B8%BE%E7%B1%BB\"><span class=\"toc-text\">ResponseType枚举类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#DispatcherServlet%E7%B1%BB\"><span class=\"toc-text\">DispatcherServlet类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#HandleMapping%E7%B1%BB\"><span class=\"toc-text\">HandleMapping类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#dao%E5%8C%85\"><span class=\"toc-text\">dao包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#AdminDao%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">AdminDao接口</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#AdminDaoImpl%E7%B1%BB\"><span class=\"toc-text\">AdminDaoImpl类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#StudentsDao\"><span class=\"toc-text\">StudentsDao</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#StudentDaoImpl%E7%B1%BB\"><span class=\"toc-text\">StudentDaoImpl类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Service%E5%8C%85\"><span class=\"toc-text\">Service包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#AdminService%E7%B1%BB\"><span class=\"toc-text\">AdminService类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#StudentService%E7%B1%BB\"><span class=\"toc-text\">StudentService类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Controller%E5%8C%85\"><span class=\"toc-text\">Controller包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#AdminController\"><span class=\"toc-text\">AdminController</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#StudentController%E7%B1%BB\"><span class=\"toc-text\">StudentController类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#html%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">html文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#login-html\"><span class=\"toc-text\">login.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#index-html\"><span class=\"toc-text\">index.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-student-x2F-add-html\"><span class=\"toc-text\">&#x2F;student&#x2F;add.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-student-x2F-course-html\"><span class=\"toc-text\">&#x2F;student&#x2F;course.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-student-x2F-delete-html\"><span class=\"toc-text\">&#x2F;student&#x2F;delete.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-student-x2F-list-html\"><span class=\"toc-text\">&#x2F;student&#x2F;list.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-student-x2F-update-html\"><span class=\"toc-text\">&#x2F;student&#x2F;update.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-other-x2F-add10w-html\"><span class=\"toc-text\">&#x2F;other&#x2F;add10w.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-other-x2F-excel-html\"><span class=\"toc-text\">&#x2F;other&#x2F;excel.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-other-x2F-list-html\"><span class=\"toc-text\">&#x2F;other&#x2F;list.html</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#console-html\"><span class=\"toc-text\">console.html</span></a></li></ol></li></ol></li></ol>","author":{"name":"Soul_15a","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Soul15a","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"MyBatis基础","uid":"5d65e4426fdc02a4d84230b5b1cbd12a","slug":"MyBatis基础","date":"2022-04-20T01:18:26.000Z","updated":"2022-04-20T01:20:09.598Z","comments":true,"path":"api/articles/MyBatis基础.json","keywords":null,"cover":null,"text":"简介MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Ol...","link":"","photos":[],"count_time":{"symbolsCount":178,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"mybatis","slug":"mybatis","count":1,"path":"api/tags/mybatis.json"},{"name":"数据库","slug":"数据库","count":2,"path":"api/tags/数据库.json"}],"author":{"name":"Soul_15a","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Soul15a","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}